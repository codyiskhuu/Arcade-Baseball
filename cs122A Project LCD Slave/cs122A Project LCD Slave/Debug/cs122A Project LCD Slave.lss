
cs122A Project LCD Slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a2  00800100  000009f2  00000a86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002c  008001a2  008001a2  00000b28  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b28  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000b98  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000132d  00000000  00000000  00000ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ef  00000000  00000000  00001fcd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cca  00000000  00000000  000029bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00003688  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006f0  00000000  00000000  0000384c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004d5  00000000  00000000  00003f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00004411  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	3f c1       	rjmp	.+638    	; 0x2b4 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	ef c0       	rjmp	.+478    	; 0x22c <__vector_19>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ef       	ldi	r30, 0xF2	; 242
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 3a       	cpi	r26, 0xA2	; 162
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 ea       	ldi	r26, 0xA2	; 162
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 3c       	cpi	r26, 0xCE	; 206
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	df d3       	rcall	.+1982   	; 0x882 <main>
  c4:	94 c4       	rjmp	.+2344   	; 0x9ee <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <SMmatrix>:
void LCD_On(){
	PORTB = 0x01;
}

void LCD_Off(){
	PORTB = 0x00;
  c8:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <state_matrix>
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	41 f0       	breq	.+16     	; 0xe0 <SMmatrix+0x18>
  d0:	18 f0       	brcs	.+6      	; 0xd8 <SMmatrix+0x10>
  d2:	82 30       	cpi	r24, 0x02	; 2
  d4:	99 f0       	breq	.+38     	; 0xfc <SMmatrix+0x34>
  d6:	a1 c0       	rjmp	.+322    	; 0x21a <SMmatrix+0x152>
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
  de:	9d c0       	rjmp	.+314    	; 0x21a <SMmatrix+0x152>
  e0:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <receivedData>
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	19 f4       	brne	.+6      	; 0xee <SMmatrix+0x26>
  e8:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
  ec:	96 c0       	rjmp	.+300    	; 0x21a <SMmatrix+0x152>
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	88 b9       	out	0x08, r24	; 8
  f2:	12 b8       	out	0x02, r1	; 2
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
  fa:	8f c0       	rjmp	.+286    	; 0x21a <SMmatrix+0x152>
  fc:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 100:	83 30       	cpi	r24, 0x03	; 3
 102:	31 f4       	brne	.+12     	; 0x110 <SMmatrix+0x48>
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
 10a:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <strike>
 10e:	85 c0       	rjmp	.+266    	; 0x21a <SMmatrix+0x152>
 110:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <counter>
 114:	81 11       	cpse	r24, r1
 116:	3a c0       	rjmp	.+116    	; 0x18c <SMmatrix+0xc4>
 118:	80 91 c1 01 	lds	r24, 0x01C1	; 0x8001c1 <left_num>
 11c:	81 30       	cpi	r24, 0x01	; 1
 11e:	31 f4       	brne	.+12     	; 0x12c <SMmatrix+0x64>
 120:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <field>
 124:	80 68       	ori	r24, 0x80	; 128
 126:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <field>
 12a:	05 c0       	rjmp	.+10     	; 0x136 <SMmatrix+0x6e>
 12c:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <field>
 130:	8f 77       	andi	r24, 0x7F	; 127
 132:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <field>
 136:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <mid_num>
 13a:	81 30       	cpi	r24, 0x01	; 1
 13c:	31 f4       	brne	.+12     	; 0x14a <SMmatrix+0x82>
 13e:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <field>
 142:	80 61       	ori	r24, 0x10	; 16
 144:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <field>
 148:	05 c0       	rjmp	.+10     	; 0x154 <SMmatrix+0x8c>
 14a:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <field>
 14e:	8f 7e       	andi	r24, 0xEF	; 239
 150:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <field>
 154:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <right_num>
 158:	81 30       	cpi	r24, 0x01	; 1
 15a:	31 f4       	brne	.+12     	; 0x168 <SMmatrix+0xa0>
 15c:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <field>
 160:	82 60       	ori	r24, 0x02	; 2
 162:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <field>
 166:	05 c0       	rjmp	.+10     	; 0x172 <SMmatrix+0xaa>
 168:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <field>
 16c:	8d 7f       	andi	r24, 0xFD	; 253
 16e:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <field>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <counter>
 178:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <field>
 17c:	80 95       	com	r24
 17e:	88 b9       	out	0x08, r24	; 8
 180:	80 e8       	ldi	r24, 0x80	; 128
 182:	82 b9       	out	0x02, r24	; 2
 184:	82 e0       	ldi	r24, 0x02	; 2
 186:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
 18a:	47 c0       	rjmp	.+142    	; 0x21a <SMmatrix+0x152>
 18c:	81 30       	cpi	r24, 0x01	; 1
 18e:	69 f4       	brne	.+26     	; 0x1aa <SMmatrix+0xe2>
 190:	8f ee       	ldi	r24, 0xEF	; 239
 192:	88 b9       	out	0x08, r24	; 8
 194:	80 e4       	ldi	r24, 0x40	; 64
 196:	82 b9       	out	0x02, r24	; 2
 198:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <counter>
 19c:	8f 5f       	subi	r24, 0xFF	; 255
 19e:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <counter>
 1a2:	82 e0       	ldi	r24, 0x02	; 2
 1a4:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
 1a8:	38 c0       	rjmp	.+112    	; 0x21a <SMmatrix+0x152>
 1aa:	82 30       	cpi	r24, 0x02	; 2
 1ac:	69 f4       	brne	.+26     	; 0x1c8 <SMmatrix+0x100>
 1ae:	8f ef       	ldi	r24, 0xFF	; 255
 1b0:	88 b9       	out	0x08, r24	; 8
 1b2:	80 e2       	ldi	r24, 0x20	; 32
 1b4:	82 b9       	out	0x02, r24	; 2
 1b6:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <counter>
 1ba:	8f 5f       	subi	r24, 0xFF	; 255
 1bc:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <counter>
 1c0:	82 e0       	ldi	r24, 0x02	; 2
 1c2:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
 1c6:	29 c0       	rjmp	.+82     	; 0x21a <SMmatrix+0x152>
 1c8:	83 30       	cpi	r24, 0x03	; 3
 1ca:	69 f4       	brne	.+26     	; 0x1e6 <SMmatrix+0x11e>
 1cc:	8b eb       	ldi	r24, 0xBB	; 187
 1ce:	88 b9       	out	0x08, r24	; 8
 1d0:	80 e1       	ldi	r24, 0x10	; 16
 1d2:	82 b9       	out	0x02, r24	; 2
 1d4:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <counter>
 1d8:	8f 5f       	subi	r24, 0xFF	; 255
 1da:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <counter>
 1de:	82 e0       	ldi	r24, 0x02	; 2
 1e0:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
 1e4:	1a c0       	rjmp	.+52     	; 0x21a <SMmatrix+0x152>
 1e6:	84 30       	cpi	r24, 0x04	; 4
 1e8:	69 f4       	brne	.+26     	; 0x204 <SMmatrix+0x13c>
 1ea:	8f ef       	ldi	r24, 0xFF	; 255
 1ec:	88 b9       	out	0x08, r24	; 8
 1ee:	88 e0       	ldi	r24, 0x08	; 8
 1f0:	82 b9       	out	0x02, r24	; 2
 1f2:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <counter>
 1f6:	8f 5f       	subi	r24, 0xFF	; 255
 1f8:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <counter>
 1fc:	82 e0       	ldi	r24, 0x02	; 2
 1fe:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
 202:	0b c0       	rjmp	.+22     	; 0x21a <SMmatrix+0x152>
 204:	85 30       	cpi	r24, 0x05	; 5
 206:	49 f4       	brne	.+18     	; 0x21a <SMmatrix+0x152>
 208:	8f ee       	ldi	r24, 0xEF	; 239
 20a:	88 b9       	out	0x08, r24	; 8
 20c:	84 e0       	ldi	r24, 0x04	; 4
 20e:	82 b9       	out	0x02, r24	; 2
 210:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <counter>
 214:	82 e0       	ldi	r24, 0x02	; 2
 216:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <state_matrix>
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	08 95       	ret

00000220 <SPI_SlaveInit>:
 220:	80 e4       	ldi	r24, 0x40	; 64
 222:	84 b9       	out	0x04, r24	; 4
 224:	80 ec       	ldi	r24, 0xC0	; 192
 226:	8c bd       	out	0x2c, r24	; 44
 228:	78 94       	sei
 22a:	08 95       	ret

0000022c <__vector_19>:
 22c:	1f 92       	push	r1
 22e:	0f 92       	push	r0
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	0f 92       	push	r0
 234:	11 24       	eor	r1, r1
 236:	8f 93       	push	r24
 238:	8e b5       	in	r24, 0x2e	; 46
 23a:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <receivedData>
 23e:	8f 91       	pop	r24
 240:	0f 90       	pop	r0
 242:	0f be       	out	0x3f, r0	; 63
 244:	0f 90       	pop	r0
 246:	1f 90       	pop	r1
 248:	18 95       	reti

0000024a <TimerSet>:
 24a:	60 93 45 01 	sts	0x0145, r22	; 0x800145 <_avr_timer_M>
 24e:	70 93 46 01 	sts	0x0146, r23	; 0x800146 <_avr_timer_M+0x1>
 252:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <_avr_timer_M+0x2>
 256:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <_avr_timer_M+0x3>
 25a:	60 93 c5 01 	sts	0x01C5, r22	; 0x8001c5 <_avr_timer_cntcurr>
 25e:	70 93 c6 01 	sts	0x01C6, r23	; 0x8001c6 <_avr_timer_cntcurr+0x1>
 262:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <_avr_timer_cntcurr+0x2>
 266:	90 93 c8 01 	sts	0x01C8, r25	; 0x8001c8 <_avr_timer_cntcurr+0x3>
 26a:	08 95       	ret

0000026c <TimerOn>:
 26c:	8b e0       	ldi	r24, 0x0B	; 11
 26e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 272:	8d e7       	ldi	r24, 0x7D	; 125
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 27a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 27e:	82 e0       	ldi	r24, 0x02	; 2
 280:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 284:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 288:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 28c:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
 290:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
 294:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
 298:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
 29c:	80 93 c5 01 	sts	0x01C5, r24	; 0x8001c5 <_avr_timer_cntcurr>
 2a0:	90 93 c6 01 	sts	0x01C6, r25	; 0x8001c6 <_avr_timer_cntcurr+0x1>
 2a4:	a0 93 c7 01 	sts	0x01C7, r26	; 0x8001c7 <_avr_timer_cntcurr+0x2>
 2a8:	b0 93 c8 01 	sts	0x01C8, r27	; 0x8001c8 <_avr_timer_cntcurr+0x3>
 2ac:	8f b7       	in	r24, 0x3f	; 63
 2ae:	80 68       	ori	r24, 0x80	; 128
 2b0:	8f bf       	out	0x3f, r24	; 63
 2b2:	08 95       	ret

000002b4 <__vector_13>:
 2b4:	1f 92       	push	r1
 2b6:	0f 92       	push	r0
 2b8:	0f b6       	in	r0, 0x3f	; 63
 2ba:	0f 92       	push	r0
 2bc:	11 24       	eor	r1, r1
 2be:	8f 93       	push	r24
 2c0:	9f 93       	push	r25
 2c2:	af 93       	push	r26
 2c4:	bf 93       	push	r27
 2c6:	80 91 c5 01 	lds	r24, 0x01C5	; 0x8001c5 <_avr_timer_cntcurr>
 2ca:	90 91 c6 01 	lds	r25, 0x01C6	; 0x8001c6 <_avr_timer_cntcurr+0x1>
 2ce:	a0 91 c7 01 	lds	r26, 0x01C7	; 0x8001c7 <_avr_timer_cntcurr+0x2>
 2d2:	b0 91 c8 01 	lds	r27, 0x01C8	; 0x8001c8 <_avr_timer_cntcurr+0x3>
 2d6:	01 97       	sbiw	r24, 0x01	; 1
 2d8:	a1 09       	sbc	r26, r1
 2da:	b1 09       	sbc	r27, r1
 2dc:	80 93 c5 01 	sts	0x01C5, r24	; 0x8001c5 <_avr_timer_cntcurr>
 2e0:	90 93 c6 01 	sts	0x01C6, r25	; 0x8001c6 <_avr_timer_cntcurr+0x1>
 2e4:	a0 93 c7 01 	sts	0x01C7, r26	; 0x8001c7 <_avr_timer_cntcurr+0x2>
 2e8:	b0 93 c8 01 	sts	0x01C8, r27	; 0x8001c8 <_avr_timer_cntcurr+0x3>
 2ec:	89 2b       	or	r24, r25
 2ee:	8a 2b       	or	r24, r26
 2f0:	8b 2b       	or	r24, r27
 2f2:	99 f4       	brne	.+38     	; 0x31a <__vector_13+0x66>
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <TimerFlag>
 2fa:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
 2fe:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
 302:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
 306:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
 30a:	80 93 c5 01 	sts	0x01C5, r24	; 0x8001c5 <_avr_timer_cntcurr>
 30e:	90 93 c6 01 	sts	0x01C6, r25	; 0x8001c6 <_avr_timer_cntcurr+0x1>
 312:	a0 93 c7 01 	sts	0x01C7, r26	; 0x8001c7 <_avr_timer_cntcurr+0x2>
 316:	b0 93 c8 01 	sts	0x01C8, r27	; 0x8001c8 <_avr_timer_cntcurr+0x3>
 31a:	bf 91       	pop	r27
 31c:	af 91       	pop	r26
 31e:	9f 91       	pop	r25
 320:	8f 91       	pop	r24
 322:	0f 90       	pop	r0
 324:	0f be       	out	0x3f, r0	; 63
 326:	0f 90       	pop	r0
 328:	1f 90       	pop	r1
 32a:	18 95       	reti

0000032c <delay_ms>:
 32c:	18 16       	cp	r1, r24
 32e:	19 06       	cpc	r1, r25
 330:	5c f0       	brlt	.+22     	; 0x348 <delay_ms+0x1c>
 332:	08 95       	ret
 334:	00 00       	nop
 336:	21 50       	subi	r18, 0x01	; 1
 338:	31 09       	sbc	r19, r1
 33a:	e1 f7       	brne	.-8      	; 0x334 <delay_ms+0x8>
 33c:	4f 5f       	subi	r20, 0xFF	; 255
 33e:	5f 4f       	sbci	r21, 0xFF	; 255
 340:	84 17       	cp	r24, r20
 342:	95 07       	cpc	r25, r21
 344:	19 f4       	brne	.+6      	; 0x34c <delay_ms+0x20>
 346:	08 95       	ret
 348:	40 e0       	ldi	r20, 0x00	; 0
 34a:	50 e0       	ldi	r21, 0x00	; 0
 34c:	27 e0       	ldi	r18, 0x07	; 7
 34e:	33 e0       	ldi	r19, 0x03	; 3
 350:	f1 cf       	rjmp	.-30     	; 0x334 <delay_ms+0x8>

00000352 <LCD_WriteCommand>:
 352:	10 98       	cbi	0x02, 0	; 2
 354:	8b b9       	out	0x0b, r24	; 11
 356:	11 9a       	sbi	0x02, 1	; 2
 358:	00 00       	nop
 35a:	11 98       	cbi	0x02, 1	; 2
 35c:	82 e0       	ldi	r24, 0x02	; 2
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	e5 cf       	rjmp	.-54     	; 0x32c <delay_ms>
 362:	08 95       	ret

00000364 <LCD_ClearScreen>:
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	f5 cf       	rjmp	.-22     	; 0x352 <LCD_WriteCommand>
 368:	08 95       	ret

0000036a <LCD_init>:
 36a:	84 e6       	ldi	r24, 0x64	; 100
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	de df       	rcall	.-68     	; 0x32c <delay_ms>
 370:	88 e3       	ldi	r24, 0x38	; 56
 372:	ef df       	rcall	.-34     	; 0x352 <LCD_WriteCommand>
 374:	86 e0       	ldi	r24, 0x06	; 6
 376:	ed df       	rcall	.-38     	; 0x352 <LCD_WriteCommand>
 378:	8f e0       	ldi	r24, 0x0F	; 15
 37a:	eb df       	rcall	.-42     	; 0x352 <LCD_WriteCommand>
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	e9 df       	rcall	.-46     	; 0x352 <LCD_WriteCommand>
 380:	8a e0       	ldi	r24, 0x0A	; 10
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	d3 cf       	rjmp	.-90     	; 0x32c <delay_ms>
 386:	08 95       	ret

00000388 <LCD_WriteData>:
 388:	10 9a       	sbi	0x02, 0	; 2
 38a:	8b b9       	out	0x0b, r24	; 11
 38c:	11 9a       	sbi	0x02, 1	; 2
 38e:	00 00       	nop
 390:	11 98       	cbi	0x02, 1	; 2
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	ca cf       	rjmp	.-108    	; 0x32c <delay_ms>
 398:	08 95       	ret

0000039a <LCD_Cursor>:
 39a:	81 31       	cpi	r24, 0x11	; 17
 39c:	18 f4       	brcc	.+6      	; 0x3a4 <LCD_Cursor+0xa>
 39e:	81 58       	subi	r24, 0x81	; 129
 3a0:	d8 cf       	rjmp	.-80     	; 0x352 <LCD_WriteCommand>
 3a2:	08 95       	ret
 3a4:	81 55       	subi	r24, 0x51	; 81
 3a6:	d5 cf       	rjmp	.-86     	; 0x352 <LCD_WriteCommand>
 3a8:	08 95       	ret

000003aa <LCD_DisplayString>:
 3aa:	1f 93       	push	r17
 3ac:	cf 93       	push	r28
 3ae:	df 93       	push	r29
 3b0:	fb 01       	movw	r30, r22
 3b2:	90 81       	ld	r25, Z
 3b4:	99 23       	and	r25, r25
 3b6:	51 f0       	breq	.+20     	; 0x3cc <LCD_DisplayString+0x22>
 3b8:	eb 01       	movw	r28, r22
 3ba:	11 e0       	ldi	r17, 0x01	; 1
 3bc:	18 0f       	add	r17, r24
 3be:	ed df       	rcall	.-38     	; 0x39a <LCD_Cursor>
 3c0:	89 91       	ld	r24, Y+
 3c2:	e2 df       	rcall	.-60     	; 0x388 <LCD_WriteData>
 3c4:	81 2f       	mov	r24, r17
 3c6:	98 81       	ld	r25, Y
 3c8:	91 11       	cpse	r25, r1
 3ca:	f7 cf       	rjmp	.-18     	; 0x3ba <LCD_DisplayString+0x10>
 3cc:	df 91       	pop	r29
 3ce:	cf 91       	pop	r28
 3d0:	1f 91       	pop	r17
 3d2:	08 95       	ret

000003d4 <SMLCD>:
 3d4:	81 30       	cpi	r24, 0x01	; 1
 3d6:	91 05       	cpc	r25, r1
 3d8:	e9 f0       	breq	.+58     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3da:	1c f4       	brge	.+6      	; 0x3e2 <SMLCD+0xe>
 3dc:	89 2b       	or	r24, r25
 3de:	49 f0       	breq	.+18     	; 0x3f2 <SMLCD+0x1e>
 3e0:	44 c2       	rjmp	.+1160   	; 0x86a <__LOCK_REGION_LENGTH__+0x46a>
 3e2:	82 30       	cpi	r24, 0x02	; 2
 3e4:	91 05       	cpc	r25, r1
 3e6:	09 f4       	brne	.+2      	; 0x3ea <SMLCD+0x16>
 3e8:	2d c2       	rjmp	.+1114   	; 0x844 <__LOCK_REGION_LENGTH__+0x444>
 3ea:	03 97       	sbiw	r24, 0x03	; 3
 3ec:	09 f4       	brne	.+2      	; 0x3f0 <SMLCD+0x1c>
 3ee:	34 c2       	rjmp	.+1128   	; 0x858 <__LOCK_REGION_LENGTH__+0x458>
 3f0:	3c c2       	rjmp	.+1144   	; 0x86a <__LOCK_REGION_LENGTH__+0x46a>
 3f2:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <outter>
 3f6:	f0 e0       	ldi	r31, 0x00	; 0
 3f8:	e0 50       	subi	r30, 0x00	; 0
 3fa:	ff 4f       	sbci	r31, 0xFF	; 255
 3fc:	80 81       	ld	r24, Z
 3fe:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <left_num>
 402:	81 81       	ldd	r24, Z+1	; 0x01
 404:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <mid_num>
 408:	82 81       	ldd	r24, Z+2	; 0x02
 40a:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <right_num>
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	08 95       	ret
 414:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <receivedData>
 418:	81 30       	cpi	r24, 0x01	; 1
 41a:	39 f4       	brne	.+14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41c:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 420:	a1 df       	rcall	.-190    	; 0x364 <LCD_ClearScreen>
 422:	69 e4       	ldi	r22, 0x49	; 73
 424:	71 e0       	ldi	r23, 0x01	; 1
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	c0 df       	rcall	.-128    	; 0x3aa <LCD_DisplayString>
 42a:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <receivedData>
 42e:	82 30       	cpi	r24, 0x02	; 2
 430:	c1 f4       	brne	.+48     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 432:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <outter>
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	e0 50       	subi	r30, 0x00	; 0
 43a:	ff 4f       	sbci	r31, 0xFF	; 255
 43c:	80 81       	ld	r24, Z
 43e:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <left_num>
 442:	81 81       	ldd	r24, Z+1	; 0x01
 444:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <mid_num>
 448:	82 81       	ldd	r24, Z+2	; 0x02
 44a:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <right_num>
 44e:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 452:	88 df       	rcall	.-240    	; 0x364 <LCD_ClearScreen>
 454:	6a e6       	ldi	r22, 0x6A	; 106
 456:	71 e0       	ldi	r23, 0x01	; 1
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	a7 df       	rcall	.-178    	; 0x3aa <LCD_DisplayString>
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	08 95       	ret
 462:	83 30       	cpi	r24, 0x03	; 3
 464:	c1 f4       	brne	.+48     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 466:	7e df       	rcall	.-260    	; 0x364 <LCD_ClearScreen>
 468:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 46c:	65 e8       	ldi	r22, 0x85	; 133
 46e:	71 e0       	ldi	r23, 0x01	; 1
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	9b df       	rcall	.-202    	; 0x3aa <LCD_DisplayString>
 474:	8d e0       	ldi	r24, 0x0D	; 13
 476:	91 df       	rcall	.-222    	; 0x39a <LCD_Cursor>
 478:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <score>
 47c:	80 5d       	subi	r24, 0xD0	; 208
 47e:	84 df       	rcall	.-248    	; 0x388 <LCD_WriteData>
 480:	8d e1       	ldi	r24, 0x1D	; 29
 482:	8b df       	rcall	.-234    	; 0x39a <LCD_Cursor>
 484:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <hi_score>
 488:	80 5d       	subi	r24, 0xD0	; 208
 48a:	7e df       	rcall	.-260    	; 0x388 <LCD_WriteData>
 48c:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <score>
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	08 95       	ret
 496:	84 30       	cpi	r24, 0x04	; 4
 498:	89 f4       	brne	.+34     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 49a:	64 df       	rcall	.-312    	; 0x364 <LCD_ClearScreen>
 49c:	65 e9       	ldi	r22, 0x95	; 149
 49e:	71 e0       	ldi	r23, 0x01	; 1
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	83 df       	rcall	.-250    	; 0x3aa <LCD_DisplayString>
 4a4:	8d e0       	ldi	r24, 0x0D	; 13
 4a6:	79 df       	rcall	.-270    	; 0x39a <LCD_Cursor>
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	86 d2       	rcall	.+1292   	; 0x9ba <eeprom_read_byte>
 4ae:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <hi_score>
 4b2:	80 5d       	subi	r24, 0xD0	; 208
 4b4:	69 df       	rcall	.-302    	; 0x388 <LCD_WriteData>
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	08 95       	ret
 4bc:	80 31       	cpi	r24, 0x10	; 16
 4be:	09 f0       	breq	.+2      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4c0:	7a c0       	rjmp	.+244    	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 4c2:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 4c6:	80 91 c1 01 	lds	r24, 0x01C1	; 0x8001c1 <left_num>
 4ca:	81 11       	cpse	r24, r1
 4cc:	0e c0       	rjmp	.+28     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4ce:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 4d2:	8f 5f       	subi	r24, 0xFF	; 255
 4d4:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <strike>
 4d8:	8a e1       	ldi	r24, 0x1A	; 26
 4da:	5f df       	rcall	.-322    	; 0x39a <LCD_Cursor>
 4dc:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 4e0:	80 5d       	subi	r24, 0xD0	; 208
 4e2:	52 df       	rcall	.-348    	; 0x388 <LCD_WriteData>
 4e4:	83 e0       	ldi	r24, 0x03	; 3
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	3a c0       	rjmp	.+116    	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 4ea:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <first_base>
 4ee:	8f 5f       	subi	r24, 0xFF	; 255
 4f0:	82 30       	cpi	r24, 0x02	; 2
 4f2:	19 f0       	breq	.+6      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f4:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <first_base>
 4f8:	08 c0       	rjmp	.+16     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <first_base>
 500:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <second_base>
 504:	8f 5f       	subi	r24, 0xFF	; 255
 506:	80 93 bd 01 	sts	0x01BD, r24	; 0x8001bd <second_base>
 50a:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <second_base>
 50e:	82 30       	cpi	r24, 0x02	; 2
 510:	41 f4       	brne	.+16     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	80 93 bd 01 	sts	0x01BD, r24	; 0x8001bd <second_base>
 518:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <third_base>
 51c:	8f 5f       	subi	r24, 0xFF	; 255
 51e:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <third_base>
 522:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <third_base>
 526:	82 30       	cpi	r24, 0x02	; 2
 528:	39 f4       	brne	.+14     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 52a:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <third_base>
 52e:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <home_base>
 532:	8f 5f       	subi	r24, 0xFF	; 255
 534:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <home_base>
 538:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <home_base>
 53c:	81 30       	cpi	r24, 0x01	; 1
 53e:	39 f4       	brne	.+14     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 540:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <score>
 544:	8f 5f       	subi	r24, 0xFF	; 255
 546:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <score>
 54a:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <home_base>
 54e:	88 e0       	ldi	r24, 0x08	; 8
 550:	24 df       	rcall	.-440    	; 0x39a <LCD_Cursor>
 552:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <score>
 556:	80 5d       	subi	r24, 0xD0	; 208
 558:	17 df       	rcall	.-466    	; 0x388 <LCD_WriteData>
 55a:	82 e0       	ldi	r24, 0x02	; 2
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	20 91 c4 01 	lds	r18, 0x01C4	; 0x8001c4 <outter>
 562:	2d 5f       	subi	r18, 0xFD	; 253
 564:	23 34       	cpi	r18, 0x43	; 67
 566:	18 f4       	brcc	.+6      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 568:	20 93 c4 01 	sts	0x01C4, r18	; 0x8001c4 <outter>
 56c:	02 c0       	rjmp	.+4      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 56e:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <outter>
 572:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <outter>
 576:	f0 e0       	ldi	r31, 0x00	; 0
 578:	e0 50       	subi	r30, 0x00	; 0
 57a:	ff 4f       	sbci	r31, 0xFF	; 255
 57c:	20 81       	ld	r18, Z
 57e:	20 93 c1 01 	sts	0x01C1, r18	; 0x8001c1 <left_num>
 582:	21 81       	ldd	r18, Z+1	; 0x01
 584:	20 93 c0 01 	sts	0x01C0, r18	; 0x8001c0 <mid_num>
 588:	22 81       	ldd	r18, Z+2	; 0x02
 58a:	20 93 bf 01 	sts	0x01BF, r18	; 0x8001bf <right_num>
 58e:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <strike>
 592:	23 30       	cpi	r18, 0x03	; 3
 594:	09 f0       	breq	.+2      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 596:	74 c1       	rjmp	.+744    	; 0x880 <__LOCK_REGION_LENGTH__+0x480>
 598:	60 91 c3 01 	lds	r22, 0x01C3	; 0x8001c3 <score>
 59c:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <hi_score>
 5a0:	86 17       	cp	r24, r22
 5a2:	18 f4       	brcc	.+6      	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	10 d2       	rcall	.+1056   	; 0x9ca <eeprom_update_byte>
 5aa:	83 e0       	ldi	r24, 0x03	; 3
 5ac:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <receivedData>
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	08 95       	ret
 5b6:	81 31       	cpi	r24, 0x11	; 17
 5b8:	09 f0       	breq	.+2      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5ba:	7a c0       	rjmp	.+244    	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 5bc:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 5c0:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <mid_num>
 5c4:	81 11       	cpse	r24, r1
 5c6:	0e c0       	rjmp	.+28     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5c8:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 5cc:	8f 5f       	subi	r24, 0xFF	; 255
 5ce:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <strike>
 5d2:	8a e1       	ldi	r24, 0x1A	; 26
 5d4:	e2 de       	rcall	.-572    	; 0x39a <LCD_Cursor>
 5d6:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 5da:	80 5d       	subi	r24, 0xD0	; 208
 5dc:	d5 de       	rcall	.-598    	; 0x388 <LCD_WriteData>
 5de:	83 e0       	ldi	r24, 0x03	; 3
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	3a c0       	rjmp	.+116    	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 5e4:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <first_base>
 5e8:	8f 5f       	subi	r24, 0xFF	; 255
 5ea:	82 30       	cpi	r24, 0x02	; 2
 5ec:	19 f0       	breq	.+6      	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5ee:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <first_base>
 5f2:	08 c0       	rjmp	.+16     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <first_base>
 5fa:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <second_base>
 5fe:	8f 5f       	subi	r24, 0xFF	; 255
 600:	80 93 bd 01 	sts	0x01BD, r24	; 0x8001bd <second_base>
 604:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <second_base>
 608:	82 30       	cpi	r24, 0x02	; 2
 60a:	41 f4       	brne	.+16     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 60c:	81 e0       	ldi	r24, 0x01	; 1
 60e:	80 93 bd 01 	sts	0x01BD, r24	; 0x8001bd <second_base>
 612:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <third_base>
 616:	8f 5f       	subi	r24, 0xFF	; 255
 618:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <third_base>
 61c:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <third_base>
 620:	82 30       	cpi	r24, 0x02	; 2
 622:	39 f4       	brne	.+14     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 624:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <third_base>
 628:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <home_base>
 62c:	8f 5f       	subi	r24, 0xFF	; 255
 62e:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <home_base>
 632:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <home_base>
 636:	81 30       	cpi	r24, 0x01	; 1
 638:	39 f4       	brne	.+14     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 63a:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <score>
 63e:	8f 5f       	subi	r24, 0xFF	; 255
 640:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <score>
 644:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <home_base>
 648:	88 e0       	ldi	r24, 0x08	; 8
 64a:	a7 de       	rcall	.-690    	; 0x39a <LCD_Cursor>
 64c:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <score>
 650:	80 5d       	subi	r24, 0xD0	; 208
 652:	9a de       	rcall	.-716    	; 0x388 <LCD_WriteData>
 654:	82 e0       	ldi	r24, 0x02	; 2
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	20 91 c4 01 	lds	r18, 0x01C4	; 0x8001c4 <outter>
 65c:	2d 5f       	subi	r18, 0xFD	; 253
 65e:	23 34       	cpi	r18, 0x43	; 67
 660:	18 f4       	brcc	.+6      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 662:	20 93 c4 01 	sts	0x01C4, r18	; 0x8001c4 <outter>
 666:	02 c0       	rjmp	.+4      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 668:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <outter>
 66c:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <outter>
 670:	f0 e0       	ldi	r31, 0x00	; 0
 672:	e0 50       	subi	r30, 0x00	; 0
 674:	ff 4f       	sbci	r31, 0xFF	; 255
 676:	20 81       	ld	r18, Z
 678:	20 93 c1 01 	sts	0x01C1, r18	; 0x8001c1 <left_num>
 67c:	21 81       	ldd	r18, Z+1	; 0x01
 67e:	20 93 c0 01 	sts	0x01C0, r18	; 0x8001c0 <mid_num>
 682:	22 81       	ldd	r18, Z+2	; 0x02
 684:	20 93 bf 01 	sts	0x01BF, r18	; 0x8001bf <right_num>
 688:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <strike>
 68c:	23 30       	cpi	r18, 0x03	; 3
 68e:	09 f0       	breq	.+2      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 690:	f7 c0       	rjmp	.+494    	; 0x880 <__LOCK_REGION_LENGTH__+0x480>
 692:	60 91 c3 01 	lds	r22, 0x01C3	; 0x8001c3 <score>
 696:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <hi_score>
 69a:	86 17       	cp	r24, r22
 69c:	18 f4       	brcc	.+6      	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 69e:	81 e0       	ldi	r24, 0x01	; 1
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	93 d1       	rcall	.+806    	; 0x9ca <eeprom_update_byte>
 6a4:	83 e0       	ldi	r24, 0x03	; 3
 6a6:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <receivedData>
 6aa:	81 e0       	ldi	r24, 0x01	; 1
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	08 95       	ret
 6b0:	82 31       	cpi	r24, 0x12	; 18
 6b2:	09 f0       	breq	.+2      	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6b4:	7a c0       	rjmp	.+244    	; 0x7aa <__LOCK_REGION_LENGTH__+0x3aa>
 6b6:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 6ba:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <right_num>
 6be:	81 11       	cpse	r24, r1
 6c0:	0e c0       	rjmp	.+28     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6c2:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 6c6:	8f 5f       	subi	r24, 0xFF	; 255
 6c8:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <strike>
 6cc:	8a e1       	ldi	r24, 0x1A	; 26
 6ce:	65 de       	rcall	.-822    	; 0x39a <LCD_Cursor>
 6d0:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 6d4:	80 5d       	subi	r24, 0xD0	; 208
 6d6:	58 de       	rcall	.-848    	; 0x388 <LCD_WriteData>
 6d8:	83 e0       	ldi	r24, 0x03	; 3
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	3a c0       	rjmp	.+116    	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 6de:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <first_base>
 6e2:	8f 5f       	subi	r24, 0xFF	; 255
 6e4:	82 30       	cpi	r24, 0x02	; 2
 6e6:	19 f0       	breq	.+6      	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6e8:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <first_base>
 6ec:	08 c0       	rjmp	.+16     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6ee:	81 e0       	ldi	r24, 0x01	; 1
 6f0:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <first_base>
 6f4:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <second_base>
 6f8:	8f 5f       	subi	r24, 0xFF	; 255
 6fa:	80 93 bd 01 	sts	0x01BD, r24	; 0x8001bd <second_base>
 6fe:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <second_base>
 702:	82 30       	cpi	r24, 0x02	; 2
 704:	41 f4       	brne	.+16     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 706:	81 e0       	ldi	r24, 0x01	; 1
 708:	80 93 bd 01 	sts	0x01BD, r24	; 0x8001bd <second_base>
 70c:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <third_base>
 710:	8f 5f       	subi	r24, 0xFF	; 255
 712:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <third_base>
 716:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <third_base>
 71a:	82 30       	cpi	r24, 0x02	; 2
 71c:	39 f4       	brne	.+14     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 71e:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <third_base>
 722:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <home_base>
 726:	8f 5f       	subi	r24, 0xFF	; 255
 728:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <home_base>
 72c:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <home_base>
 730:	81 30       	cpi	r24, 0x01	; 1
 732:	39 f4       	brne	.+14     	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
 734:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <score>
 738:	8f 5f       	subi	r24, 0xFF	; 255
 73a:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <score>
 73e:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <home_base>
 742:	88 e0       	ldi	r24, 0x08	; 8
 744:	2a de       	rcall	.-940    	; 0x39a <LCD_Cursor>
 746:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <score>
 74a:	80 5d       	subi	r24, 0xD0	; 208
 74c:	1d de       	rcall	.-966    	; 0x388 <LCD_WriteData>
 74e:	82 e0       	ldi	r24, 0x02	; 2
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	20 91 c4 01 	lds	r18, 0x01C4	; 0x8001c4 <outter>
 756:	2d 5f       	subi	r18, 0xFD	; 253
 758:	23 34       	cpi	r18, 0x43	; 67
 75a:	18 f4       	brcc	.+6      	; 0x762 <__LOCK_REGION_LENGTH__+0x362>
 75c:	20 93 c4 01 	sts	0x01C4, r18	; 0x8001c4 <outter>
 760:	02 c0       	rjmp	.+4      	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 762:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <outter>
 766:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <outter>
 76a:	f0 e0       	ldi	r31, 0x00	; 0
 76c:	e0 50       	subi	r30, 0x00	; 0
 76e:	ff 4f       	sbci	r31, 0xFF	; 255
 770:	20 81       	ld	r18, Z
 772:	20 93 c1 01 	sts	0x01C1, r18	; 0x8001c1 <left_num>
 776:	21 81       	ldd	r18, Z+1	; 0x01
 778:	20 93 c0 01 	sts	0x01C0, r18	; 0x8001c0 <mid_num>
 77c:	22 81       	ldd	r18, Z+2	; 0x02
 77e:	20 93 bf 01 	sts	0x01BF, r18	; 0x8001bf <right_num>
 782:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <strike>
 786:	23 30       	cpi	r18, 0x03	; 3
 788:	09 f0       	breq	.+2      	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 78a:	7a c0       	rjmp	.+244    	; 0x880 <__LOCK_REGION_LENGTH__+0x480>
 78c:	60 91 c3 01 	lds	r22, 0x01C3	; 0x8001c3 <score>
 790:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <hi_score>
 794:	86 17       	cp	r24, r22
 796:	18 f4       	brcc	.+6      	; 0x79e <__LOCK_REGION_LENGTH__+0x39e>
 798:	81 e0       	ldi	r24, 0x01	; 1
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	16 d1       	rcall	.+556    	; 0x9ca <eeprom_update_byte>
 79e:	83 e0       	ldi	r24, 0x03	; 3
 7a0:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <receivedData>
 7a4:	81 e0       	ldi	r24, 0x01	; 1
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	08 95       	ret
 7aa:	83 31       	cpi	r24, 0x13	; 19
 7ac:	c1 f5       	brne	.+112    	; 0x81e <__LOCK_REGION_LENGTH__+0x41e>
 7ae:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 7b2:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 7b6:	8f 5f       	subi	r24, 0xFF	; 255
 7b8:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <strike>
 7bc:	8a e1       	ldi	r24, 0x1A	; 26
 7be:	ed dd       	rcall	.-1062   	; 0x39a <LCD_Cursor>
 7c0:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 7c4:	80 5d       	subi	r24, 0xD0	; 208
 7c6:	e0 dd       	rcall	.-1088   	; 0x388 <LCD_WriteData>
 7c8:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <outter>
 7cc:	8d 5f       	subi	r24, 0xFD	; 253
 7ce:	83 34       	cpi	r24, 0x43	; 67
 7d0:	18 f4       	brcc	.+6      	; 0x7d8 <__LOCK_REGION_LENGTH__+0x3d8>
 7d2:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <outter>
 7d6:	02 c0       	rjmp	.+4      	; 0x7dc <__LOCK_REGION_LENGTH__+0x3dc>
 7d8:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <outter>
 7dc:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <outter>
 7e0:	f0 e0       	ldi	r31, 0x00	; 0
 7e2:	e0 50       	subi	r30, 0x00	; 0
 7e4:	ff 4f       	sbci	r31, 0xFF	; 255
 7e6:	80 81       	ld	r24, Z
 7e8:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <left_num>
 7ec:	81 81       	ldd	r24, Z+1	; 0x01
 7ee:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <mid_num>
 7f2:	82 81       	ldd	r24, Z+2	; 0x02
 7f4:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <right_num>
 7f8:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <strike>
 7fc:	83 30       	cpi	r24, 0x03	; 3
 7fe:	c1 f5       	brne	.+112    	; 0x870 <__LOCK_REGION_LENGTH__+0x470>
 800:	60 91 c3 01 	lds	r22, 0x01C3	; 0x8001c3 <score>
 804:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <hi_score>
 808:	86 17       	cp	r24, r22
 80a:	18 f4       	brcc	.+6      	; 0x812 <__LOCK_REGION_LENGTH__+0x412>
 80c:	81 e0       	ldi	r24, 0x01	; 1
 80e:	90 e0       	ldi	r25, 0x00	; 0
 810:	dc d0       	rcall	.+440    	; 0x9ca <eeprom_update_byte>
 812:	83 e0       	ldi	r24, 0x03	; 3
 814:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <receivedData>
 818:	81 e0       	ldi	r24, 0x01	; 1
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	08 95       	ret
 81e:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 822:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <outter>
 826:	f0 e0       	ldi	r31, 0x00	; 0
 828:	e0 50       	subi	r30, 0x00	; 0
 82a:	ff 4f       	sbci	r31, 0xFF	; 255
 82c:	80 81       	ld	r24, Z
 82e:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <left_num>
 832:	81 81       	ldd	r24, Z+1	; 0x01
 834:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <mid_num>
 838:	82 81       	ldd	r24, Z+2	; 0x02
 83a:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <right_num>
 83e:	81 e0       	ldi	r24, 0x01	; 1
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	08 95       	ret
 844:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <receivedData>
 848:	80 51       	subi	r24, 0x10	; 16
 84a:	83 30       	cpi	r24, 0x03	; 3
 84c:	a0 f4       	brcc	.+40     	; 0x876 <__LOCK_REGION_LENGTH__+0x476>
 84e:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 852:	82 e0       	ldi	r24, 0x02	; 2
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	08 95       	ret
 858:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <receivedData>
 85c:	83 31       	cpi	r24, 0x13	; 19
 85e:	71 f4       	brne	.+28     	; 0x87c <__LOCK_REGION_LENGTH__+0x47c>
 860:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <receivedData>
 864:	83 e0       	ldi	r24, 0x03	; 3
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	08 95       	ret
 86a:	80 e0       	ldi	r24, 0x00	; 0
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	08 95       	ret
 870:	83 e0       	ldi	r24, 0x03	; 3
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	08 95       	ret
 876:	81 e0       	ldi	r24, 0x01	; 1
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	08 95       	ret
 87c:	81 e0       	ldi	r24, 0x01	; 1
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	08 95       	ret

00000882 <main>:


//////////////////////////////////////////////////////////////////////////

int main(void)
{
 882:	cf 93       	push	r28
 884:	df 93       	push	r29
 886:	00 d0       	rcall	.+0      	; 0x888 <main+0x6>
 888:	00 d0       	rcall	.+0      	; 0x88a <main+0x8>
 88a:	cd b7       	in	r28, 0x3d	; 61
 88c:	de b7       	in	r29, 0x3e	; 62
	
	DDRA = 0xFF; PORTA = 0x00;//slave //will as a output rn
 88e:	8f ef       	ldi	r24, 0xFF	; 255
 890:	81 b9       	out	0x01, r24	; 1
 892:	12 b8       	out	0x02, r1	; 2
	//DDRB = DDRB & 0x0F; PORTB = PORTB & 0xF0;//Input for the Sensor //at the moment we are using a button
	//DDRC = 0xF0; PORTC = 0x0F;//keypad
	DDRD = 0xFF; PORTD = 0x00;//lcd data bus
 894:	8a b9       	out	0x0a, r24	; 10
 896:	1b b8       	out	0x0b, r1	; 11
	
	DDRB = 0xFF; PORTB = 0x00;//PORTB as output for the matrix: Coloum
 898:	84 b9       	out	0x04, r24	; 4
 89a:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;//PORTC as output rows
 89c:	87 b9       	out	0x07, r24	; 7
 89e:	18 b8       	out	0x08, r1	; 8
	if(eeprom_read_byte((uint8_t*)1) == 255) {
 8a0:	81 e0       	ldi	r24, 0x01	; 1
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	8a d0       	rcall	.+276    	; 0x9ba <eeprom_read_byte>
 8a6:	8f 3f       	cpi	r24, 0xFF	; 255
 8a8:	21 f4       	brne	.+8      	; 0x8b2 <main+0x30>
		eeprom_update_byte((uint8_t*)1, (uint8_t) 0);
 8aa:	60 e0       	ldi	r22, 0x00	; 0
 8ac:	81 e0       	ldi	r24, 0x01	; 1
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	8c d0       	rcall	.+280    	; 0x9ca <eeprom_update_byte>
	}
	hi_score = eeprom_read_byte((uint8_t*)1);
 8b2:	81 e0       	ldi	r24, 0x01	; 1
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	81 d0       	rcall	.+258    	; 0x9ba <eeprom_read_byte>
 8b8:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <hi_score>
	
	static task task1, task2;
	task *tasks[] = { &task1, &task2};
 8bc:	ad ea       	ldi	r26, 0xAD	; 173
 8be:	b1 e0       	ldi	r27, 0x01	; 1
 8c0:	ba 83       	std	Y+2, r27	; 0x02
 8c2:	a9 83       	std	Y+1, r26	; 0x01
 8c4:	e2 ea       	ldi	r30, 0xA2	; 162
 8c6:	f1 e0       	ldi	r31, 0x01	; 1
 8c8:	fc 83       	std	Y+4, r31	; 0x04
 8ca:	eb 83       	std	Y+3, r30	; 0x03
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);
	
	
	//task1 - for the LCD input
	task1.state = screen_Init;
 8cc:	1c 92       	st	X, r1
	task1.period = 50;
 8ce:	42 e3       	ldi	r20, 0x32	; 50
 8d0:	50 e0       	ldi	r21, 0x00	; 0
 8d2:	60 e0       	ldi	r22, 0x00	; 0
 8d4:	70 e0       	ldi	r23, 0x00	; 0
 8d6:	11 96       	adiw	r26, 0x01	; 1
 8d8:	4d 93       	st	X+, r20
 8da:	5d 93       	st	X+, r21
 8dc:	6d 93       	st	X+, r22
 8de:	7c 93       	st	X, r23
 8e0:	14 97       	sbiw	r26, 0x04	; 4
	task1.elapsedTime = task1.period;
 8e2:	15 96       	adiw	r26, 0x05	; 5
 8e4:	4d 93       	st	X+, r20
 8e6:	5d 93       	st	X+, r21
 8e8:	6d 93       	st	X+, r22
 8ea:	7c 93       	st	X, r23
 8ec:	18 97       	sbiw	r26, 0x08	; 8
	task1.TickFct = &SMLCD;
 8ee:	8a ee       	ldi	r24, 0xEA	; 234
 8f0:	91 e0       	ldi	r25, 0x01	; 1
 8f2:	1a 96       	adiw	r26, 0x0a	; 10
 8f4:	9c 93       	st	X, r25
 8f6:	8e 93       	st	-X, r24
 8f8:	19 97       	sbiw	r26, 0x09	; 9

	task2.state = matrix_Init;
 8fa:	10 82       	st	Z, r1
	task2.period = 1;
 8fc:	81 e0       	ldi	r24, 0x01	; 1
 8fe:	90 e0       	ldi	r25, 0x00	; 0
 900:	a0 e0       	ldi	r26, 0x00	; 0
 902:	b0 e0       	ldi	r27, 0x00	; 0
 904:	81 83       	std	Z+1, r24	; 0x01
 906:	92 83       	std	Z+2, r25	; 0x02
 908:	a3 83       	std	Z+3, r26	; 0x03
 90a:	b4 83       	std	Z+4, r27	; 0x04
	task2.elapsedTime = task2.period;
 90c:	85 83       	std	Z+5, r24	; 0x05
 90e:	96 83       	std	Z+6, r25	; 0x06
 910:	a7 83       	std	Z+7, r26	; 0x07
 912:	b0 87       	std	Z+8, r27	; 0x08
	task2.TickFct = &SMmatrix;
 914:	84 e6       	ldi	r24, 0x64	; 100
 916:	90 e0       	ldi	r25, 0x00	; 0
 918:	92 87       	std	Z+10, r25	; 0x0a
 91a:	81 87       	std	Z+9, r24	; 0x09

/*Initializations*/
	TimerSet(1);
 91c:	61 e0       	ldi	r22, 0x01	; 1
 91e:	70 e0       	ldi	r23, 0x00	; 0
 920:	80 e0       	ldi	r24, 0x00	; 0
	TimerOn();
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	92 dc       	rcall	.-1756   	; 0x24a <TimerSet>
	SPI_SlaveInit();
 926:	a2 dc       	rcall	.-1724   	; 0x26c <TimerOn>
	LCD_init();
 928:	7b dc       	rcall	.-1802   	; 0x220 <SPI_SlaveInit>
 92a:	1f dd       	rcall	.-1474   	; 0x36a <LCD_init>
	LCD_DisplayString(1, "Oh! That's a    Baseball L2Start");
 92c:	69 e4       	ldi	r22, 0x49	; 73
 92e:	71 e0       	ldi	r23, 0x01	; 1
 930:	81 e0       	ldi	r24, 0x01	; 1
 932:	3b dd       	rcall	.-1418   	; 0x3aa <LCD_DisplayString>
 934:	7e 01       	movw	r14, r28
 936:	85 e0       	ldi	r24, 0x05	; 5
 938:	e8 0e       	add	r14, r24
 93a:	f1 1c       	adc	r15, r1
 93c:	de 01       	movw	r26, r28
 93e:	11 96       	adiw	r26, 0x01	; 1
 940:	6d 01       	movw	r12, r26
 942:	f6 01       	movw	r30, r12
	
	
	unsigned short i;
	while(1){
		for (i = 0; i < numTasks; i++){
			if (tasks[i]->elapsedTime == tasks[i]->period){
 944:	01 91       	ld	r16, Z+
 946:	11 91       	ld	r17, Z+
 948:	6f 01       	movw	r12, r30
 94a:	d8 01       	movw	r26, r16
 94c:	15 96       	adiw	r26, 0x05	; 5
 94e:	4d 91       	ld	r20, X+
 950:	5d 91       	ld	r21, X+
 952:	6d 91       	ld	r22, X+
 954:	7c 91       	ld	r23, X
 956:	18 97       	sbiw	r26, 0x08	; 8
 958:	11 96       	adiw	r26, 0x01	; 1
 95a:	8d 91       	ld	r24, X+
 95c:	9d 91       	ld	r25, X+
 95e:	0d 90       	ld	r0, X+
 960:	bc 91       	ld	r27, X
 962:	a0 2d       	mov	r26, r0
 964:	48 17       	cp	r20, r24
 966:	59 07       	cpc	r21, r25
 968:	6a 07       	cpc	r22, r26
 96a:	7b 07       	cpc	r23, r27
 96c:	81 f4       	brne	.+32     	; 0x98e <main+0x10c>
 96e:	f8 01       	movw	r30, r16
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 970:	80 81       	ld	r24, Z
 972:	01 84       	ldd	r0, Z+9	; 0x09
 974:	f2 85       	ldd	r31, Z+10	; 0x0a
 976:	e0 2d       	mov	r30, r0
 978:	08 2e       	mov	r0, r24
 97a:	00 0c       	add	r0, r0
 97c:	99 0b       	sbc	r25, r25
 97e:	09 95       	icall
 980:	d8 01       	movw	r26, r16
 982:	8c 93       	st	X, r24
 984:	f8 01       	movw	r30, r16
				tasks[i]->elapsedTime = 0;
 986:	15 82       	std	Z+5, r1	; 0x05
 988:	16 82       	std	Z+6, r1	; 0x06
 98a:	17 82       	std	Z+7, r1	; 0x07
 98c:	10 86       	std	Z+8, r1	; 0x08
 98e:	f8 01       	movw	r30, r16
			}
			tasks[i]->elapsedTime += 1; //value is gcd
 990:	85 81       	ldd	r24, Z+5	; 0x05
 992:	96 81       	ldd	r25, Z+6	; 0x06
 994:	a7 81       	ldd	r26, Z+7	; 0x07
 996:	b0 85       	ldd	r27, Z+8	; 0x08
 998:	01 96       	adiw	r24, 0x01	; 1
 99a:	a1 1d       	adc	r26, r1
 99c:	b1 1d       	adc	r27, r1
 99e:	85 83       	std	Z+5, r24	; 0x05
 9a0:	96 83       	std	Z+6, r25	; 0x06
 9a2:	a7 83       	std	Z+7, r26	; 0x07
 9a4:	b0 87       	std	Z+8, r27	; 0x08
 9a6:	ce 14       	cp	r12, r14
	//LCD_WriteData(score +'0');
	
	
	unsigned short i;
	while(1){
		for (i = 0; i < numTasks; i++){
 9a8:	df 04       	cpc	r13, r15
 9aa:	59 f6       	brne	.-106    	; 0x942 <main+0xc0>
 9ac:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <TimerFlag>
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1; //value is gcd
		}
		while(!TimerFlag);
 9b0:	88 23       	and	r24, r24
 9b2:	e1 f3       	breq	.-8      	; 0x9ac <main+0x12a>
 9b4:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <TimerFlag>
		TimerFlag = 0;
 9b8:	c1 cf       	rjmp	.-126    	; 0x93c <main+0xba>

000009ba <eeprom_read_byte>:
 9ba:	f9 99       	sbic	0x1f, 1	; 31
 9bc:	fe cf       	rjmp	.-4      	; 0x9ba <eeprom_read_byte>
 9be:	92 bd       	out	0x22, r25	; 34
 9c0:	81 bd       	out	0x21, r24	; 33
 9c2:	f8 9a       	sbi	0x1f, 0	; 31
 9c4:	99 27       	eor	r25, r25
 9c6:	80 b5       	in	r24, 0x20	; 32
 9c8:	08 95       	ret

000009ca <eeprom_update_byte>:
 9ca:	26 2f       	mov	r18, r22

000009cc <eeprom_update_r18>:
 9cc:	f9 99       	sbic	0x1f, 1	; 31
 9ce:	fe cf       	rjmp	.-4      	; 0x9cc <eeprom_update_r18>
 9d0:	92 bd       	out	0x22, r25	; 34
 9d2:	81 bd       	out	0x21, r24	; 33
 9d4:	f8 9a       	sbi	0x1f, 0	; 31
 9d6:	01 97       	sbiw	r24, 0x01	; 1
 9d8:	00 b4       	in	r0, 0x20	; 32
 9da:	02 16       	cp	r0, r18
 9dc:	39 f0       	breq	.+14     	; 0x9ec <eeprom_update_r18+0x20>
 9de:	1f ba       	out	0x1f, r1	; 31
 9e0:	20 bd       	out	0x20, r18	; 32
 9e2:	0f b6       	in	r0, 0x3f	; 63
 9e4:	f8 94       	cli
 9e6:	fa 9a       	sbi	0x1f, 2	; 31
 9e8:	f9 9a       	sbi	0x1f, 1	; 31
 9ea:	0f be       	out	0x3f, r0	; 63
 9ec:	08 95       	ret

000009ee <_exit>:
 9ee:	f8 94       	cli

000009f0 <__stop_program>:
 9f0:	ff cf       	rjmp	.-2      	; 0x9f0 <__stop_program>
