
cs122A Project LCD Slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800100  00000b0a  00000b9e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b0a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002f  008001ba  008001ba  00000c58  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000cc8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001401  00000000  00000000  00000dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ef  00000000  00000000  000021d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dbc  00000000  00000000  00002bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  0000397c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000072a  00000000  00000000  00003b40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004b5  00000000  00000000  0000426a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  0000471f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	96 c1       	rjmp	.+812    	; 0x362 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	46 c1       	rjmp	.+652    	; 0x2da <__vector_19>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e0       	ldi	r30, 0x0A	; 10
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 3b       	cpi	r26, 0xBA	; 186
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa eb       	ldi	r26, 0xBA	; 186
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 3e       	cpi	r26, 0xE9	; 233
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	5d d4       	rcall	.+2234   	; 0x97e <main>
  c4:	20 c5       	rjmp	.+2624   	; 0xb06 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <SMmatrix>:
void LCD_On(){
	PORTB = 0x01;
}

void LCD_Off(){
	PORTB = 0x00;
  c8:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <state_matrix>
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	41 f0       	breq	.+16     	; 0xe0 <SMmatrix+0x18>
  d0:	18 f0       	brcs	.+6      	; 0xd8 <SMmatrix+0x10>
  d2:	82 30       	cpi	r24, 0x02	; 2
  d4:	c9 f0       	breq	.+50     	; 0x108 <SMmatrix+0x40>
  d6:	f8 c0       	rjmp	.+496    	; 0x2c8 <SMmatrix+0x200>
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
  de:	f4 c0       	rjmp	.+488    	; 0x2c8 <SMmatrix+0x200>
  e0:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <receivedData>
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	19 f4       	brne	.+6      	; 0xee <SMmatrix+0x26>
  e8:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
  ec:	ed c0       	rjmp	.+474    	; 0x2c8 <SMmatrix+0x200>
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	88 b9       	out	0x08, r24	; 8
  f2:	12 b8       	out	0x02, r1	; 2
  f4:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <first_base>
  f8:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <second_base>
  fc:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <third_base>
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
 106:	e0 c0       	rjmp	.+448    	; 0x2c8 <SMmatrix+0x200>
 108:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 10c:	83 30       	cpi	r24, 0x03	; 3
 10e:	31 f4       	brne	.+12     	; 0x11c <SMmatrix+0x54>
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
 116:	10 92 d3 01 	sts	0x01D3, r1	; 0x8001d3 <strike>
 11a:	d6 c0       	rjmp	.+428    	; 0x2c8 <SMmatrix+0x200>
 11c:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <counter>
 120:	81 11       	cpse	r24, r1
 122:	3a c0       	rjmp	.+116    	; 0x198 <SMmatrix+0xd0>
 124:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <left_num>
 128:	81 30       	cpi	r24, 0x01	; 1
 12a:	31 f4       	brne	.+12     	; 0x138 <SMmatrix+0x70>
 12c:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <field>
 130:	80 68       	ori	r24, 0x80	; 128
 132:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <field>
 136:	05 c0       	rjmp	.+10     	; 0x142 <SMmatrix+0x7a>
 138:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <field>
 13c:	8f 77       	andi	r24, 0x7F	; 127
 13e:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <field>
 142:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <mid_num>
 146:	81 30       	cpi	r24, 0x01	; 1
 148:	31 f4       	brne	.+12     	; 0x156 <SMmatrix+0x8e>
 14a:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <field>
 14e:	80 61       	ori	r24, 0x10	; 16
 150:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <field>
 154:	05 c0       	rjmp	.+10     	; 0x160 <SMmatrix+0x98>
 156:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <field>
 15a:	8f 7e       	andi	r24, 0xEF	; 239
 15c:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <field>
 160:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <right_num>
 164:	81 30       	cpi	r24, 0x01	; 1
 166:	31 f4       	brne	.+12     	; 0x174 <SMmatrix+0xac>
 168:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <field>
 16c:	82 60       	ori	r24, 0x02	; 2
 16e:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <field>
 172:	05 c0       	rjmp	.+10     	; 0x17e <SMmatrix+0xb6>
 174:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <field>
 178:	8d 7f       	andi	r24, 0xFD	; 253
 17a:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <field>
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <counter>
 184:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <field>
 188:	80 95       	com	r24
 18a:	88 b9       	out	0x08, r24	; 8
 18c:	80 e8       	ldi	r24, 0x80	; 128
 18e:	82 b9       	out	0x02, r24	; 2
 190:	82 e0       	ldi	r24, 0x02	; 2
 192:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
 196:	98 c0       	rjmp	.+304    	; 0x2c8 <SMmatrix+0x200>
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	a1 f4       	brne	.+40     	; 0x1c4 <SMmatrix+0xfc>
 19c:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <second_base>
 1a0:	88 23       	and	r24, r24
 1a2:	19 f0       	breq	.+6      	; 0x1aa <SMmatrix+0xe2>
 1a4:	8f ee       	ldi	r24, 0xEF	; 239
 1a6:	88 b9       	out	0x08, r24	; 8
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <SMmatrix+0xe6>
 1aa:	8f ef       	ldi	r24, 0xFF	; 255
 1ac:	88 b9       	out	0x08, r24	; 8
 1ae:	80 e4       	ldi	r24, 0x40	; 64
 1b0:	82 b9       	out	0x02, r24	; 2
 1b2:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <counter>
 1b6:	8f 5f       	subi	r24, 0xFF	; 255
 1b8:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <counter>
 1bc:	82 e0       	ldi	r24, 0x02	; 2
 1be:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
 1c2:	82 c0       	rjmp	.+260    	; 0x2c8 <SMmatrix+0x200>
 1c4:	82 30       	cpi	r24, 0x02	; 2
 1c6:	69 f4       	brne	.+26     	; 0x1e2 <SMmatrix+0x11a>
 1c8:	8f ef       	ldi	r24, 0xFF	; 255
 1ca:	88 b9       	out	0x08, r24	; 8
 1cc:	80 e2       	ldi	r24, 0x20	; 32
 1ce:	82 b9       	out	0x02, r24	; 2
 1d0:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <counter>
 1d4:	8f 5f       	subi	r24, 0xFF	; 255
 1d6:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <counter>
 1da:	82 e0       	ldi	r24, 0x02	; 2
 1dc:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
 1e0:	73 c0       	rjmp	.+230    	; 0x2c8 <SMmatrix+0x200>
 1e2:	83 30       	cpi	r24, 0x03	; 3
 1e4:	09 f0       	breq	.+2      	; 0x1e8 <SMmatrix+0x120>
 1e6:	40 c0       	rjmp	.+128    	; 0x268 <SMmatrix+0x1a0>
 1e8:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <first_base>
 1ec:	88 23       	and	r24, r24
 1ee:	31 f0       	breq	.+12     	; 0x1fc <SMmatrix+0x134>
 1f0:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <second_first>
 1f4:	84 60       	ori	r24, 0x04	; 4
 1f6:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <second_first>
 1fa:	05 c0       	rjmp	.+10     	; 0x206 <SMmatrix+0x13e>
 1fc:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <second_first>
 200:	8b 7f       	andi	r24, 0xFB	; 251
 202:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <second_first>
 206:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <third_base>
 20a:	88 23       	and	r24, r24
 20c:	31 f0       	breq	.+12     	; 0x21a <SMmatrix+0x152>
 20e:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <second_first>
 212:	80 64       	ori	r24, 0x40	; 64
 214:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <second_first>
 218:	05 c0       	rjmp	.+10     	; 0x224 <SMmatrix+0x15c>
 21a:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <second_first>
 21e:	8f 7b       	andi	r24, 0xBF	; 191
 220:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <second_first>
 224:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <cycle>
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	e0 50       	subi	r30, 0x00	; 0
 22c:	ff 4f       	sbci	r31, 0xFF	; 255
 22e:	80 81       	ld	r24, Z
 230:	83 30       	cpi	r24, 0x03	; 3
 232:	30 f0       	brcs	.+12     	; 0x240 <SMmatrix+0x178>
 234:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <second_first>
 238:	81 60       	ori	r24, 0x01	; 1
 23a:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <second_first>
 23e:	05 c0       	rjmp	.+10     	; 0x24a <SMmatrix+0x182>
 240:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <second_first>
 244:	8e 7f       	andi	r24, 0xFE	; 254
 246:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <second_first>
 24a:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <second_first>
 24e:	80 95       	com	r24
 250:	88 b9       	out	0x08, r24	; 8
 252:	80 e1       	ldi	r24, 0x10	; 16
 254:	82 b9       	out	0x02, r24	; 2
 256:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <counter>
 25a:	8f 5f       	subi	r24, 0xFF	; 255
 25c:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <counter>
 260:	82 e0       	ldi	r24, 0x02	; 2
 262:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
 266:	30 c0       	rjmp	.+96     	; 0x2c8 <SMmatrix+0x200>
 268:	84 30       	cpi	r24, 0x04	; 4
 26a:	c1 f4       	brne	.+48     	; 0x29c <SMmatrix+0x1d4>
 26c:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <cycle>
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	e0 50       	subi	r30, 0x00	; 0
 274:	ff 4f       	sbci	r31, 0xFF	; 255
 276:	80 81       	ld	r24, Z
 278:	82 30       	cpi	r24, 0x02	; 2
 27a:	18 f0       	brcs	.+6      	; 0x282 <SMmatrix+0x1ba>
 27c:	8e ef       	ldi	r24, 0xFE	; 254
 27e:	88 b9       	out	0x08, r24	; 8
 280:	02 c0       	rjmp	.+4      	; 0x286 <SMmatrix+0x1be>
 282:	8f ef       	ldi	r24, 0xFF	; 255
 284:	88 b9       	out	0x08, r24	; 8
 286:	88 e0       	ldi	r24, 0x08	; 8
 288:	82 b9       	out	0x02, r24	; 2
 28a:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <counter>
 28e:	8f 5f       	subi	r24, 0xFF	; 255
 290:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <counter>
 294:	82 e0       	ldi	r24, 0x02	; 2
 296:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
 29a:	16 c0       	rjmp	.+44     	; 0x2c8 <SMmatrix+0x200>
 29c:	85 30       	cpi	r24, 0x05	; 5
 29e:	a1 f4       	brne	.+40     	; 0x2c8 <SMmatrix+0x200>
 2a0:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <cycle>
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	e0 50       	subi	r30, 0x00	; 0
 2a8:	ff 4f       	sbci	r31, 0xFF	; 255
 2aa:	80 81       	ld	r24, Z
 2ac:	88 23       	and	r24, r24
 2ae:	19 f0       	breq	.+6      	; 0x2b6 <SMmatrix+0x1ee>
 2b0:	8e ee       	ldi	r24, 0xEE	; 238
 2b2:	88 b9       	out	0x08, r24	; 8
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <SMmatrix+0x1f2>
 2b6:	8f ee       	ldi	r24, 0xEF	; 239
 2b8:	88 b9       	out	0x08, r24	; 8
 2ba:	84 e0       	ldi	r24, 0x04	; 4
 2bc:	82 b9       	out	0x02, r24	; 2
 2be:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <counter>
 2c2:	82 e0       	ldi	r24, 0x02	; 2
 2c4:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <state_matrix>
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	08 95       	ret

000002ce <SPI_SlaveInit>:
 2ce:	80 e4       	ldi	r24, 0x40	; 64
 2d0:	84 b9       	out	0x04, r24	; 4
 2d2:	80 ec       	ldi	r24, 0xC0	; 192
 2d4:	8c bd       	out	0x2c, r24	; 44
 2d6:	78 94       	sei
 2d8:	08 95       	ret

000002da <__vector_19>:
 2da:	1f 92       	push	r1
 2dc:	0f 92       	push	r0
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	0f 92       	push	r0
 2e2:	11 24       	eor	r1, r1
 2e4:	8f 93       	push	r24
 2e6:	8e b5       	in	r24, 0x2e	; 46
 2e8:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <receivedData>
 2ec:	8f 91       	pop	r24
 2ee:	0f 90       	pop	r0
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	0f 90       	pop	r0
 2f4:	1f 90       	pop	r1
 2f6:	18 95       	reti

000002f8 <TimerSet>:
 2f8:	60 93 5c 01 	sts	0x015C, r22	; 0x80015c <_avr_timer_M>
 2fc:	70 93 5d 01 	sts	0x015D, r23	; 0x80015d <_avr_timer_M+0x1>
 300:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <_avr_timer_M+0x2>
 304:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <_avr_timer_M+0x3>
 308:	60 93 e0 01 	sts	0x01E0, r22	; 0x8001e0 <_avr_timer_cntcurr>
 30c:	70 93 e1 01 	sts	0x01E1, r23	; 0x8001e1 <_avr_timer_cntcurr+0x1>
 310:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <_avr_timer_cntcurr+0x2>
 314:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <_avr_timer_cntcurr+0x3>
 318:	08 95       	ret

0000031a <TimerOn>:
 31a:	8b e0       	ldi	r24, 0x0B	; 11
 31c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 320:	8d e7       	ldi	r24, 0x7D	; 125
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 328:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 32c:	82 e0       	ldi	r24, 0x02	; 2
 32e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 332:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 336:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 33a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <_avr_timer_M>
 33e:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <_avr_timer_M+0x1>
 342:	a0 91 5e 01 	lds	r26, 0x015E	; 0x80015e <_avr_timer_M+0x2>
 346:	b0 91 5f 01 	lds	r27, 0x015F	; 0x80015f <_avr_timer_M+0x3>
 34a:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <_avr_timer_cntcurr>
 34e:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <_avr_timer_cntcurr+0x1>
 352:	a0 93 e2 01 	sts	0x01E2, r26	; 0x8001e2 <_avr_timer_cntcurr+0x2>
 356:	b0 93 e3 01 	sts	0x01E3, r27	; 0x8001e3 <_avr_timer_cntcurr+0x3>
 35a:	8f b7       	in	r24, 0x3f	; 63
 35c:	80 68       	ori	r24, 0x80	; 128
 35e:	8f bf       	out	0x3f, r24	; 63
 360:	08 95       	ret

00000362 <__vector_13>:
 362:	1f 92       	push	r1
 364:	0f 92       	push	r0
 366:	0f b6       	in	r0, 0x3f	; 63
 368:	0f 92       	push	r0
 36a:	11 24       	eor	r1, r1
 36c:	8f 93       	push	r24
 36e:	9f 93       	push	r25
 370:	af 93       	push	r26
 372:	bf 93       	push	r27
 374:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <_avr_timer_cntcurr>
 378:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <_avr_timer_cntcurr+0x1>
 37c:	a0 91 e2 01 	lds	r26, 0x01E2	; 0x8001e2 <_avr_timer_cntcurr+0x2>
 380:	b0 91 e3 01 	lds	r27, 0x01E3	; 0x8001e3 <_avr_timer_cntcurr+0x3>
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	a1 09       	sbc	r26, r1
 388:	b1 09       	sbc	r27, r1
 38a:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <_avr_timer_cntcurr>
 38e:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <_avr_timer_cntcurr+0x1>
 392:	a0 93 e2 01 	sts	0x01E2, r26	; 0x8001e2 <_avr_timer_cntcurr+0x2>
 396:	b0 93 e3 01 	sts	0x01E3, r27	; 0x8001e3 <_avr_timer_cntcurr+0x3>
 39a:	89 2b       	or	r24, r25
 39c:	8a 2b       	or	r24, r26
 39e:	8b 2b       	or	r24, r27
 3a0:	99 f4       	brne	.+38     	; 0x3c8 <__vector_13+0x66>
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <TimerFlag>
 3a8:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <_avr_timer_M>
 3ac:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <_avr_timer_M+0x1>
 3b0:	a0 91 5e 01 	lds	r26, 0x015E	; 0x80015e <_avr_timer_M+0x2>
 3b4:	b0 91 5f 01 	lds	r27, 0x015F	; 0x80015f <_avr_timer_M+0x3>
 3b8:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <_avr_timer_cntcurr>
 3bc:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <_avr_timer_cntcurr+0x1>
 3c0:	a0 93 e2 01 	sts	0x01E2, r26	; 0x8001e2 <_avr_timer_cntcurr+0x2>
 3c4:	b0 93 e3 01 	sts	0x01E3, r27	; 0x8001e3 <_avr_timer_cntcurr+0x3>
 3c8:	bf 91       	pop	r27
 3ca:	af 91       	pop	r26
 3cc:	9f 91       	pop	r25
 3ce:	8f 91       	pop	r24
 3d0:	0f 90       	pop	r0
 3d2:	0f be       	out	0x3f, r0	; 63
 3d4:	0f 90       	pop	r0
 3d6:	1f 90       	pop	r1
 3d8:	18 95       	reti

000003da <delay_ms>:
 3da:	18 16       	cp	r1, r24
 3dc:	19 06       	cpc	r1, r25
 3de:	5c f0       	brlt	.+22     	; 0x3f6 <delay_ms+0x1c>
 3e0:	08 95       	ret
 3e2:	00 00       	nop
 3e4:	21 50       	subi	r18, 0x01	; 1
 3e6:	31 09       	sbc	r19, r1
 3e8:	e1 f7       	brne	.-8      	; 0x3e2 <delay_ms+0x8>
 3ea:	4f 5f       	subi	r20, 0xFF	; 255
 3ec:	5f 4f       	sbci	r21, 0xFF	; 255
 3ee:	84 17       	cp	r24, r20
 3f0:	95 07       	cpc	r25, r21
 3f2:	19 f4       	brne	.+6      	; 0x3fa <delay_ms+0x20>
 3f4:	08 95       	ret
 3f6:	40 e0       	ldi	r20, 0x00	; 0
 3f8:	50 e0       	ldi	r21, 0x00	; 0
 3fa:	27 e0       	ldi	r18, 0x07	; 7
 3fc:	33 e0       	ldi	r19, 0x03	; 3
 3fe:	f1 cf       	rjmp	.-30     	; 0x3e2 <delay_ms+0x8>

00000400 <LCD_WriteCommand>:
 400:	10 98       	cbi	0x02, 0	; 2
 402:	8b b9       	out	0x0b, r24	; 11
 404:	11 9a       	sbi	0x02, 1	; 2
 406:	00 00       	nop
 408:	11 98       	cbi	0x02, 1	; 2
 40a:	82 e0       	ldi	r24, 0x02	; 2
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	e5 cf       	rjmp	.-54     	; 0x3da <delay_ms>
 410:	08 95       	ret

00000412 <LCD_ClearScreen>:
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	f5 cf       	rjmp	.-22     	; 0x400 <LCD_WriteCommand>
 416:	08 95       	ret

00000418 <LCD_init>:
 418:	84 e6       	ldi	r24, 0x64	; 100
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	de df       	rcall	.-68     	; 0x3da <delay_ms>
 41e:	88 e3       	ldi	r24, 0x38	; 56
 420:	ef df       	rcall	.-34     	; 0x400 <LCD_WriteCommand>
 422:	86 e0       	ldi	r24, 0x06	; 6
 424:	ed df       	rcall	.-38     	; 0x400 <LCD_WriteCommand>
 426:	8f e0       	ldi	r24, 0x0F	; 15
 428:	eb df       	rcall	.-42     	; 0x400 <LCD_WriteCommand>
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	e9 df       	rcall	.-46     	; 0x400 <LCD_WriteCommand>
 42e:	8a e0       	ldi	r24, 0x0A	; 10
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	d3 cf       	rjmp	.-90     	; 0x3da <delay_ms>
 434:	08 95       	ret

00000436 <LCD_WriteData>:
 436:	10 9a       	sbi	0x02, 0	; 2
 438:	8b b9       	out	0x0b, r24	; 11
 43a:	11 9a       	sbi	0x02, 1	; 2
 43c:	00 00       	nop
 43e:	11 98       	cbi	0x02, 1	; 2
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	ca cf       	rjmp	.-108    	; 0x3da <delay_ms>
 446:	08 95       	ret

00000448 <LCD_Cursor>:
 448:	81 31       	cpi	r24, 0x11	; 17
 44a:	18 f4       	brcc	.+6      	; 0x452 <LCD_Cursor+0xa>
 44c:	81 58       	subi	r24, 0x81	; 129
 44e:	d8 cf       	rjmp	.-80     	; 0x400 <LCD_WriteCommand>
 450:	08 95       	ret
 452:	81 55       	subi	r24, 0x51	; 81
 454:	d5 cf       	rjmp	.-86     	; 0x400 <LCD_WriteCommand>
 456:	08 95       	ret

00000458 <LCD_DisplayString>:
 458:	1f 93       	push	r17
 45a:	cf 93       	push	r28
 45c:	df 93       	push	r29
 45e:	fb 01       	movw	r30, r22
 460:	90 81       	ld	r25, Z
 462:	99 23       	and	r25, r25
 464:	51 f0       	breq	.+20     	; 0x47a <LCD_DisplayString+0x22>
 466:	eb 01       	movw	r28, r22
 468:	11 e0       	ldi	r17, 0x01	; 1
 46a:	18 0f       	add	r17, r24
 46c:	ed df       	rcall	.-38     	; 0x448 <LCD_Cursor>
 46e:	89 91       	ld	r24, Y+
 470:	e2 df       	rcall	.-60     	; 0x436 <LCD_WriteData>
 472:	81 2f       	mov	r24, r17
 474:	98 81       	ld	r25, Y
 476:	91 11       	cpse	r25, r1
 478:	f7 cf       	rjmp	.-18     	; 0x468 <LCD_DisplayString+0x10>
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	1f 91       	pop	r17
 480:	08 95       	ret

00000482 <SMLCD>:
 482:	82 30       	cpi	r24, 0x02	; 2
 484:	91 05       	cpc	r25, r1
 486:	09 f4       	brne	.+2      	; 0x48a <SMLCD+0x8>
 488:	b2 c1       	rjmp	.+868    	; 0x7ee <SMLCD+0x36c>
 48a:	2c f4       	brge	.+10     	; 0x496 <SMLCD+0x14>
 48c:	00 97       	sbiw	r24, 0x00	; 0
 48e:	59 f0       	breq	.+22     	; 0x4a6 <SMLCD+0x24>
 490:	01 97       	sbiw	r24, 0x01	; 1
 492:	d1 f0       	breq	.+52     	; 0x4c8 <SMLCD+0x46>
 494:	68 c2       	rjmp	.+1232   	; 0x966 <SMLCD+0x4e4>
 496:	83 30       	cpi	r24, 0x03	; 3
 498:	91 05       	cpc	r25, r1
 49a:	09 f4       	brne	.+2      	; 0x49e <SMLCD+0x1c>
 49c:	b3 c1       	rjmp	.+870    	; 0x804 <SMLCD+0x382>
 49e:	04 97       	sbiw	r24, 0x04	; 4
 4a0:	09 f4       	brne	.+2      	; 0x4a4 <SMLCD+0x22>
 4a2:	ba c1       	rjmp	.+884    	; 0x818 <SMLCD+0x396>
 4a4:	60 c2       	rjmp	.+1216   	; 0x966 <SMLCD+0x4e4>
 4a6:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <outter>
 4aa:	f0 e0       	ldi	r31, 0x00	; 0
 4ac:	e9 5e       	subi	r30, 0xE9	; 233
 4ae:	fe 4f       	sbci	r31, 0xFE	; 254
 4b0:	80 81       	ld	r24, Z
 4b2:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <left_num>
 4b6:	81 81       	ldd	r24, Z+1	; 0x01
 4b8:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <mid_num>
 4bc:	82 81       	ldd	r24, Z+2	; 0x02
 4be:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <right_num>
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	08 95       	ret
 4c8:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <receivedData>
 4cc:	81 30       	cpi	r24, 0x01	; 1
 4ce:	39 f4       	brne	.+14     	; 0x4de <SMLCD+0x5c>
 4d0:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 4d4:	9e df       	rcall	.-196    	; 0x412 <LCD_ClearScreen>
 4d6:	60 e6       	ldi	r22, 0x60	; 96
 4d8:	71 e0       	ldi	r23, 0x01	; 1
 4da:	81 e0       	ldi	r24, 0x01	; 1
 4dc:	bd df       	rcall	.-134    	; 0x458 <LCD_DisplayString>
 4de:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <receivedData>
 4e2:	82 30       	cpi	r24, 0x02	; 2
 4e4:	c1 f4       	brne	.+48     	; 0x516 <SMLCD+0x94>
 4e6:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <outter>
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	e9 5e       	subi	r30, 0xE9	; 233
 4ee:	fe 4f       	sbci	r31, 0xFE	; 254
 4f0:	80 81       	ld	r24, Z
 4f2:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <left_num>
 4f6:	81 81       	ldd	r24, Z+1	; 0x01
 4f8:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <mid_num>
 4fc:	82 81       	ldd	r24, Z+2	; 0x02
 4fe:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <right_num>
 502:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 506:	85 df       	rcall	.-246    	; 0x412 <LCD_ClearScreen>
 508:	61 e8       	ldi	r22, 0x81	; 129
 50a:	71 e0       	ldi	r23, 0x01	; 1
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	a4 df       	rcall	.-184    	; 0x458 <LCD_DisplayString>
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	08 95       	ret
 516:	83 30       	cpi	r24, 0x03	; 3
 518:	c1 f4       	brne	.+48     	; 0x54a <SMLCD+0xc8>
 51a:	7b df       	rcall	.-266    	; 0x412 <LCD_ClearScreen>
 51c:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 520:	6c e9       	ldi	r22, 0x9C	; 156
 522:	71 e0       	ldi	r23, 0x01	; 1
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	98 df       	rcall	.-208    	; 0x458 <LCD_DisplayString>
 528:	8d e0       	ldi	r24, 0x0D	; 13
 52a:	8e df       	rcall	.-228    	; 0x448 <LCD_Cursor>
 52c:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 530:	80 5d       	subi	r24, 0xD0	; 208
 532:	81 df       	rcall	.-254    	; 0x436 <LCD_WriteData>
 534:	8d e1       	ldi	r24, 0x1D	; 29
 536:	88 df       	rcall	.-240    	; 0x448 <LCD_Cursor>
 538:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <hi_score>
 53c:	80 5d       	subi	r24, 0xD0	; 208
 53e:	7b df       	rcall	.-266    	; 0x436 <LCD_WriteData>
 540:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <score>
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	08 95       	ret
 54a:	84 30       	cpi	r24, 0x04	; 4
 54c:	89 f4       	brne	.+34     	; 0x570 <SMLCD+0xee>
 54e:	61 df       	rcall	.-318    	; 0x412 <LCD_ClearScreen>
 550:	6c ea       	ldi	r22, 0xAC	; 172
 552:	71 e0       	ldi	r23, 0x01	; 1
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	80 df       	rcall	.-256    	; 0x458 <LCD_DisplayString>
 558:	8d e0       	ldi	r24, 0x0D	; 13
 55a:	76 df       	rcall	.-276    	; 0x448 <LCD_Cursor>
 55c:	81 e0       	ldi	r24, 0x01	; 1
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	b8 d2       	rcall	.+1392   	; 0xad2 <eeprom_read_byte>
 562:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <hi_score>
 566:	80 5d       	subi	r24, 0xD0	; 208
 568:	66 df       	rcall	.-308    	; 0x436 <LCD_WriteData>
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	08 95       	ret
 570:	80 31       	cpi	r24, 0x10	; 16
 572:	09 f0       	breq	.+2      	; 0x576 <SMLCD+0xf4>
 574:	4c c0       	rjmp	.+152    	; 0x60e <SMLCD+0x18c>
 576:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 57a:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <left_num>
 57e:	81 11       	cpse	r24, r1
 580:	18 c0       	rjmp	.+48     	; 0x5b2 <SMLCD+0x130>
 582:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 586:	8f 5f       	subi	r24, 0xFF	; 255
 588:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <strike>
 58c:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <cycle>
 590:	8f 5f       	subi	r24, 0xFF	; 255
 592:	87 31       	cpi	r24, 0x17	; 23
 594:	18 f4       	brcc	.+6      	; 0x59c <SMLCD+0x11a>
 596:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <cycle>
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <SMLCD+0x11e>
 59c:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <cycle>
 5a0:	8a e1       	ldi	r24, 0x1A	; 26
 5a2:	52 df       	rcall	.-348    	; 0x448 <LCD_Cursor>
 5a4:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 5a8:	80 5d       	subi	r24, 0xD0	; 208
 5aa:	45 df       	rcall	.-374    	; 0x436 <LCD_WriteData>
 5ac:	83 e0       	ldi	r24, 0x03	; 3
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <SMLCD+0x134>
 5b2:	84 e0       	ldi	r24, 0x04	; 4
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	20 91 df 01 	lds	r18, 0x01DF	; 0x8001df <outter>
 5ba:	2d 5f       	subi	r18, 0xFD	; 253
 5bc:	23 34       	cpi	r18, 0x43	; 67
 5be:	18 f4       	brcc	.+6      	; 0x5c6 <SMLCD+0x144>
 5c0:	20 93 df 01 	sts	0x01DF, r18	; 0x8001df <outter>
 5c4:	02 c0       	rjmp	.+4      	; 0x5ca <SMLCD+0x148>
 5c6:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <outter>
 5ca:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <outter>
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	e9 5e       	subi	r30, 0xE9	; 233
 5d2:	fe 4f       	sbci	r31, 0xFE	; 254
 5d4:	20 81       	ld	r18, Z
 5d6:	20 93 da 01 	sts	0x01DA, r18	; 0x8001da <left_num>
 5da:	21 81       	ldd	r18, Z+1	; 0x01
 5dc:	20 93 d9 01 	sts	0x01D9, r18	; 0x8001d9 <mid_num>
 5e0:	22 81       	ldd	r18, Z+2	; 0x02
 5e2:	20 93 d8 01 	sts	0x01D8, r18	; 0x8001d8 <right_num>
 5e6:	20 91 d3 01 	lds	r18, 0x01D3	; 0x8001d3 <strike>
 5ea:	23 30       	cpi	r18, 0x03	; 3
 5ec:	09 f0       	breq	.+2      	; 0x5f0 <SMLCD+0x16e>
 5ee:	c6 c1       	rjmp	.+908    	; 0x97c <SMLCD+0x4fa>
 5f0:	60 91 dd 01 	lds	r22, 0x01DD	; 0x8001dd <score>
 5f4:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <hi_score>
 5f8:	86 17       	cp	r24, r22
 5fa:	18 f4       	brcc	.+6      	; 0x602 <SMLCD+0x180>
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	70 d2       	rcall	.+1248   	; 0xae2 <eeprom_update_byte>
 602:	83 e0       	ldi	r24, 0x03	; 3
 604:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <receivedData>
 608:	81 e0       	ldi	r24, 0x01	; 1
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	08 95       	ret
 60e:	81 31       	cpi	r24, 0x11	; 17
 610:	09 f0       	breq	.+2      	; 0x614 <SMLCD+0x192>
 612:	4e c0       	rjmp	.+156    	; 0x6b0 <SMLCD+0x22e>
 614:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 618:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <mid_num>
 61c:	81 11       	cpse	r24, r1
 61e:	1a c0       	rjmp	.+52     	; 0x654 <SMLCD+0x1d2>
 620:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 624:	8f 5f       	subi	r24, 0xFF	; 255
 626:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <strike>
 62a:	8a e1       	ldi	r24, 0x1A	; 26
 62c:	0d df       	rcall	.-486    	; 0x448 <LCD_Cursor>
 62e:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 632:	80 5d       	subi	r24, 0xD0	; 208
 634:	00 df       	rcall	.-512    	; 0x436 <LCD_WriteData>
 636:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <cycle>
 63a:	8f 5f       	subi	r24, 0xFF	; 255
 63c:	87 31       	cpi	r24, 0x17	; 23
 63e:	28 f4       	brcc	.+10     	; 0x64a <SMLCD+0x1c8>
 640:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <cycle>
 644:	83 e0       	ldi	r24, 0x03	; 3
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	07 c0       	rjmp	.+14     	; 0x658 <SMLCD+0x1d6>
 64a:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <cycle>
 64e:	83 e0       	ldi	r24, 0x03	; 3
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	02 c0       	rjmp	.+4      	; 0x658 <SMLCD+0x1d6>
 654:	84 e0       	ldi	r24, 0x04	; 4
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	20 91 df 01 	lds	r18, 0x01DF	; 0x8001df <outter>
 65c:	2d 5f       	subi	r18, 0xFD	; 253
 65e:	23 34       	cpi	r18, 0x43	; 67
 660:	18 f4       	brcc	.+6      	; 0x668 <SMLCD+0x1e6>
 662:	20 93 df 01 	sts	0x01DF, r18	; 0x8001df <outter>
 666:	02 c0       	rjmp	.+4      	; 0x66c <SMLCD+0x1ea>
 668:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <outter>
 66c:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <outter>
 670:	f0 e0       	ldi	r31, 0x00	; 0
 672:	e9 5e       	subi	r30, 0xE9	; 233
 674:	fe 4f       	sbci	r31, 0xFE	; 254
 676:	20 81       	ld	r18, Z
 678:	20 93 da 01 	sts	0x01DA, r18	; 0x8001da <left_num>
 67c:	21 81       	ldd	r18, Z+1	; 0x01
 67e:	20 93 d9 01 	sts	0x01D9, r18	; 0x8001d9 <mid_num>
 682:	22 81       	ldd	r18, Z+2	; 0x02
 684:	20 93 d8 01 	sts	0x01D8, r18	; 0x8001d8 <right_num>
 688:	20 91 d3 01 	lds	r18, 0x01D3	; 0x8001d3 <strike>
 68c:	23 30       	cpi	r18, 0x03	; 3
 68e:	09 f0       	breq	.+2      	; 0x692 <SMLCD+0x210>
 690:	75 c1       	rjmp	.+746    	; 0x97c <SMLCD+0x4fa>
 692:	60 91 dd 01 	lds	r22, 0x01DD	; 0x8001dd <score>
 696:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <hi_score>
 69a:	86 17       	cp	r24, r22
 69c:	18 f4       	brcc	.+6      	; 0x6a4 <SMLCD+0x222>
 69e:	81 e0       	ldi	r24, 0x01	; 1
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	1f d2       	rcall	.+1086   	; 0xae2 <eeprom_update_byte>
 6a4:	83 e0       	ldi	r24, 0x03	; 3
 6a6:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <receivedData>
 6aa:	81 e0       	ldi	r24, 0x01	; 1
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	08 95       	ret
 6b0:	82 31       	cpi	r24, 0x12	; 18
 6b2:	09 f0       	breq	.+2      	; 0x6b6 <SMLCD+0x234>
 6b4:	4e c0       	rjmp	.+156    	; 0x752 <SMLCD+0x2d0>
 6b6:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 6ba:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <right_num>
 6be:	81 11       	cpse	r24, r1
 6c0:	1a c0       	rjmp	.+52     	; 0x6f6 <SMLCD+0x274>
 6c2:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 6c6:	8f 5f       	subi	r24, 0xFF	; 255
 6c8:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <strike>
 6cc:	8a e1       	ldi	r24, 0x1A	; 26
 6ce:	bc de       	rcall	.-648    	; 0x448 <LCD_Cursor>
 6d0:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 6d4:	80 5d       	subi	r24, 0xD0	; 208
 6d6:	af de       	rcall	.-674    	; 0x436 <LCD_WriteData>
 6d8:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <cycle>
 6dc:	8f 5f       	subi	r24, 0xFF	; 255
 6de:	87 31       	cpi	r24, 0x17	; 23
 6e0:	28 f4       	brcc	.+10     	; 0x6ec <SMLCD+0x26a>
 6e2:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <cycle>
 6e6:	83 e0       	ldi	r24, 0x03	; 3
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	07 c0       	rjmp	.+14     	; 0x6fa <SMLCD+0x278>
 6ec:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <cycle>
 6f0:	83 e0       	ldi	r24, 0x03	; 3
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	02 c0       	rjmp	.+4      	; 0x6fa <SMLCD+0x278>
 6f6:	84 e0       	ldi	r24, 0x04	; 4
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	20 91 df 01 	lds	r18, 0x01DF	; 0x8001df <outter>
 6fe:	2d 5f       	subi	r18, 0xFD	; 253
 700:	23 34       	cpi	r18, 0x43	; 67
 702:	18 f4       	brcc	.+6      	; 0x70a <SMLCD+0x288>
 704:	20 93 df 01 	sts	0x01DF, r18	; 0x8001df <outter>
 708:	02 c0       	rjmp	.+4      	; 0x70e <SMLCD+0x28c>
 70a:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <outter>
 70e:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <outter>
 712:	f0 e0       	ldi	r31, 0x00	; 0
 714:	e9 5e       	subi	r30, 0xE9	; 233
 716:	fe 4f       	sbci	r31, 0xFE	; 254
 718:	20 81       	ld	r18, Z
 71a:	20 93 da 01 	sts	0x01DA, r18	; 0x8001da <left_num>
 71e:	21 81       	ldd	r18, Z+1	; 0x01
 720:	20 93 d9 01 	sts	0x01D9, r18	; 0x8001d9 <mid_num>
 724:	22 81       	ldd	r18, Z+2	; 0x02
 726:	20 93 d8 01 	sts	0x01D8, r18	; 0x8001d8 <right_num>
 72a:	20 91 d3 01 	lds	r18, 0x01D3	; 0x8001d3 <strike>
 72e:	23 30       	cpi	r18, 0x03	; 3
 730:	09 f0       	breq	.+2      	; 0x734 <SMLCD+0x2b2>
 732:	24 c1       	rjmp	.+584    	; 0x97c <SMLCD+0x4fa>
 734:	60 91 dd 01 	lds	r22, 0x01DD	; 0x8001dd <score>
 738:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <hi_score>
 73c:	86 17       	cp	r24, r22
 73e:	18 f4       	brcc	.+6      	; 0x746 <SMLCD+0x2c4>
 740:	81 e0       	ldi	r24, 0x01	; 1
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	ce d1       	rcall	.+924    	; 0xae2 <eeprom_update_byte>
 746:	83 e0       	ldi	r24, 0x03	; 3
 748:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <receivedData>
 74c:	81 e0       	ldi	r24, 0x01	; 1
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	08 95       	ret
 752:	83 31       	cpi	r24, 0x13	; 19
 754:	c9 f5       	brne	.+114    	; 0x7c8 <SMLCD+0x346>
 756:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 75a:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 75e:	8f 5f       	subi	r24, 0xFF	; 255
 760:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <strike>
 764:	8a e1       	ldi	r24, 0x1A	; 26
 766:	70 de       	rcall	.-800    	; 0x448 <LCD_Cursor>
 768:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 76c:	80 5d       	subi	r24, 0xD0	; 208
 76e:	63 de       	rcall	.-826    	; 0x436 <LCD_WriteData>
 770:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <outter>
 774:	8d 5f       	subi	r24, 0xFD	; 253
 776:	83 34       	cpi	r24, 0x43	; 67
 778:	18 f4       	brcc	.+6      	; 0x780 <SMLCD+0x2fe>
 77a:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <outter>
 77e:	02 c0       	rjmp	.+4      	; 0x784 <SMLCD+0x302>
 780:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <outter>
 784:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <outter>
 788:	f0 e0       	ldi	r31, 0x00	; 0
 78a:	e9 5e       	subi	r30, 0xE9	; 233
 78c:	fe 4f       	sbci	r31, 0xFE	; 254
 78e:	80 81       	ld	r24, Z
 790:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <left_num>
 794:	81 81       	ldd	r24, Z+1	; 0x01
 796:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <mid_num>
 79a:	82 81       	ldd	r24, Z+2	; 0x02
 79c:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <right_num>
 7a0:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <strike>
 7a4:	83 30       	cpi	r24, 0x03	; 3
 7a6:	09 f0       	breq	.+2      	; 0x7aa <SMLCD+0x328>
 7a8:	e1 c0       	rjmp	.+450    	; 0x96c <SMLCD+0x4ea>
 7aa:	60 91 dd 01 	lds	r22, 0x01DD	; 0x8001dd <score>
 7ae:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <hi_score>
 7b2:	86 17       	cp	r24, r22
 7b4:	18 f4       	brcc	.+6      	; 0x7bc <SMLCD+0x33a>
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	93 d1       	rcall	.+806    	; 0xae2 <eeprom_update_byte>
 7bc:	83 e0       	ldi	r24, 0x03	; 3
 7be:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <receivedData>
 7c2:	81 e0       	ldi	r24, 0x01	; 1
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	08 95       	ret
 7c8:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 7cc:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <outter>
 7d0:	f0 e0       	ldi	r31, 0x00	; 0
 7d2:	e9 5e       	subi	r30, 0xE9	; 233
 7d4:	fe 4f       	sbci	r31, 0xFE	; 254
 7d6:	80 81       	ld	r24, Z
 7d8:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <left_num>
 7dc:	81 81       	ldd	r24, Z+1	; 0x01
 7de:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <mid_num>
 7e2:	82 81       	ldd	r24, Z+2	; 0x02
 7e4:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <right_num>
 7e8:	81 e0       	ldi	r24, 0x01	; 1
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	08 95       	ret
 7ee:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <receivedData>
 7f2:	80 51       	subi	r24, 0x10	; 16
 7f4:	83 30       	cpi	r24, 0x03	; 3
 7f6:	08 f0       	brcs	.+2      	; 0x7fa <SMLCD+0x378>
 7f8:	bc c0       	rjmp	.+376    	; 0x972 <SMLCD+0x4f0>
 7fa:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 7fe:	82 e0       	ldi	r24, 0x02	; 2
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	08 95       	ret
 804:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <receivedData>
 808:	83 31       	cpi	r24, 0x13	; 19
 80a:	09 f0       	breq	.+2      	; 0x80e <SMLCD+0x38c>
 80c:	b5 c0       	rjmp	.+362    	; 0x978 <SMLCD+0x4f6>
 80e:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <receivedData>
 812:	83 e0       	ldi	r24, 0x03	; 3
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	08 95       	ret
 818:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <cycle>
 81c:	f0 e0       	ldi	r31, 0x00	; 0
 81e:	e0 50       	subi	r30, 0x00	; 0
 820:	ff 4f       	sbci	r31, 0xFF	; 255
 822:	80 81       	ld	r24, Z
 824:	81 30       	cpi	r24, 0x01	; 1
 826:	41 f5       	brne	.+80     	; 0x878 <SMLCD+0x3f6>
 828:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <third_base>
 82c:	81 30       	cpi	r24, 0x01	; 1
 82e:	39 f4       	brne	.+14     	; 0x83e <SMLCD+0x3bc>
 830:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <third_base>
 834:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 838:	8f 5f       	subi	r24, 0xFF	; 255
 83a:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <score>
 83e:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <second_base>
 842:	81 30       	cpi	r24, 0x01	; 1
 844:	21 f4       	brne	.+8      	; 0x84e <SMLCD+0x3cc>
 846:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <second_base>
 84a:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <third_base>
 84e:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <first_base>
 852:	81 30       	cpi	r24, 0x01	; 1
 854:	19 f4       	brne	.+6      	; 0x85c <SMLCD+0x3da>
 856:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <second_base>
 85a:	02 c0       	rjmp	.+4      	; 0x860 <SMLCD+0x3de>
 85c:	81 11       	cpse	r24, r1
 85e:	03 c0       	rjmp	.+6      	; 0x866 <SMLCD+0x3e4>
 860:	81 e0       	ldi	r24, 0x01	; 1
 862:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <first_base>
 866:	88 e0       	ldi	r24, 0x08	; 8
 868:	ef dd       	rcall	.-1058   	; 0x448 <LCD_Cursor>
 86a:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 86e:	80 5d       	subi	r24, 0xD0	; 208
 870:	e2 dd       	rcall	.-1084   	; 0x436 <LCD_WriteData>
 872:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <home_base>
 876:	68 c0       	rjmp	.+208    	; 0x948 <SMLCD+0x4c6>
 878:	82 30       	cpi	r24, 0x02	; 2
 87a:	a1 f5       	brne	.+104    	; 0x8e4 <SMLCD+0x462>
 87c:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <third_base>
 880:	81 30       	cpi	r24, 0x01	; 1
 882:	39 f4       	brne	.+14     	; 0x892 <SMLCD+0x410>
 884:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <third_base>
 888:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 88c:	8f 5f       	subi	r24, 0xFF	; 255
 88e:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <score>
 892:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <second_base>
 896:	81 30       	cpi	r24, 0x01	; 1
 898:	61 f4       	brne	.+24     	; 0x8b2 <SMLCD+0x430>
 89a:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <second_base>
 89e:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 8a2:	8f 5f       	subi	r24, 0xFF	; 255
 8a4:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <score>
 8a8:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <first_base>
 8ac:	81 30       	cpi	r24, 0x01	; 1
 8ae:	71 f4       	brne	.+28     	; 0x8cc <SMLCD+0x44a>
 8b0:	04 c0       	rjmp	.+8      	; 0x8ba <SMLCD+0x438>
 8b2:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <first_base>
 8b6:	81 30       	cpi	r24, 0x01	; 1
 8b8:	29 f4       	brne	.+10     	; 0x8c4 <SMLCD+0x442>
 8ba:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <first_base>
 8be:	81 e0       	ldi	r24, 0x01	; 1
 8c0:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <third_base>
 8c4:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <second_base>
 8c8:	81 11       	cpse	r24, r1
 8ca:	03 c0       	rjmp	.+6      	; 0x8d2 <SMLCD+0x450>
 8cc:	81 e0       	ldi	r24, 0x01	; 1
 8ce:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <second_base>
 8d2:	88 e0       	ldi	r24, 0x08	; 8
 8d4:	b9 dd       	rcall	.-1166   	; 0x448 <LCD_Cursor>
 8d6:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 8da:	80 5d       	subi	r24, 0xD0	; 208
 8dc:	ac dd       	rcall	.-1192   	; 0x436 <LCD_WriteData>
 8de:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <home_base>
 8e2:	32 c0       	rjmp	.+100    	; 0x948 <SMLCD+0x4c6>
 8e4:	83 30       	cpi	r24, 0x03	; 3
 8e6:	81 f5       	brne	.+96     	; 0x948 <SMLCD+0x4c6>
 8e8:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <third_base>
 8ec:	81 30       	cpi	r24, 0x01	; 1
 8ee:	39 f4       	brne	.+14     	; 0x8fe <SMLCD+0x47c>
 8f0:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 8f4:	8f 5f       	subi	r24, 0xFF	; 255
 8f6:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <score>
 8fa:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <third_base>
 8fe:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <second_base>
 902:	81 30       	cpi	r24, 0x01	; 1
 904:	39 f4       	brne	.+14     	; 0x914 <SMLCD+0x492>
 906:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 90a:	8f 5f       	subi	r24, 0xFF	; 255
 90c:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <score>
 910:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <second_base>
 914:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <first_base>
 918:	81 30       	cpi	r24, 0x01	; 1
 91a:	39 f4       	brne	.+14     	; 0x92a <SMLCD+0x4a8>
 91c:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <first_base>
 920:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 924:	8f 5f       	subi	r24, 0xFF	; 255
 926:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <score>
 92a:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <third_base>
 92e:	81 11       	cpse	r24, r1
 930:	03 c0       	rjmp	.+6      	; 0x938 <SMLCD+0x4b6>
 932:	81 e0       	ldi	r24, 0x01	; 1
 934:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <third_base>
 938:	88 e0       	ldi	r24, 0x08	; 8
 93a:	86 dd       	rcall	.-1268   	; 0x448 <LCD_Cursor>
 93c:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <score>
 940:	80 5d       	subi	r24, 0xD0	; 208
 942:	79 dd       	rcall	.-1294   	; 0x436 <LCD_WriteData>
 944:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <home_base>
 948:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <cycle>
 94c:	8f 5f       	subi	r24, 0xFF	; 255
 94e:	87 31       	cpi	r24, 0x17	; 23
 950:	28 f4       	brcc	.+10     	; 0x95c <SMLCD+0x4da>
 952:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <cycle>
 956:	80 e0       	ldi	r24, 0x00	; 0
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	08 95       	ret
 95c:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <cycle>
 960:	80 e0       	ldi	r24, 0x00	; 0
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	08 95       	ret
 966:	80 e0       	ldi	r24, 0x00	; 0
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	08 95       	ret
 96c:	83 e0       	ldi	r24, 0x03	; 3
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	08 95       	ret
 972:	81 e0       	ldi	r24, 0x01	; 1
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	08 95       	ret
 978:	81 e0       	ldi	r24, 0x01	; 1
 97a:	90 e0       	ldi	r25, 0x00	; 0
 97c:	08 95       	ret

0000097e <main>:


//////////////////////////////////////////////////////////////////////////

int main(void)
{
 97e:	cf 93       	push	r28
 980:	df 93       	push	r29
 982:	00 d0       	rcall	.+0      	; 0x984 <main+0x6>
 984:	00 d0       	rcall	.+0      	; 0x986 <main+0x8>
 986:	cd b7       	in	r28, 0x3d	; 61
 988:	de b7       	in	r29, 0x3e	; 62
	
	DDRA = 0xFF; PORTA = 0x00;//slave //will as a output rn
 98a:	8f ef       	ldi	r24, 0xFF	; 255
 98c:	81 b9       	out	0x01, r24	; 1
 98e:	12 b8       	out	0x02, r1	; 2
	//DDRB = DDRB & 0x0F; PORTB = PORTB & 0xF0;//Input for the Sensor //at the moment we are using a button
	//DDRC = 0xF0; PORTC = 0x0F;//keypad
	DDRD = 0xFF; PORTD = 0x00;//lcd data bus
 990:	8a b9       	out	0x0a, r24	; 10
 992:	1b b8       	out	0x0b, r1	; 11
	
	DDRB = 0xFF; PORTB = 0x00;//PORTB as output for the matrix: Coloum
 994:	84 b9       	out	0x04, r24	; 4
 996:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;//PORTC as output rows
 998:	87 b9       	out	0x07, r24	; 7
 99a:	18 b8       	out	0x08, r1	; 8
	if(eeprom_read_byte((uint8_t*)1) == 255) {
 99c:	81 e0       	ldi	r24, 0x01	; 1
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	98 d0       	rcall	.+304    	; 0xad2 <eeprom_read_byte>
 9a2:	8f 3f       	cpi	r24, 0xFF	; 255
 9a4:	21 f4       	brne	.+8      	; 0x9ae <main+0x30>
		eeprom_update_byte((uint8_t*)1, (uint8_t) 0);
 9a6:	60 e0       	ldi	r22, 0x00	; 0
 9a8:	81 e0       	ldi	r24, 0x01	; 1
 9aa:	90 e0       	ldi	r25, 0x00	; 0
 9ac:	9a d0       	rcall	.+308    	; 0xae2 <eeprom_update_byte>
	}
	if(eeprom_read_byte((uint8_t*)4) == 255) {
 9ae:	84 e0       	ldi	r24, 0x04	; 4
 9b0:	90 e0       	ldi	r25, 0x00	; 0
 9b2:	8f d0       	rcall	.+286    	; 0xad2 <eeprom_read_byte>
 9b4:	8f 3f       	cpi	r24, 0xFF	; 255
 9b6:	21 f4       	brne	.+8      	; 0x9c0 <main+0x42>
		eeprom_update_byte((uint8_t*)4, (uint8_t) 0);
 9b8:	60 e0       	ldi	r22, 0x00	; 0
 9ba:	84 e0       	ldi	r24, 0x04	; 4
 9bc:	90 e0       	ldi	r25, 0x00	; 0
	}
		
	hi_score = eeprom_read_byte((uint8_t*)1);
 9be:	91 d0       	rcall	.+290    	; 0xae2 <eeprom_update_byte>
 9c0:	81 e0       	ldi	r24, 0x01	; 1
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	86 d0       	rcall	.+268    	; 0xad2 <eeprom_read_byte>
 9c6:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <hi_score>
	hi_score_2 = eeprom_read_byte((uint8_t*)4);
 9ca:	84 e0       	ldi	r24, 0x04	; 4
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	81 d0       	rcall	.+258    	; 0xad2 <eeprom_read_byte>
 9d0:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <hi_score_2>
	static task task1, task2;
	task *tasks[] = { &task1, &task2};
 9d4:	a5 ec       	ldi	r26, 0xC5	; 197
 9d6:	b1 e0       	ldi	r27, 0x01	; 1
 9d8:	ba 83       	std	Y+2, r27	; 0x02
 9da:	a9 83       	std	Y+1, r26	; 0x01
 9dc:	ea eb       	ldi	r30, 0xBA	; 186
 9de:	f1 e0       	ldi	r31, 0x01	; 1
 9e0:	fc 83       	std	Y+4, r31	; 0x04
 9e2:	eb 83       	std	Y+3, r30	; 0x03
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);
	
	
	//task1 - for the LCD input
	task1.state = screen_Init;
 9e4:	1c 92       	st	X, r1
	task1.period = 50;
 9e6:	42 e3       	ldi	r20, 0x32	; 50
 9e8:	50 e0       	ldi	r21, 0x00	; 0
 9ea:	60 e0       	ldi	r22, 0x00	; 0
 9ec:	70 e0       	ldi	r23, 0x00	; 0
 9ee:	11 96       	adiw	r26, 0x01	; 1
 9f0:	4d 93       	st	X+, r20
 9f2:	5d 93       	st	X+, r21
 9f4:	6d 93       	st	X+, r22
 9f6:	7c 93       	st	X, r23
 9f8:	14 97       	sbiw	r26, 0x04	; 4
	task1.elapsedTime = task1.period;
 9fa:	15 96       	adiw	r26, 0x05	; 5
 9fc:	4d 93       	st	X+, r20
 9fe:	5d 93       	st	X+, r21
 a00:	6d 93       	st	X+, r22
 a02:	7c 93       	st	X, r23
 a04:	18 97       	sbiw	r26, 0x08	; 8
	task1.TickFct = &SMLCD;
 a06:	81 e4       	ldi	r24, 0x41	; 65
 a08:	92 e0       	ldi	r25, 0x02	; 2
 a0a:	1a 96       	adiw	r26, 0x0a	; 10
 a0c:	9c 93       	st	X, r25
 a0e:	8e 93       	st	-X, r24
 a10:	19 97       	sbiw	r26, 0x09	; 9

	task2.state = matrix_Init;
 a12:	10 82       	st	Z, r1
	task2.period = 1;
 a14:	81 e0       	ldi	r24, 0x01	; 1
 a16:	90 e0       	ldi	r25, 0x00	; 0
 a18:	a0 e0       	ldi	r26, 0x00	; 0
 a1a:	b0 e0       	ldi	r27, 0x00	; 0
 a1c:	81 83       	std	Z+1, r24	; 0x01
 a1e:	92 83       	std	Z+2, r25	; 0x02
 a20:	a3 83       	std	Z+3, r26	; 0x03
 a22:	b4 83       	std	Z+4, r27	; 0x04
	task2.elapsedTime = task2.period;
 a24:	85 83       	std	Z+5, r24	; 0x05
 a26:	96 83       	std	Z+6, r25	; 0x06
 a28:	a7 83       	std	Z+7, r26	; 0x07
 a2a:	b0 87       	std	Z+8, r27	; 0x08
	task2.TickFct = &SMmatrix;
 a2c:	84 e6       	ldi	r24, 0x64	; 100
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	92 87       	std	Z+10, r25	; 0x0a

/*Initializations*/
	TimerSet(1);
 a32:	81 87       	std	Z+9, r24	; 0x09
 a34:	61 e0       	ldi	r22, 0x01	; 1
 a36:	70 e0       	ldi	r23, 0x00	; 0
 a38:	80 e0       	ldi	r24, 0x00	; 0
	TimerOn();
 a3a:	90 e0       	ldi	r25, 0x00	; 0
 a3c:	5d dc       	rcall	.-1862   	; 0x2f8 <TimerSet>
	SPI_SlaveInit();
 a3e:	6d dc       	rcall	.-1830   	; 0x31a <TimerOn>
 a40:	46 dc       	rcall	.-1908   	; 0x2ce <SPI_SlaveInit>
	LCD_init();
 a42:	ea dc       	rcall	.-1580   	; 0x418 <LCD_init>
 a44:	60 e6       	ldi	r22, 0x60	; 96
	LCD_DisplayString(1, "Oh! That's a    Baseball L2Start");
 a46:	71 e0       	ldi	r23, 0x01	; 1
 a48:	81 e0       	ldi	r24, 0x01	; 1
 a4a:	06 dd       	rcall	.-1524   	; 0x458 <LCD_DisplayString>
 a4c:	7e 01       	movw	r14, r28
 a4e:	85 e0       	ldi	r24, 0x05	; 5
 a50:	e8 0e       	add	r14, r24
 a52:	f1 1c       	adc	r15, r1
 a54:	de 01       	movw	r26, r28
 a56:	11 96       	adiw	r26, 0x01	; 1
 a58:	6d 01       	movw	r12, r26
 a5a:	f6 01       	movw	r30, r12
 a5c:	01 91       	ld	r16, Z+
	
	
	unsigned short i;
	while(1){
		for (i = 0; i < numTasks; i++){
			if (tasks[i]->elapsedTime == tasks[i]->period){
 a5e:	11 91       	ld	r17, Z+
 a60:	6f 01       	movw	r12, r30
 a62:	d8 01       	movw	r26, r16
 a64:	15 96       	adiw	r26, 0x05	; 5
 a66:	4d 91       	ld	r20, X+
 a68:	5d 91       	ld	r21, X+
 a6a:	6d 91       	ld	r22, X+
 a6c:	7c 91       	ld	r23, X
 a6e:	18 97       	sbiw	r26, 0x08	; 8
 a70:	11 96       	adiw	r26, 0x01	; 1
 a72:	8d 91       	ld	r24, X+
 a74:	9d 91       	ld	r25, X+
 a76:	0d 90       	ld	r0, X+
 a78:	bc 91       	ld	r27, X
 a7a:	a0 2d       	mov	r26, r0
 a7c:	48 17       	cp	r20, r24
 a7e:	59 07       	cpc	r21, r25
 a80:	6a 07       	cpc	r22, r26
 a82:	7b 07       	cpc	r23, r27
 a84:	81 f4       	brne	.+32     	; 0xaa6 <main+0x128>
 a86:	f8 01       	movw	r30, r16
 a88:	80 81       	ld	r24, Z
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 a8a:	01 84       	ldd	r0, Z+9	; 0x09
 a8c:	f2 85       	ldd	r31, Z+10	; 0x0a
 a8e:	e0 2d       	mov	r30, r0
 a90:	08 2e       	mov	r0, r24
 a92:	00 0c       	add	r0, r0
 a94:	99 0b       	sbc	r25, r25
 a96:	09 95       	icall
 a98:	d8 01       	movw	r26, r16
 a9a:	8c 93       	st	X, r24
 a9c:	f8 01       	movw	r30, r16
 a9e:	15 82       	std	Z+5, r1	; 0x05
				tasks[i]->elapsedTime = 0;
 aa0:	16 82       	std	Z+6, r1	; 0x06
 aa2:	17 82       	std	Z+7, r1	; 0x07
 aa4:	10 86       	std	Z+8, r1	; 0x08
 aa6:	f8 01       	movw	r30, r16
 aa8:	85 81       	ldd	r24, Z+5	; 0x05
			}
			tasks[i]->elapsedTime += 1; //value is gcd
 aaa:	96 81       	ldd	r25, Z+6	; 0x06
 aac:	a7 81       	ldd	r26, Z+7	; 0x07
 aae:	b0 85       	ldd	r27, Z+8	; 0x08
 ab0:	01 96       	adiw	r24, 0x01	; 1
 ab2:	a1 1d       	adc	r26, r1
 ab4:	b1 1d       	adc	r27, r1
 ab6:	85 83       	std	Z+5, r24	; 0x05
 ab8:	96 83       	std	Z+6, r25	; 0x06
 aba:	a7 83       	std	Z+7, r26	; 0x07
 abc:	b0 87       	std	Z+8, r27	; 0x08
 abe:	ce 14       	cp	r12, r14
 ac0:	df 04       	cpc	r13, r15
	//LCD_WriteData(score +'0');
	
	
	unsigned short i;
	while(1){
		for (i = 0; i < numTasks; i++){
 ac2:	59 f6       	brne	.-106    	; 0xa5a <main+0xdc>
 ac4:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <TimerFlag>
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1; //value is gcd
		}
		while(!TimerFlag);
 ac8:	88 23       	and	r24, r24
 aca:	e1 f3       	breq	.-8      	; 0xac4 <main+0x146>
 acc:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <TimerFlag>
		TimerFlag = 0;
 ad0:	c1 cf       	rjmp	.-126    	; 0xa54 <main+0xd6>

00000ad2 <eeprom_read_byte>:
 ad2:	f9 99       	sbic	0x1f, 1	; 31
 ad4:	fe cf       	rjmp	.-4      	; 0xad2 <eeprom_read_byte>
 ad6:	92 bd       	out	0x22, r25	; 34
 ad8:	81 bd       	out	0x21, r24	; 33
 ada:	f8 9a       	sbi	0x1f, 0	; 31
 adc:	99 27       	eor	r25, r25
 ade:	80 b5       	in	r24, 0x20	; 32
 ae0:	08 95       	ret

00000ae2 <eeprom_update_byte>:
 ae2:	26 2f       	mov	r18, r22

00000ae4 <eeprom_update_r18>:
 ae4:	f9 99       	sbic	0x1f, 1	; 31
 ae6:	fe cf       	rjmp	.-4      	; 0xae4 <eeprom_update_r18>
 ae8:	92 bd       	out	0x22, r25	; 34
 aea:	81 bd       	out	0x21, r24	; 33
 aec:	f8 9a       	sbi	0x1f, 0	; 31
 aee:	01 97       	sbiw	r24, 0x01	; 1
 af0:	00 b4       	in	r0, 0x20	; 32
 af2:	02 16       	cp	r0, r18
 af4:	39 f0       	breq	.+14     	; 0xb04 <eeprom_update_r18+0x20>
 af6:	1f ba       	out	0x1f, r1	; 31
 af8:	20 bd       	out	0x20, r18	; 32
 afa:	0f b6       	in	r0, 0x3f	; 63
 afc:	f8 94       	cli
 afe:	fa 9a       	sbi	0x1f, 2	; 31
 b00:	f9 9a       	sbi	0x1f, 1	; 31
 b02:	0f be       	out	0x3f, r0	; 63
 b04:	08 95       	ret

00000b06 <_exit>:
 b06:	f8 94       	cli

00000b08 <__stop_program>:
 b08:	ff cf       	rjmp	.-2      	; 0xb08 <__stop_program>
