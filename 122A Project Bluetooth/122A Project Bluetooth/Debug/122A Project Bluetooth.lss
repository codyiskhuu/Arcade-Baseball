
122A Project Bluetooth.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000034e  000003e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000034e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800104  00800104  000003e6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003e6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000418  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000458  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f71  00000000  00000000  00000550  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e1  00000000  00000000  000014c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007e2  00000000  00000000  00001ea2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000214  00000000  00000000  00002684  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006b1  00000000  00000000  00002898  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000431  00000000  00000000  00002f49  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  0000337a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	fe c0       	rjmp	.+508    	; 0x232 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	ae c0       	rjmp	.+348    	; 0x1aa <__vector_19>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e4       	ldi	r30, 0x4E	; 78
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 31       	cpi	r26, 0x19	; 25
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f3 d0       	rcall	.+486    	; 0x2aa <main>
  c4:	42 c1       	rjmp	.+644    	; 0x34a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <initUSART>:
void LCD_On(){
	PORTB = 0x01;
}

void LCD_Off(){
	PORTB = 0x00;
  c8:	81 30       	cpi	r24, 0x01	; 1
  ca:	81 f0       	breq	.+32     	; 0xec <initUSART+0x24>
  cc:	e1 ec       	ldi	r30, 0xC1	; 193
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 81       	ld	r24, Z
  d2:	88 61       	ori	r24, 0x18	; 24
  d4:	80 83       	st	Z, r24
  d6:	e2 ec       	ldi	r30, 0xC2	; 194
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	86 60       	ori	r24, 0x06	; 6
  de:	80 83       	st	Z, r24
  e0:	83 e3       	ldi	r24, 0x33	; 51
  e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  e6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  ea:	08 95       	ret
  ec:	e9 ec       	ldi	r30, 0xC9	; 201
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	88 61       	ori	r24, 0x18	; 24
  f4:	80 83       	st	Z, r24
  f6:	ea ec       	ldi	r30, 0xCA	; 202
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	86 60       	ori	r24, 0x06	; 6
  fe:	80 83       	st	Z, r24
 100:	83 e3       	ldi	r24, 0x33	; 51
 102:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
 106:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
 10a:	08 95       	ret

0000010c <USART_Flush>:
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	29 f4       	brne	.+10     	; 0x11a <USART_Flush+0xe>
 110:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 114:	88 23       	and	r24, r24
 116:	74 f0       	brlt	.+28     	; 0x134 <USART_Flush+0x28>
 118:	08 95       	ret
 11a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 11e:	88 23       	and	r24, r24
 120:	8c f4       	brge	.+34     	; 0x144 <USART_Flush+0x38>
 122:	a6 ec       	ldi	r26, 0xC6	; 198
 124:	b0 e0       	ldi	r27, 0x00	; 0
 126:	e0 ec       	ldi	r30, 0xC0	; 192
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	8c 91       	ld	r24, X
 12c:	80 81       	ld	r24, Z
 12e:	88 23       	and	r24, r24
 130:	e4 f3       	brlt	.-8      	; 0x12a <USART_Flush+0x1e>
 132:	08 95       	ret
 134:	ae ec       	ldi	r26, 0xCE	; 206
 136:	b0 e0       	ldi	r27, 0x00	; 0
 138:	e8 ec       	ldi	r30, 0xC8	; 200
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	8c 91       	ld	r24, X
 13e:	80 81       	ld	r24, Z
 140:	88 23       	and	r24, r24
 142:	e4 f3       	brlt	.-8      	; 0x13c <USART_Flush+0x30>
 144:	08 95       	ret

00000146 <SMbluetooth>:
 146:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <state_blue>
 14a:	81 30       	cpi	r24, 0x01	; 1
 14c:	51 f0       	breq	.+20     	; 0x162 <SMbluetooth+0x1c>
 14e:	28 f0       	brcs	.+10     	; 0x15a <SMbluetooth+0x14>
 150:	82 30       	cpi	r24, 0x02	; 2
 152:	b1 f0       	breq	.+44     	; 0x180 <SMbluetooth+0x3a>
 154:	83 30       	cpi	r24, 0x03	; 3
 156:	01 f1       	breq	.+64     	; 0x198 <SMbluetooth+0x52>
 158:	25 c0       	rjmp	.+74     	; 0x1a4 <SMbluetooth+0x5e>
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <state_blue>
 160:	21 c0       	rjmp	.+66     	; 0x1a4 <SMbluetooth+0x5e>
 162:	18 99       	sbic	0x03, 0	; 3
 164:	04 c0       	rjmp	.+8      	; 0x16e <SMbluetooth+0x28>
 166:	82 e0       	ldi	r24, 0x02	; 2
 168:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <state_blue>
 16c:	1b c0       	rjmp	.+54     	; 0x1a4 <SMbluetooth+0x5e>
 16e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 172:	88 23       	and	r24, r24
 174:	bc f4       	brge	.+46     	; 0x1a4 <SMbluetooth+0x5e>
 176:	83 e0       	ldi	r24, 0x03	; 3
 178:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <state_blue>
 17c:	12 b8       	out	0x02, r1	; 2
 17e:	12 c0       	rjmp	.+36     	; 0x1a4 <SMbluetooth+0x5e>
 180:	18 99       	sbic	0x03, 0	; 3
 182:	05 c0       	rjmp	.+10     	; 0x18e <SMbluetooth+0x48>
 184:	12 b8       	out	0x02, r1	; 2
 186:	82 e0       	ldi	r24, 0x02	; 2
 188:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <state_blue>
 18c:	0b c0       	rjmp	.+22     	; 0x1a4 <SMbluetooth+0x5e>
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	82 b9       	out	0x02, r24	; 2
 192:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <state_blue>
 196:	06 c0       	rjmp	.+12     	; 0x1a4 <SMbluetooth+0x5e>
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <state_blue>
 19e:	82 b9       	out	0x02, r24	; 2
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	b4 df       	rcall	.-152    	; 0x10c <USART_Flush>
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	08 95       	ret

000001aa <__vector_19>:
 1aa:	1f 92       	push	r1
 1ac:	0f 92       	push	r0
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	0f 92       	push	r0
 1b2:	11 24       	eor	r1, r1
 1b4:	8f 93       	push	r24
 1b6:	8e b5       	in	r24, 0x2e	; 46
 1b8:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <receivedData>
 1bc:	8f 91       	pop	r24
 1be:	0f 90       	pop	r0
 1c0:	0f be       	out	0x3f, r0	; 63
 1c2:	0f 90       	pop	r0
 1c4:	1f 90       	pop	r1
 1c6:	18 95       	reti

000001c8 <TimerSet>:
 1c8:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 1cc:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1d0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1d4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1d8:	60 93 0f 01 	sts	0x010F, r22	; 0x80010f <_avr_timer_cntcurr>
 1dc:	70 93 10 01 	sts	0x0110, r23	; 0x800110 <_avr_timer_cntcurr+0x1>
 1e0:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <_avr_timer_cntcurr+0x2>
 1e4:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <_avr_timer_cntcurr+0x3>
 1e8:	08 95       	ret

000001ea <TimerOn>:
 1ea:	8b e0       	ldi	r24, 0x0B	; 11
 1ec:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1f0:	8d e7       	ldi	r24, 0x7D	; 125
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1fc:	82 e0       	ldi	r24, 0x02	; 2
 1fe:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 202:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 206:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 20a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 20e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 212:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 216:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 21a:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <_avr_timer_cntcurr>
 21e:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <_avr_timer_cntcurr+0x1>
 222:	a0 93 11 01 	sts	0x0111, r26	; 0x800111 <_avr_timer_cntcurr+0x2>
 226:	b0 93 12 01 	sts	0x0112, r27	; 0x800112 <_avr_timer_cntcurr+0x3>
 22a:	8f b7       	in	r24, 0x3f	; 63
 22c:	80 68       	ori	r24, 0x80	; 128
 22e:	8f bf       	out	0x3f, r24	; 63
 230:	08 95       	ret

00000232 <__vector_13>:
 232:	1f 92       	push	r1
 234:	0f 92       	push	r0
 236:	0f b6       	in	r0, 0x3f	; 63
 238:	0f 92       	push	r0
 23a:	11 24       	eor	r1, r1
 23c:	8f 93       	push	r24
 23e:	9f 93       	push	r25
 240:	af 93       	push	r26
 242:	bf 93       	push	r27
 244:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <_avr_timer_cntcurr>
 248:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <_avr_timer_cntcurr+0x1>
 24c:	a0 91 11 01 	lds	r26, 0x0111	; 0x800111 <_avr_timer_cntcurr+0x2>
 250:	b0 91 12 01 	lds	r27, 0x0112	; 0x800112 <_avr_timer_cntcurr+0x3>
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	a1 09       	sbc	r26, r1
 258:	b1 09       	sbc	r27, r1
 25a:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <_avr_timer_cntcurr>
 25e:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <_avr_timer_cntcurr+0x1>
 262:	a0 93 11 01 	sts	0x0111, r26	; 0x800111 <_avr_timer_cntcurr+0x2>
 266:	b0 93 12 01 	sts	0x0112, r27	; 0x800112 <_avr_timer_cntcurr+0x3>
 26a:	89 2b       	or	r24, r25
 26c:	8a 2b       	or	r24, r26
 26e:	8b 2b       	or	r24, r27
 270:	99 f4       	brne	.+38     	; 0x298 <__vector_13+0x66>
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <TimerFlag>
 278:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 27c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 280:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 284:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 288:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <_avr_timer_cntcurr>
 28c:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <_avr_timer_cntcurr+0x1>
 290:	a0 93 11 01 	sts	0x0111, r26	; 0x800111 <_avr_timer_cntcurr+0x2>
 294:	b0 93 12 01 	sts	0x0112, r27	; 0x800112 <_avr_timer_cntcurr+0x3>
 298:	bf 91       	pop	r27
 29a:	af 91       	pop	r26
 29c:	9f 91       	pop	r25
 29e:	8f 91       	pop	r24
 2a0:	0f 90       	pop	r0
 2a2:	0f be       	out	0x3f, r0	; 63
 2a4:	0f 90       	pop	r0
 2a6:	1f 90       	pop	r1
 2a8:	18 95       	reti

000002aa <main>:
//////////////////////////////////////////////////////////////////////////

int main(void)
{

	DDRA = 0xFF; PORTA = 0x00; //PORTA  is an output
 2aa:	8f ef       	ldi	r24, 0xFF	; 255
 2ac:	81 b9       	out	0x01, r24	; 1
 2ae:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x00; PORTB = 0xFF;// PORTB input
 2b0:	14 b8       	out	0x04, r1	; 4
 2b2:	85 b9       	out	0x05, r24	; 5
	task *tasks[] = { &task1};
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	
	//task1 - for the sensor input
	task1.state = bluetooth_Init;
 2b4:	e4 e0       	ldi	r30, 0x04	; 4
 2b6:	f1 e0       	ldi	r31, 0x01	; 1
 2b8:	10 82       	st	Z, r1
	task1.period = 100;
 2ba:	84 e6       	ldi	r24, 0x64	; 100
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	a0 e0       	ldi	r26, 0x00	; 0
 2c0:	b0 e0       	ldi	r27, 0x00	; 0
 2c2:	81 83       	std	Z+1, r24	; 0x01
 2c4:	92 83       	std	Z+2, r25	; 0x02
 2c6:	a3 83       	std	Z+3, r26	; 0x03
 2c8:	b4 83       	std	Z+4, r27	; 0x04
	task1.elapsedTime = task1.period;
 2ca:	85 83       	std	Z+5, r24	; 0x05
 2cc:	96 83       	std	Z+6, r25	; 0x06
 2ce:	a7 83       	std	Z+7, r26	; 0x07
 2d0:	b0 87       	std	Z+8, r27	; 0x08
	task1.TickFct = &SMbluetooth;
 2d2:	83 ea       	ldi	r24, 0xA3	; 163
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	92 87       	std	Z+10, r25	; 0x0a
 2d8:	81 87       	std	Z+9, r24	; 0x09

	/*Initializations*/
	TimerSet(100);
 2da:	64 e6       	ldi	r22, 0x64	; 100
 2dc:	70 e0       	ldi	r23, 0x00	; 0
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	72 df       	rcall	.-284    	; 0x1c8 <TimerSet>
	TimerOn();
 2e4:	82 df       	rcall	.-252    	; 0x1ea <TimerOn>
	//SPI_MasterInit();
	
	initUSART(0);//using usart port 0
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	ef de       	rcall	.-546    	; 0xc8 <initUSART>
 2ea:	81 e0       	ldi	r24, 0x01	; 1
	PORTA = 0x01;
 2ec:	82 b9       	out	0x02, r24	; 2
 2ee:	c4 e0       	ldi	r28, 0x04	; 4
	//////////////////////////////////////////////////////////////////////////
	unsigned short i;
	while(1){
		for (i = 0; i < numTasks; i++){
			if (tasks[i]->elapsedTime == tasks[i]->period){
 2f0:	d1 e0       	ldi	r29, 0x01	; 1
 2f2:	4d 81       	ldd	r20, Y+5	; 0x05
 2f4:	5e 81       	ldd	r21, Y+6	; 0x06
 2f6:	6f 81       	ldd	r22, Y+7	; 0x07
 2f8:	78 85       	ldd	r23, Y+8	; 0x08
 2fa:	89 81       	ldd	r24, Y+1	; 0x01
 2fc:	9a 81       	ldd	r25, Y+2	; 0x02
 2fe:	ab 81       	ldd	r26, Y+3	; 0x03
 300:	bc 81       	ldd	r27, Y+4	; 0x04
 302:	48 17       	cp	r20, r24
 304:	59 07       	cpc	r21, r25
 306:	6a 07       	cpc	r22, r26
 308:	7b 07       	cpc	r23, r27
 30a:	61 f4       	brne	.+24     	; 0x324 <main+0x7a>
 30c:	88 81       	ld	r24, Y
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 30e:	e9 85       	ldd	r30, Y+9	; 0x09
 310:	fa 85       	ldd	r31, Y+10	; 0x0a
 312:	08 2e       	mov	r0, r24
 314:	00 0c       	add	r0, r0
 316:	99 0b       	sbc	r25, r25
 318:	09 95       	icall
 31a:	88 83       	st	Y, r24
 31c:	1d 82       	std	Y+5, r1	; 0x05
				tasks[i]->elapsedTime = 0;
 31e:	1e 82       	std	Y+6, r1	; 0x06
 320:	1f 82       	std	Y+7, r1	; 0x07
 322:	18 86       	std	Y+8, r1	; 0x08
 324:	8d 81       	ldd	r24, Y+5	; 0x05
			}
			tasks[i]->elapsedTime += 100; //value is gcd
 326:	9e 81       	ldd	r25, Y+6	; 0x06
 328:	af 81       	ldd	r26, Y+7	; 0x07
 32a:	b8 85       	ldd	r27, Y+8	; 0x08
 32c:	8c 59       	subi	r24, 0x9C	; 156
 32e:	9f 4f       	sbci	r25, 0xFF	; 255
 330:	af 4f       	sbci	r26, 0xFF	; 255
 332:	bf 4f       	sbci	r27, 0xFF	; 255
 334:	8d 83       	std	Y+5, r24	; 0x05
 336:	9e 83       	std	Y+6, r25	; 0x06
 338:	af 83       	std	Y+7, r26	; 0x07
 33a:	b8 87       	std	Y+8, r27	; 0x08
 33c:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <TimerFlag>
		}
		while(!TimerFlag);
 340:	88 23       	and	r24, r24
 342:	e1 f3       	breq	.-8      	; 0x33c <main+0x92>
 344:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <TimerFlag>
		TimerFlag = 0;
 348:	d4 cf       	rjmp	.-88     	; 0x2f2 <main+0x48>

0000034a <_exit>:
		
		
	}
 34a:	f8 94       	cli

0000034c <__stop_program>:
 34c:	ff cf       	rjmp	.-2      	; 0x34c <__stop_program>
