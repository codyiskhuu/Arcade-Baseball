
122A Project Bluetooth.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00000748  000007dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000748  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000035  00800150  00800150  0000082c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000082c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000085c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  0000089c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000120a  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1b  00000000  00000000  00001bae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aca  00000000  00000000  000025c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000024c  00000000  00000000  00003094  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007f6  00000000  00000000  000032e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000048f  00000000  00000000  00003ad6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00003f65  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	53 c0       	rjmp	.+166    	; 0xa8 <__ctors_end>
   2:	00 00       	nop
   4:	6e c0       	rjmp	.+220    	; 0xe2 <__bad_interrupt>
   6:	00 00       	nop
   8:	6c c0       	rjmp	.+216    	; 0xe2 <__bad_interrupt>
   a:	00 00       	nop
   c:	6a c0       	rjmp	.+212    	; 0xe2 <__bad_interrupt>
   e:	00 00       	nop
  10:	68 c0       	rjmp	.+208    	; 0xe2 <__bad_interrupt>
  12:	00 00       	nop
  14:	66 c0       	rjmp	.+204    	; 0xe2 <__bad_interrupt>
  16:	00 00       	nop
  18:	64 c0       	rjmp	.+200    	; 0xe2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	62 c0       	rjmp	.+196    	; 0xe2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	60 c0       	rjmp	.+192    	; 0xe2 <__bad_interrupt>
  22:	00 00       	nop
  24:	5e c0       	rjmp	.+188    	; 0xe2 <__bad_interrupt>
  26:	00 00       	nop
  28:	5c c0       	rjmp	.+184    	; 0xe2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5a c0       	rjmp	.+180    	; 0xe2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	58 c0       	rjmp	.+176    	; 0xe2 <__bad_interrupt>
  32:	00 00       	nop
  34:	a7 c2       	rjmp	.+1358   	; 0x584 <__vector_13>
  36:	00 00       	nop
  38:	54 c0       	rjmp	.+168    	; 0xe2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	52 c0       	rjmp	.+164    	; 0xe2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	50 c0       	rjmp	.+160    	; 0xe2 <__bad_interrupt>
  42:	00 00       	nop
  44:	4e c0       	rjmp	.+156    	; 0xe2 <__bad_interrupt>
  46:	00 00       	nop
  48:	4c c0       	rjmp	.+152    	; 0xe2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	57 c2       	rjmp	.+1198   	; 0x4fc <__vector_19>
  4e:	00 00       	nop
  50:	48 c0       	rjmp	.+144    	; 0xe2 <__bad_interrupt>
  52:	00 00       	nop
  54:	46 c0       	rjmp	.+140    	; 0xe2 <__bad_interrupt>
  56:	00 00       	nop
  58:	44 c0       	rjmp	.+136    	; 0xe2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	42 c0       	rjmp	.+132    	; 0xe2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	40 c0       	rjmp	.+128    	; 0xe2 <__bad_interrupt>
  62:	00 00       	nop
  64:	3e c0       	rjmp	.+124    	; 0xe2 <__bad_interrupt>
  66:	00 00       	nop
  68:	3c c0       	rjmp	.+120    	; 0xe2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3a c0       	rjmp	.+116    	; 0xe2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	38 c0       	rjmp	.+112    	; 0xe2 <__bad_interrupt>
  72:	00 00       	nop
  74:	36 c0       	rjmp	.+108    	; 0xe2 <__bad_interrupt>
  76:	00 00       	nop
  78:	34 c0       	rjmp	.+104    	; 0xe2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	32 c0       	rjmp	.+100    	; 0xe2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	30 c0       	rjmp	.+96     	; 0xe2 <__bad_interrupt>
  82:	00 00       	nop
  84:	2e c0       	rjmp	.+92     	; 0xe2 <__bad_interrupt>
  86:	00 00       	nop
  88:	2c c0       	rjmp	.+88     	; 0xe2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	10 01       	movw	r2, r0
  8e:	14 01       	movw	r2, r8
  90:	34 01       	movw	r6, r8
  92:	3d 01       	movw	r6, r26
  94:	55 01       	movw	r10, r10
  96:	67 01       	movw	r12, r14
  98:	4f 01       	movw	r8, r30
  9a:	82 01       	movw	r16, r4
  9c:	94 01       	movw	r18, r8
  9e:	9c 01       	movw	r18, r24
  a0:	53 02       	muls	r21, r19
  a2:	59 02       	muls	r21, r25
  a4:	5f 02       	muls	r21, r31
  a6:	65 02       	muls	r22, r21

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	d0 e4       	ldi	r29, 0x40	; 64
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	e8 e4       	ldi	r30, 0x48	; 72
  bc:	f7 e0       	ldi	r31, 0x07	; 7
  be:	00 e0       	ldi	r16, 0x00	; 0
  c0:	0b bf       	out	0x3b, r16	; 59
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x14>
  c4:	07 90       	elpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a0 35       	cpi	r26, 0x50	; 80
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0x10>

000000ce <__do_clear_bss>:
  ce:	21 e0       	ldi	r18, 0x01	; 1
  d0:	a0 e5       	ldi	r26, 0x50	; 80
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
  d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
  d8:	a5 38       	cpi	r26, 0x85	; 133
  da:	b2 07       	cpc	r27, r18
  dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
  de:	8e d2       	rcall	.+1308   	; 0x5fc <main>
  e0:	31 c3       	rjmp	.+1634   	; 0x744 <_exit>

000000e2 <__bad_interrupt>:
  e2:	8e cf       	rjmp	.-228    	; 0x0 <__vectors>

000000e4 <initUSART>:
void LCD_On(){
	PORTB = 0x01;
}

void LCD_Off(){
	PORTB = 0x00;
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	81 f0       	breq	.+32     	; 0x108 <initUSART+0x24>
  e8:	e1 ec       	ldi	r30, 0xC1	; 193
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	88 61       	ori	r24, 0x18	; 24
  f0:	80 83       	st	Z, r24
  f2:	e2 ec       	ldi	r30, 0xC2	; 194
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	86 60       	ori	r24, 0x06	; 6
  fa:	80 83       	st	Z, r24
  fc:	83 e3       	ldi	r24, 0x33	; 51
  fe:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 102:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 106:	08 95       	ret
 108:	e9 ec       	ldi	r30, 0xC9	; 201
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	88 61       	ori	r24, 0x18	; 24
 110:	80 83       	st	Z, r24
 112:	ea ec       	ldi	r30, 0xCA	; 202
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	86 60       	ori	r24, 0x06	; 6
 11a:	80 83       	st	Z, r24
 11c:	83 e3       	ldi	r24, 0x33	; 51
 11e:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
 122:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
 126:	08 95       	ret

00000128 <USART_Flush>:
 128:	81 30       	cpi	r24, 0x01	; 1
 12a:	29 f4       	brne	.+10     	; 0x136 <USART_Flush+0xe>
 12c:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 130:	88 23       	and	r24, r24
 132:	74 f0       	brlt	.+28     	; 0x150 <USART_Flush+0x28>
 134:	08 95       	ret
 136:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 13a:	88 23       	and	r24, r24
 13c:	8c f4       	brge	.+34     	; 0x160 <USART_Flush+0x38>
 13e:	a6 ec       	ldi	r26, 0xC6	; 198
 140:	b0 e0       	ldi	r27, 0x00	; 0
 142:	e0 ec       	ldi	r30, 0xC0	; 192
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	8c 91       	ld	r24, X
 148:	80 81       	ld	r24, Z
 14a:	88 23       	and	r24, r24
 14c:	e4 f3       	brlt	.-8      	; 0x146 <USART_Flush+0x1e>
 14e:	08 95       	ret
 150:	ae ec       	ldi	r26, 0xCE	; 206
 152:	b0 e0       	ldi	r27, 0x00	; 0
 154:	e8 ec       	ldi	r30, 0xC8	; 200
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	8c 91       	ld	r24, X
 15a:	80 81       	ld	r24, Z
 15c:	88 23       	and	r24, r24
 15e:	e4 f3       	brlt	.-8      	; 0x158 <USART_Flush+0x30>
 160:	08 95       	ret

00000162 <SMbluetooth>:
 162:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <state_blue>
 166:	81 30       	cpi	r24, 0x01	; 1
 168:	41 f0       	breq	.+16     	; 0x17a <SMbluetooth+0x18>
 16a:	18 f0       	brcs	.+6      	; 0x172 <SMbluetooth+0x10>
 16c:	82 30       	cpi	r24, 0x02	; 2
 16e:	e1 f0       	breq	.+56     	; 0x1a8 <SMbluetooth+0x46>
 170:	2f c0       	rjmp	.+94     	; 0x1d0 <SMbluetooth+0x6e>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <state_blue>
 178:	30 c0       	rjmp	.+96     	; 0x1da <SMbluetooth+0x78>
 17a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 17e:	88 23       	and	r24, r24
 180:	34 f0       	brlt	.+12     	; 0x18e <SMbluetooth+0x2c>
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	d1 df       	rcall	.-94     	; 0x128 <USART_Flush>
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <state_blue>
 18c:	26 c0       	rjmp	.+76     	; 0x1da <SMbluetooth+0x78>
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	cb df       	rcall	.-106    	; 0x128 <USART_Flush>
 192:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 196:	81 60       	ori	r24, 0x01	; 1
 198:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <out>
 19c:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <sensor_counter>
 1a0:	82 e0       	ldi	r24, 0x02	; 2
 1a2:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <state_blue>
 1a6:	1d c0       	rjmp	.+58     	; 0x1e2 <SMbluetooth+0x80>
 1a8:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <sensor_counter>
 1ac:	88 30       	cpi	r24, 0x08	; 8
 1ae:	38 f4       	brcc	.+14     	; 0x1be <SMbluetooth+0x5c>
 1b0:	8f 5f       	subi	r24, 0xFF	; 255
 1b2:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <sensor_counter>
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <state_blue>
 1bc:	12 c0       	rjmp	.+36     	; 0x1e2 <SMbluetooth+0x80>
 1be:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 1c2:	8e 7f       	andi	r24, 0xFE	; 254
 1c4:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <out>
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <state_blue>
 1ce:	05 c0       	rjmp	.+10     	; 0x1da <SMbluetooth+0x78>
 1d0:	81 30       	cpi	r24, 0x01	; 1
 1d2:	19 f0       	breq	.+6      	; 0x1da <SMbluetooth+0x78>
 1d4:	82 30       	cpi	r24, 0x02	; 2
 1d6:	41 f4       	brne	.+16     	; 0x1e8 <SMbluetooth+0x86>
 1d8:	04 c0       	rjmp	.+8      	; 0x1e2 <SMbluetooth+0x80>
 1da:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 1de:	82 b9       	out	0x02, r24	; 2
 1e0:	03 c0       	rjmp	.+6      	; 0x1e8 <SMbluetooth+0x86>
 1e2:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 1e6:	82 b9       	out	0x02, r24	; 2
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	08 95       	ret

000001ee <SPI_MasterInit>:
 1ee:	80 eb       	ldi	r24, 0xB0	; 176
 1f0:	84 b9       	out	0x04, r24	; 4
 1f2:	81 e5       	ldi	r24, 0x51	; 81
 1f4:	8c bd       	out	0x2c, r24	; 44
 1f6:	08 95       	ret

000001f8 <SPI_MasterTransmit>:
 1f8:	8e bd       	out	0x2e, r24	; 46
 1fa:	2c 98       	cbi	0x05, 4	; 5
 1fc:	0d b4       	in	r0, 0x2d	; 45
 1fe:	07 fe       	sbrs	r0, 7
 200:	fd cf       	rjmp	.-6      	; 0x1fc <SPI_MasterTransmit+0x4>
 202:	2c 9a       	sbi	0x05, 4	; 5
 204:	08 95       	ret

00000206 <SMmenu>:
 206:	cf 93       	push	r28
 208:	20 91 83 01 	lds	r18, 0x0183	; 0x800183 <state_menu>
 20c:	82 2f       	mov	r24, r18
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	87 30       	cpi	r24, 0x07	; 7
 212:	91 05       	cpc	r25, r1
 214:	08 f0       	brcs	.+2      	; 0x218 <SMmenu+0x12>
 216:	61 c0       	rjmp	.+194    	; 0x2da <SMmenu+0xd4>
 218:	fc 01       	movw	r30, r24
 21a:	ea 5b       	subi	r30, 0xBA	; 186
 21c:	ff 4f       	sbci	r31, 0xFF	; 255
 21e:	89 c2       	rjmp	.+1298   	; 0x732 <__tablejump2__>
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <state_menu>
 226:	5b c0       	rjmp	.+182    	; 0x2de <SMmenu+0xd8>
 228:	93 b1       	in	r25, 0x03	; 3
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <game_state>
 230:	21 30       	cpi	r18, 0x01	; 1
 232:	09 f0       	breq	.+2      	; 0x236 <SMmenu+0x30>
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	90 fd       	sbrc	r25, 0
 238:	0a c0       	rjmp	.+20     	; 0x24e <SMmenu+0x48>
 23a:	88 23       	and	r24, r24
 23c:	41 f0       	breq	.+16     	; 0x24e <SMmenu+0x48>
 23e:	c2 e0       	ldi	r28, 0x02	; 2
 240:	c0 93 78 01 	sts	0x0178, r28	; 0x800178 <game_state>
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	d8 df       	rcall	.-80     	; 0x1f8 <SPI_MasterTransmit>
 248:	c0 93 83 01 	sts	0x0183, r28	; 0x800183 <state_menu>
 24c:	4b c0       	rjmp	.+150    	; 0x2e4 <SMmenu+0xde>
 24e:	30 99       	sbic	0x06, 0	; 6
 250:	46 c0       	rjmp	.+140    	; 0x2de <SMmenu+0xd8>
 252:	88 23       	and	r24, r24
 254:	09 f4       	brne	.+2      	; 0x258 <SMmenu+0x52>
 256:	43 c0       	rjmp	.+134    	; 0x2de <SMmenu+0xd8>
 258:	c4 e0       	ldi	r28, 0x04	; 4
 25a:	c0 93 78 01 	sts	0x0178, r28	; 0x800178 <game_state>
 25e:	84 e0       	ldi	r24, 0x04	; 4
 260:	cb df       	rcall	.-106    	; 0x1f8 <SPI_MasterTransmit>
 262:	c0 93 83 01 	sts	0x0183, r28	; 0x800183 <state_menu>
 266:	3e c0       	rjmp	.+124    	; 0x2e4 <SMmenu+0xde>
 268:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <strikes>
 26c:	83 30       	cpi	r24, 0x03	; 3
 26e:	d1 f5       	brne	.+116    	; 0x2e4 <SMmenu+0xde>
 270:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <game_state>
 274:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <state_menu>
 278:	35 c0       	rjmp	.+106    	; 0x2e4 <SMmenu+0xde>
 27a:	18 99       	sbic	0x03, 0	; 3
 27c:	33 c0       	rjmp	.+102    	; 0x2e4 <SMmenu+0xde>
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <game_state>
 284:	93 30       	cpi	r25, 0x03	; 3
 286:	09 f0       	breq	.+2      	; 0x28a <SMmenu+0x84>
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	88 23       	and	r24, r24
 28c:	59 f1       	breq	.+86     	; 0x2e4 <SMmenu+0xde>
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <game_state>
 294:	b1 df       	rcall	.-158    	; 0x1f8 <SPI_MasterTransmit>
 296:	86 e0       	ldi	r24, 0x06	; 6
 298:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <state_menu>
 29c:	23 c0       	rjmp	.+70     	; 0x2e4 <SMmenu+0xde>
 29e:	18 9b       	sbis	0x03, 0	; 3
 2a0:	21 c0       	rjmp	.+66     	; 0x2e4 <SMmenu+0xde>
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <state_menu>
 2a8:	1a c0       	rjmp	.+52     	; 0x2de <SMmenu+0xd8>
 2aa:	18 99       	sbic	0x03, 0	; 3
 2ac:	1b c0       	rjmp	.+54     	; 0x2e4 <SMmenu+0xde>
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <game_state>
 2b4:	94 30       	cpi	r25, 0x04	; 4
 2b6:	09 f0       	breq	.+2      	; 0x2ba <SMmenu+0xb4>
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	88 23       	and	r24, r24
 2bc:	99 f0       	breq	.+38     	; 0x2e4 <SMmenu+0xde>
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <game_state>
 2c4:	99 df       	rcall	.-206    	; 0x1f8 <SPI_MasterTransmit>
 2c6:	85 e0       	ldi	r24, 0x05	; 5
 2c8:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <state_menu>
 2cc:	0b c0       	rjmp	.+22     	; 0x2e4 <SMmenu+0xde>
 2ce:	18 9b       	sbis	0x03, 0	; 3
 2d0:	09 c0       	rjmp	.+18     	; 0x2e4 <SMmenu+0xde>
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <state_menu>
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <SMmenu+0xd8>
 2da:	21 30       	cpi	r18, 0x01	; 1
 2dc:	19 f4       	brne	.+6      	; 0x2e4 <SMmenu+0xde>
 2de:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 2e2:	82 b9       	out	0x02, r24	; 2
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	cf 91       	pop	r28
 2ea:	08 95       	ret

000002ec <SMSensor>:
 2ec:	e0 91 84 01 	lds	r30, 0x0184	; 0x800184 <state_sensor>
 2f0:	8e 2f       	mov	r24, r30
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	87 30       	cpi	r24, 0x07	; 7
 2f6:	91 05       	cpc	r25, r1
 2f8:	08 f0       	brcs	.+2      	; 0x2fc <SMSensor+0x10>
 2fa:	fd c0       	rjmp	.+506    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 2fc:	fc 01       	movw	r30, r24
 2fe:	e3 5b       	subi	r30, 0xB3	; 179
 300:	ff 4f       	sbci	r31, 0xFF	; 255
 302:	17 c2       	rjmp	.+1070   	; 0x732 <__tablejump2__>
 304:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	e0 50       	subi	r30, 0x00	; 0
 30c:	ff 4f       	sbci	r31, 0xFF	; 255
 30e:	80 81       	ld	r24, Z
 310:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 314:	81 81       	ldd	r24, Z+1	; 0x01
 316:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 31a:	82 81       	ldd	r24, Z+2	; 0x02
 31c:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 326:	e7 c0       	rjmp	.+462    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 328:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <game_state>
 32c:	82 30       	cpi	r24, 0x02	; 2
 32e:	09 f0       	breq	.+2      	; 0x332 <SMSensor+0x46>
 330:	e2 c0       	rjmp	.+452    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 332:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 336:	df c0       	rjmp	.+446    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 338:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <strikes>
 33c:	83 30       	cpi	r24, 0x03	; 3
 33e:	29 f4       	brne	.+10     	; 0x34a <SMSensor+0x5e>
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 346:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <strikes>
 34a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <game_state>
 34e:	83 30       	cpi	r24, 0x03	; 3
 350:	21 f4       	brne	.+8      	; 0x35a <SMSensor+0x6e>
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 358:	ce c0       	rjmp	.+412    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 35a:	1a 9b       	sbis	0x03, 2	; 3
 35c:	2b c0       	rjmp	.+86     	; 0x3b4 <SMSensor+0xc8>
 35e:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <left_num>
 362:	81 11       	cpse	r24, r1
 364:	04 c0       	rjmp	.+8      	; 0x36e <SMSensor+0x82>
 366:	86 e0       	ldi	r24, 0x06	; 6
 368:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 36c:	03 c0       	rjmp	.+6      	; 0x374 <SMSensor+0x88>
 36e:	83 e0       	ldi	r24, 0x03	; 3
 370:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 374:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <outter>
 378:	8d 5f       	subi	r24, 0xFD	; 253
 37a:	83 34       	cpi	r24, 0x43	; 67
 37c:	18 f4       	brcc	.+6      	; 0x384 <SMSensor+0x98>
 37e:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <outter>
 382:	02 c0       	rjmp	.+4      	; 0x388 <SMSensor+0x9c>
 384:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <outter>
 388:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 38c:	f0 e0       	ldi	r31, 0x00	; 0
 38e:	e0 50       	subi	r30, 0x00	; 0
 390:	ff 4f       	sbci	r31, 0xFF	; 255
 392:	80 81       	ld	r24, Z
 394:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 398:	81 81       	ldd	r24, Z+1	; 0x01
 39a:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 39e:	82 81       	ldd	r24, Z+2	; 0x02
 3a0:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 3a4:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 3a8:	82 60       	ori	r24, 0x02	; 2
 3aa:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <out>
 3ae:	80 e1       	ldi	r24, 0x10	; 16
 3b0:	23 df       	rcall	.-442    	; 0x1f8 <SPI_MasterTransmit>
 3b2:	a1 c0       	rjmp	.+322    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 3b4:	1b 9b       	sbis	0x03, 3	; 3
 3b6:	23 c0       	rjmp	.+70     	; 0x3fe <SMSensor+0x112>
 3b8:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <outter>
 3bc:	8d 5f       	subi	r24, 0xFD	; 253
 3be:	83 34       	cpi	r24, 0x43	; 67
 3c0:	18 f4       	brcc	.+6      	; 0x3c8 <SMSensor+0xdc>
 3c2:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <outter>
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <SMSensor+0xe0>
 3c8:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <outter>
 3cc:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 3d0:	f0 e0       	ldi	r31, 0x00	; 0
 3d2:	e0 50       	subi	r30, 0x00	; 0
 3d4:	ff 4f       	sbci	r31, 0xFF	; 255
 3d6:	80 81       	ld	r24, Z
 3d8:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 3dc:	81 81       	ldd	r24, Z+1	; 0x01
 3de:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 3e2:	82 81       	ldd	r24, Z+2	; 0x02
 3e4:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 3e8:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 3ec:	84 60       	ori	r24, 0x04	; 4
 3ee:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <out>
 3f2:	86 e0       	ldi	r24, 0x06	; 6
 3f4:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 3f8:	83 e1       	ldi	r24, 0x13	; 19
 3fa:	fe de       	rcall	.-516    	; 0x1f8 <SPI_MasterTransmit>
 3fc:	7c c0       	rjmp	.+248    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 3fe:	31 9b       	sbis	0x06, 1	; 6
 400:	26 c0       	rjmp	.+76     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 402:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <mid_num>
 406:	81 11       	cpse	r24, r1
 408:	04 c0       	rjmp	.+8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40a:	86 e0       	ldi	r24, 0x06	; 6
 40c:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 410:	03 c0       	rjmp	.+6      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 412:	84 e0       	ldi	r24, 0x04	; 4
 414:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 418:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <outter>
 41c:	8d 5f       	subi	r24, 0xFD	; 253
 41e:	83 34       	cpi	r24, 0x43	; 67
 420:	18 f4       	brcc	.+6      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 422:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <outter>
 426:	02 c0       	rjmp	.+4      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 428:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <outter>
 42c:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 430:	f0 e0       	ldi	r31, 0x00	; 0
 432:	e0 50       	subi	r30, 0x00	; 0
 434:	ff 4f       	sbci	r31, 0xFF	; 255
 436:	80 81       	ld	r24, Z
 438:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 43c:	81 81       	ldd	r24, Z+1	; 0x01
 43e:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 442:	82 81       	ldd	r24, Z+2	; 0x02
 444:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 448:	81 e1       	ldi	r24, 0x11	; 17
 44a:	d6 de       	rcall	.-596    	; 0x1f8 <SPI_MasterTransmit>
 44c:	54 c0       	rjmp	.+168    	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 44e:	32 9b       	sbis	0x06, 2	; 6
 450:	26 c0       	rjmp	.+76     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 452:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <right_num>
 456:	81 11       	cpse	r24, r1
 458:	04 c0       	rjmp	.+8      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45a:	86 e0       	ldi	r24, 0x06	; 6
 45c:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 460:	03 c0       	rjmp	.+6      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 462:	85 e0       	ldi	r24, 0x05	; 5
 464:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 468:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <outter>
 46c:	8d 5f       	subi	r24, 0xFD	; 253
 46e:	83 34       	cpi	r24, 0x43	; 67
 470:	18 f4       	brcc	.+6      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 472:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <outter>
 476:	02 c0       	rjmp	.+4      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 478:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <outter>
 47c:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	e0 50       	subi	r30, 0x00	; 0
 484:	ff 4f       	sbci	r31, 0xFF	; 255
 486:	80 81       	ld	r24, Z
 488:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 48c:	81 81       	ldd	r24, Z+1	; 0x01
 48e:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 492:	82 81       	ldd	r24, Z+2	; 0x02
 494:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 498:	82 e1       	ldi	r24, 0x12	; 18
 49a:	ae de       	rcall	.-676    	; 0x1f8 <SPI_MasterTransmit>
 49c:	2c c0       	rjmp	.+88     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 49e:	82 e0       	ldi	r24, 0x02	; 2
 4a0:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 4a4:	28 c0       	rjmp	.+80     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4a6:	1a 99       	sbic	0x03, 2	; 3
 4a8:	26 c0       	rjmp	.+76     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4aa:	82 e0       	ldi	r24, 0x02	; 2
 4ac:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 4b0:	22 c0       	rjmp	.+68     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4b2:	31 99       	sbic	0x06, 1	; 6
 4b4:	20 c0       	rjmp	.+64     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4b6:	82 e0       	ldi	r24, 0x02	; 2
 4b8:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 4bc:	1c c0       	rjmp	.+56     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4be:	32 99       	sbic	0x06, 2	; 6
 4c0:	1a c0       	rjmp	.+52     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4c2:	82 e0       	ldi	r24, 0x02	; 2
 4c4:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 4c8:	16 c0       	rjmp	.+44     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4ca:	33 b1       	in	r19, 0x03	; 3
 4cc:	83 b1       	in	r24, 0x03	; 3
 4ce:	26 b1       	in	r18, 0x06	; 6
 4d0:	96 b1       	in	r25, 0x06	; 6
 4d2:	48 2f       	mov	r20, r24
 4d4:	48 70       	andi	r20, 0x08	; 8
 4d6:	83 2f       	mov	r24, r19
 4d8:	84 70       	andi	r24, 0x04	; 4
 4da:	84 2b       	or	r24, r20
 4dc:	22 70       	andi	r18, 0x02	; 2
 4de:	82 2b       	or	r24, r18
 4e0:	94 70       	andi	r25, 0x04	; 4
 4e2:	89 2b       	or	r24, r25
 4e4:	41 f4       	brne	.+16     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4e6:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <strikes>
 4ea:	8f 5f       	subi	r24, 0xFF	; 255
 4ec:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <strikes>
 4f0:	82 e0       	ldi	r24, 0x02	; 2
 4f2:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_sensor>
 4f6:	80 e0       	ldi	r24, 0x00	; 0
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	08 95       	ret

000004fc <__vector_19>:
 4fc:	1f 92       	push	r1
 4fe:	0f 92       	push	r0
 500:	0f b6       	in	r0, 0x3f	; 63
 502:	0f 92       	push	r0
 504:	11 24       	eor	r1, r1
 506:	8f 93       	push	r24
 508:	8e b5       	in	r24, 0x2e	; 46
 50a:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <receivedData>
 50e:	8f 91       	pop	r24
 510:	0f 90       	pop	r0
 512:	0f be       	out	0x3f, r0	; 63
 514:	0f 90       	pop	r0
 516:	1f 90       	pop	r1
 518:	18 95       	reti

0000051a <TimerSet>:
 51a:	60 93 45 01 	sts	0x0145, r22	; 0x800145 <_avr_timer_M>
 51e:	70 93 46 01 	sts	0x0146, r23	; 0x800146 <_avr_timer_M+0x1>
 522:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <_avr_timer_M+0x2>
 526:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <_avr_timer_M+0x3>
 52a:	60 93 79 01 	sts	0x0179, r22	; 0x800179 <_avr_timer_cntcurr>
 52e:	70 93 7a 01 	sts	0x017A, r23	; 0x80017a <_avr_timer_cntcurr+0x1>
 532:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <_avr_timer_cntcurr+0x2>
 536:	90 93 7c 01 	sts	0x017C, r25	; 0x80017c <_avr_timer_cntcurr+0x3>
 53a:	08 95       	ret

0000053c <TimerOn>:
 53c:	8b e0       	ldi	r24, 0x0B	; 11
 53e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 542:	8d e7       	ldi	r24, 0x7D	; 125
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 54a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 54e:	82 e0       	ldi	r24, 0x02	; 2
 550:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 554:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 558:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 55c:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
 560:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
 564:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
 568:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
 56c:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <_avr_timer_cntcurr>
 570:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <_avr_timer_cntcurr+0x1>
 574:	a0 93 7b 01 	sts	0x017B, r26	; 0x80017b <_avr_timer_cntcurr+0x2>
 578:	b0 93 7c 01 	sts	0x017C, r27	; 0x80017c <_avr_timer_cntcurr+0x3>
 57c:	8f b7       	in	r24, 0x3f	; 63
 57e:	80 68       	ori	r24, 0x80	; 128
 580:	8f bf       	out	0x3f, r24	; 63
 582:	08 95       	ret

00000584 <__vector_13>:
 584:	1f 92       	push	r1
 586:	0f 92       	push	r0
 588:	0f b6       	in	r0, 0x3f	; 63
 58a:	0f 92       	push	r0
 58c:	11 24       	eor	r1, r1
 58e:	8f 93       	push	r24
 590:	9f 93       	push	r25
 592:	af 93       	push	r26
 594:	bf 93       	push	r27
 596:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <_avr_timer_cntcurr>
 59a:	90 91 7a 01 	lds	r25, 0x017A	; 0x80017a <_avr_timer_cntcurr+0x1>
 59e:	a0 91 7b 01 	lds	r26, 0x017B	; 0x80017b <_avr_timer_cntcurr+0x2>
 5a2:	b0 91 7c 01 	lds	r27, 0x017C	; 0x80017c <_avr_timer_cntcurr+0x3>
 5a6:	01 97       	sbiw	r24, 0x01	; 1
 5a8:	a1 09       	sbc	r26, r1
 5aa:	b1 09       	sbc	r27, r1
 5ac:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <_avr_timer_cntcurr>
 5b0:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <_avr_timer_cntcurr+0x1>
 5b4:	a0 93 7b 01 	sts	0x017B, r26	; 0x80017b <_avr_timer_cntcurr+0x2>
 5b8:	b0 93 7c 01 	sts	0x017C, r27	; 0x80017c <_avr_timer_cntcurr+0x3>
 5bc:	89 2b       	or	r24, r25
 5be:	8a 2b       	or	r24, r26
 5c0:	8b 2b       	or	r24, r27
 5c2:	99 f4       	brne	.+38     	; 0x5ea <__vector_13+0x66>
 5c4:	81 e0       	ldi	r24, 0x01	; 1
 5c6:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <TimerFlag>
 5ca:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
 5ce:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
 5d2:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
 5d6:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
 5da:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <_avr_timer_cntcurr>
 5de:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <_avr_timer_cntcurr+0x1>
 5e2:	a0 93 7b 01 	sts	0x017B, r26	; 0x80017b <_avr_timer_cntcurr+0x2>
 5e6:	b0 93 7c 01 	sts	0x017C, r27	; 0x80017c <_avr_timer_cntcurr+0x3>
 5ea:	bf 91       	pop	r27
 5ec:	af 91       	pop	r26
 5ee:	9f 91       	pop	r25
 5f0:	8f 91       	pop	r24
 5f2:	0f 90       	pop	r0
 5f4:	0f be       	out	0x3f, r0	; 63
 5f6:	0f 90       	pop	r0
 5f8:	1f 90       	pop	r1
 5fa:	18 95       	reti

000005fc <main>:


//////////////////////////////////////////////////////////////////////////

int main(void)
{
 5fc:	cf 93       	push	r28
 5fe:	df 93       	push	r29
 600:	00 d0       	rcall	.+0      	; 0x602 <main+0x6>
 602:	00 d0       	rcall	.+0      	; 0x604 <main+0x8>
 604:	00 d0       	rcall	.+0      	; 0x606 <main+0xa>
 606:	cd b7       	in	r28, 0x3d	; 61
 608:	de b7       	in	r29, 0x3e	; 62

	DDRA = 0x0F; PORTA = 0xF0; //PORTA  is an output
 60a:	8f e0       	ldi	r24, 0x0F	; 15
 60c:	81 b9       	out	0x01, r24	; 1
 60e:	80 ef       	ldi	r24, 0xF0	; 240
 610:	82 b9       	out	0x02, r24	; 2
	DDRB = 0x00; PORTB = 0xFF;// PORTB input
 612:	14 b8       	out	0x04, r1	; 4
 614:	8f ef       	ldi	r24, 0xFF	; 255
 616:	85 b9       	out	0x05, r24	; 5
	DDRC = 0x00; PORTC = 0xFF;
 618:	17 b8       	out	0x07, r1	; 7
 61a:	88 b9       	out	0x08, r24	; 8
	
	static task task1 ,task2, task3;
	task *tasks[] = { &task1 ,&task2, &task3 };
 61c:	86 e0       	ldi	r24, 0x06	; 6
 61e:	e9 e4       	ldi	r30, 0x49	; 73
 620:	f1 e0       	ldi	r31, 0x01	; 1
 622:	de 01       	movw	r26, r28
 624:	11 96       	adiw	r26, 0x01	; 1
 626:	01 90       	ld	r0, Z+
 628:	0d 92       	st	X+, r0
 62a:	8a 95       	dec	r24
 62c:	e1 f7       	brne	.-8      	; 0x626 <main+0x2a>
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	
	//task1 - for the bluetooth input
	task1.state = bluetooth_Init;
 62e:	e6 e6       	ldi	r30, 0x66	; 102
 630:	f1 e0       	ldi	r31, 0x01	; 1
 632:	10 82       	st	Z, r1
	task1.period = 100;
 634:	84 e6       	ldi	r24, 0x64	; 100
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	a0 e0       	ldi	r26, 0x00	; 0
 63a:	b0 e0       	ldi	r27, 0x00	; 0
 63c:	81 83       	std	Z+1, r24	; 0x01
 63e:	92 83       	std	Z+2, r25	; 0x02
 640:	a3 83       	std	Z+3, r26	; 0x03
 642:	b4 83       	std	Z+4, r27	; 0x04
	task1.elapsedTime = task1.period;
 644:	85 83       	std	Z+5, r24	; 0x05
 646:	96 83       	std	Z+6, r25	; 0x06
 648:	a7 83       	std	Z+7, r26	; 0x07
 64a:	b0 87       	std	Z+8, r27	; 0x08
	task1.TickFct = &SMbluetooth;
 64c:	21 eb       	ldi	r18, 0xB1	; 177
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	32 87       	std	Z+10, r19	; 0x0a
 652:	21 87       	std	Z+9, r18	; 0x09

	//task2 - for the menu input
	task2.state = menu_Init;
 654:	eb e5       	ldi	r30, 0x5B	; 91
 656:	f1 e0       	ldi	r31, 0x01	; 1
 658:	10 82       	st	Z, r1
	task2.period = 100;
 65a:	81 83       	std	Z+1, r24	; 0x01
 65c:	92 83       	std	Z+2, r25	; 0x02
 65e:	a3 83       	std	Z+3, r26	; 0x03
 660:	b4 83       	std	Z+4, r27	; 0x04
	task2.elapsedTime = task2.period;
 662:	85 83       	std	Z+5, r24	; 0x05
 664:	96 83       	std	Z+6, r25	; 0x06
 666:	a7 83       	std	Z+7, r26	; 0x07
 668:	b0 87       	std	Z+8, r27	; 0x08
	task2.TickFct = &SMmenu;
 66a:	23 e0       	ldi	r18, 0x03	; 3
 66c:	31 e0       	ldi	r19, 0x01	; 1
 66e:	32 87       	std	Z+10, r19	; 0x0a
 670:	21 87       	std	Z+9, r18	; 0x09

	//task3 - for the sensor input
	task3.state = sensor_Init;
 672:	e0 e5       	ldi	r30, 0x50	; 80
 674:	f1 e0       	ldi	r31, 0x01	; 1
 676:	10 82       	st	Z, r1
	task3.period = 100;
 678:	81 83       	std	Z+1, r24	; 0x01
 67a:	92 83       	std	Z+2, r25	; 0x02
 67c:	a3 83       	std	Z+3, r26	; 0x03
 67e:	b4 83       	std	Z+4, r27	; 0x04
	task3.elapsedTime = task3.period;
 680:	85 83       	std	Z+5, r24	; 0x05
 682:	96 83       	std	Z+6, r25	; 0x06
 684:	a7 83       	std	Z+7, r26	; 0x07
 686:	b0 87       	std	Z+8, r27	; 0x08
	task3.TickFct = &SMSensor;
 688:	86 e7       	ldi	r24, 0x76	; 118
 68a:	91 e0       	ldi	r25, 0x01	; 1
 68c:	92 87       	std	Z+10, r25	; 0x0a
 68e:	81 87       	std	Z+9, r24	; 0x09




	/*Initializations*/
	TimerSet(100);
 690:	64 e6       	ldi	r22, 0x64	; 100
 692:	70 e0       	ldi	r23, 0x00	; 0
 694:	80 e0       	ldi	r24, 0x00	; 0
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	40 df       	rcall	.-384    	; 0x51a <TimerSet>
	TimerOn();
 69a:	50 df       	rcall	.-352    	; 0x53c <TimerOn>
	SPI_MasterInit();//so we can send data to the LCD.
 69c:	a8 dd       	rcall	.-1200   	; 0x1ee <SPI_MasterInit>
	initUSART(0);//using usart port 0
 69e:	80 e0       	ldi	r24, 0x00	; 0
 6a0:	21 dd       	rcall	.-1470   	; 0xe4 <initUSART>
	game_state = 0x01;
 6a2:	81 e0       	ldi	r24, 0x01	; 1
 6a4:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <game_state>
	SPI_MasterTransmit(game_state);
 6a8:	a7 dd       	rcall	.-1202   	; 0x1f8 <SPI_MasterTransmit>
 6aa:	7e 01       	movw	r14, r28
 6ac:	87 e0       	ldi	r24, 0x07	; 7
 6ae:	e8 0e       	add	r14, r24
 6b0:	f1 1c       	adc	r15, r1
 6b2:	de 01       	movw	r26, r28
 6b4:	11 96       	adiw	r26, 0x01	; 1
 6b6:	6d 01       	movw	r12, r26
 6b8:	f6 01       	movw	r30, r12
	//////////////////////////////////////////////////////////////////////////
	unsigned short i;
	while(1){
		for (i = 0; i < numTasks; i++){
			if (tasks[i]->elapsedTime == tasks[i]->period){
 6ba:	01 91       	ld	r16, Z+
 6bc:	11 91       	ld	r17, Z+
 6be:	6f 01       	movw	r12, r30
 6c0:	d8 01       	movw	r26, r16
 6c2:	15 96       	adiw	r26, 0x05	; 5
 6c4:	4d 91       	ld	r20, X+
 6c6:	5d 91       	ld	r21, X+
 6c8:	6d 91       	ld	r22, X+
 6ca:	7c 91       	ld	r23, X
 6cc:	18 97       	sbiw	r26, 0x08	; 8
 6ce:	11 96       	adiw	r26, 0x01	; 1
 6d0:	8d 91       	ld	r24, X+
 6d2:	9d 91       	ld	r25, X+
 6d4:	0d 90       	ld	r0, X+
 6d6:	bc 91       	ld	r27, X
 6d8:	a0 2d       	mov	r26, r0
 6da:	48 17       	cp	r20, r24
 6dc:	59 07       	cpc	r21, r25
 6de:	6a 07       	cpc	r22, r26
 6e0:	7b 07       	cpc	r23, r27
 6e2:	81 f4       	brne	.+32     	; 0x704 <main+0x108>
 6e4:	f8 01       	movw	r30, r16
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 6e6:	80 81       	ld	r24, Z
 6e8:	01 84       	ldd	r0, Z+9	; 0x09
 6ea:	f2 85       	ldd	r31, Z+10	; 0x0a
 6ec:	e0 2d       	mov	r30, r0
 6ee:	08 2e       	mov	r0, r24
 6f0:	00 0c       	add	r0, r0
 6f2:	99 0b       	sbc	r25, r25
 6f4:	09 95       	icall
 6f6:	d8 01       	movw	r26, r16
 6f8:	8c 93       	st	X, r24
 6fa:	f8 01       	movw	r30, r16
				tasks[i]->elapsedTime = 0;
 6fc:	15 82       	std	Z+5, r1	; 0x05
 6fe:	16 82       	std	Z+6, r1	; 0x06
 700:	17 82       	std	Z+7, r1	; 0x07
 702:	10 86       	std	Z+8, r1	; 0x08
 704:	f8 01       	movw	r30, r16
			}
			tasks[i]->elapsedTime += 100; //value is gcd
 706:	85 81       	ldd	r24, Z+5	; 0x05
 708:	96 81       	ldd	r25, Z+6	; 0x06
 70a:	a7 81       	ldd	r26, Z+7	; 0x07
 70c:	b0 85       	ldd	r27, Z+8	; 0x08
 70e:	8c 59       	subi	r24, 0x9C	; 156
 710:	9f 4f       	sbci	r25, 0xFF	; 255
 712:	af 4f       	sbci	r26, 0xFF	; 255
 714:	bf 4f       	sbci	r27, 0xFF	; 255
 716:	85 83       	std	Z+5, r24	; 0x05
 718:	96 83       	std	Z+6, r25	; 0x06
 71a:	a7 83       	std	Z+7, r26	; 0x07
 71c:	b0 87       	std	Z+8, r27	; 0x08
 71e:	ce 14       	cp	r12, r14
	game_state = 0x01;
	SPI_MasterTransmit(game_state);
	//////////////////////////////////////////////////////////////////////////
	unsigned short i;
	while(1){
		for (i = 0; i < numTasks; i++){
 720:	df 04       	cpc	r13, r15
 722:	51 f6       	brne	.-108    	; 0x6b8 <main+0xbc>
 724:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <TimerFlag>
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 100; //value is gcd
		}
		while(!TimerFlag);
 728:	88 23       	and	r24, r24
 72a:	e1 f3       	breq	.-8      	; 0x724 <main+0x128>
 72c:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <TimerFlag>
		TimerFlag = 0;
 730:	c0 cf       	rjmp	.-128    	; 0x6b2 <main+0xb6>

00000732 <__tablejump2__>:
		
		
	}
 732:	ee 0f       	add	r30, r30
 734:	ff 1f       	adc	r31, r31
 736:	00 24       	eor	r0, r0
 738:	00 1c       	adc	r0, r0
 73a:	0b be       	out	0x3b, r0	; 59
 73c:	07 90       	elpm	r0, Z+
 73e:	f6 91       	elpm	r31, Z
 740:	e0 2d       	mov	r30, r0
 742:	09 94       	ijmp

00000744 <_exit>:
 744:	f8 94       	cli

00000746 <__stop_program>:
 746:	ff cf       	rjmp	.-2      	; 0x746 <__stop_program>
