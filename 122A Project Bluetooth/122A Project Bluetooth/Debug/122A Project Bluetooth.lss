
122A Project Bluetooth.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00000762  000007f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000762  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000036  00800150  00800150  00000846  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000846  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000878  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  000008b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001274  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a55  00000000  00000000  00001c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b73  00000000  00000000  00002691  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000025c  00000000  00000000  00003204  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000084a  00000000  00000000  00003460  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000048f  00000000  00000000  00003caa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00004139  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	53 c0       	rjmp	.+166    	; 0xa8 <__ctors_end>
   2:	00 00       	nop
   4:	6e c0       	rjmp	.+220    	; 0xe2 <__bad_interrupt>
   6:	00 00       	nop
   8:	6c c0       	rjmp	.+216    	; 0xe2 <__bad_interrupt>
   a:	00 00       	nop
   c:	6a c0       	rjmp	.+212    	; 0xe2 <__bad_interrupt>
   e:	00 00       	nop
  10:	68 c0       	rjmp	.+208    	; 0xe2 <__bad_interrupt>
  12:	00 00       	nop
  14:	66 c0       	rjmp	.+204    	; 0xe2 <__bad_interrupt>
  16:	00 00       	nop
  18:	64 c0       	rjmp	.+200    	; 0xe2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	62 c0       	rjmp	.+196    	; 0xe2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	60 c0       	rjmp	.+192    	; 0xe2 <__bad_interrupt>
  22:	00 00       	nop
  24:	5e c0       	rjmp	.+188    	; 0xe2 <__bad_interrupt>
  26:	00 00       	nop
  28:	5c c0       	rjmp	.+184    	; 0xe2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5a c0       	rjmp	.+180    	; 0xe2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	58 c0       	rjmp	.+176    	; 0xe2 <__bad_interrupt>
  32:	00 00       	nop
  34:	b4 c2       	rjmp	.+1384   	; 0x59e <__vector_13>
  36:	00 00       	nop
  38:	54 c0       	rjmp	.+168    	; 0xe2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	52 c0       	rjmp	.+164    	; 0xe2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	50 c0       	rjmp	.+160    	; 0xe2 <__bad_interrupt>
  42:	00 00       	nop
  44:	4e c0       	rjmp	.+156    	; 0xe2 <__bad_interrupt>
  46:	00 00       	nop
  48:	4c c0       	rjmp	.+152    	; 0xe2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	64 c2       	rjmp	.+1224   	; 0x516 <__vector_19>
  4e:	00 00       	nop
  50:	48 c0       	rjmp	.+144    	; 0xe2 <__bad_interrupt>
  52:	00 00       	nop
  54:	46 c0       	rjmp	.+140    	; 0xe2 <__bad_interrupt>
  56:	00 00       	nop
  58:	44 c0       	rjmp	.+136    	; 0xe2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	42 c0       	rjmp	.+132    	; 0xe2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	40 c0       	rjmp	.+128    	; 0xe2 <__bad_interrupt>
  62:	00 00       	nop
  64:	3e c0       	rjmp	.+124    	; 0xe2 <__bad_interrupt>
  66:	00 00       	nop
  68:	3c c0       	rjmp	.+120    	; 0xe2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3a c0       	rjmp	.+116    	; 0xe2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	38 c0       	rjmp	.+112    	; 0xe2 <__bad_interrupt>
  72:	00 00       	nop
  74:	36 c0       	rjmp	.+108    	; 0xe2 <__bad_interrupt>
  76:	00 00       	nop
  78:	34 c0       	rjmp	.+104    	; 0xe2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	32 c0       	rjmp	.+100    	; 0xe2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	30 c0       	rjmp	.+96     	; 0xe2 <__bad_interrupt>
  82:	00 00       	nop
  84:	2e c0       	rjmp	.+92     	; 0xe2 <__bad_interrupt>
  86:	00 00       	nop
  88:	2c c0       	rjmp	.+88     	; 0xe2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	1d 01       	movw	r2, r26
  8e:	21 01       	movw	r4, r2
  90:	41 01       	movw	r8, r2
  92:	4a 01       	movw	r8, r20
  94:	62 01       	movw	r12, r4
  96:	74 01       	movw	r14, r8
  98:	5c 01       	movw	r10, r24
  9a:	8f 01       	movw	r16, r30
  9c:	a1 01       	movw	r20, r2
  9e:	a9 01       	movw	r20, r18
  a0:	60 02       	muls	r22, r16
  a2:	66 02       	muls	r22, r22
  a4:	6c 02       	muls	r22, r28
  a6:	72 02       	muls	r23, r18

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	d0 e4       	ldi	r29, 0x40	; 64
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	e2 e6       	ldi	r30, 0x62	; 98
  bc:	f7 e0       	ldi	r31, 0x07	; 7
  be:	00 e0       	ldi	r16, 0x00	; 0
  c0:	0b bf       	out	0x3b, r16	; 59
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x14>
  c4:	07 90       	elpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a0 35       	cpi	r26, 0x50	; 80
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0x10>

000000ce <__do_clear_bss>:
  ce:	21 e0       	ldi	r18, 0x01	; 1
  d0:	a0 e5       	ldi	r26, 0x50	; 80
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
  d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
  d8:	a6 38       	cpi	r26, 0x86	; 134
  da:	b2 07       	cpc	r27, r18
  dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
  de:	9b d2       	rcall	.+1334   	; 0x616 <main>
  e0:	3e c3       	rjmp	.+1660   	; 0x75e <_exit>

000000e2 <__bad_interrupt>:
  e2:	8e cf       	rjmp	.-228    	; 0x0 <__vectors>

000000e4 <initUSART>:
		
		break;
		
	};
	
}
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	81 f0       	breq	.+32     	; 0x108 <initUSART+0x24>
  e8:	e1 ec       	ldi	r30, 0xC1	; 193
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	88 61       	ori	r24, 0x18	; 24
  f0:	80 83       	st	Z, r24
  f2:	e2 ec       	ldi	r30, 0xC2	; 194
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	86 60       	ori	r24, 0x06	; 6
  fa:	80 83       	st	Z, r24
  fc:	83 e3       	ldi	r24, 0x33	; 51
  fe:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 102:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 106:	08 95       	ret
 108:	e9 ec       	ldi	r30, 0xC9	; 201
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	88 61       	ori	r24, 0x18	; 24
 110:	80 83       	st	Z, r24
 112:	ea ec       	ldi	r30, 0xCA	; 202
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	86 60       	ori	r24, 0x06	; 6
 11a:	80 83       	st	Z, r24
 11c:	83 e3       	ldi	r24, 0x33	; 51
 11e:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
 122:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
 126:	08 95       	ret

00000128 <USART_Flush>:
 128:	81 30       	cpi	r24, 0x01	; 1
 12a:	29 f4       	brne	.+10     	; 0x136 <USART_Flush+0xe>
 12c:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 130:	88 23       	and	r24, r24
 132:	74 f0       	brlt	.+28     	; 0x150 <USART_Flush+0x28>
 134:	08 95       	ret
 136:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 13a:	88 23       	and	r24, r24
 13c:	8c f4       	brge	.+34     	; 0x160 <USART_Flush+0x38>
 13e:	a6 ec       	ldi	r26, 0xC6	; 198
 140:	b0 e0       	ldi	r27, 0x00	; 0
 142:	e0 ec       	ldi	r30, 0xC0	; 192
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	8c 91       	ld	r24, X
 148:	80 81       	ld	r24, Z
 14a:	88 23       	and	r24, r24
 14c:	e4 f3       	brlt	.-8      	; 0x146 <USART_Flush+0x1e>
 14e:	08 95       	ret
 150:	ae ec       	ldi	r26, 0xCE	; 206
 152:	b0 e0       	ldi	r27, 0x00	; 0
 154:	e8 ec       	ldi	r30, 0xC8	; 200
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	8c 91       	ld	r24, X
 15a:	80 81       	ld	r24, Z
 15c:	88 23       	and	r24, r24
 15e:	e4 f3       	brlt	.-8      	; 0x158 <USART_Flush+0x30>
 160:	08 95       	ret

00000162 <SMbluetooth>:
 162:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <state_blue>
 166:	81 30       	cpi	r24, 0x01	; 1
 168:	41 f0       	breq	.+16     	; 0x17a <SMbluetooth+0x18>
 16a:	18 f0       	brcs	.+6      	; 0x172 <SMbluetooth+0x10>
 16c:	82 30       	cpi	r24, 0x02	; 2
 16e:	49 f1       	breq	.+82     	; 0x1c2 <SMbluetooth+0x60>
 170:	3c c0       	rjmp	.+120    	; 0x1ea <SMbluetooth+0x88>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <state_blue>
 178:	3d c0       	rjmp	.+122    	; 0x1f4 <SMbluetooth+0x92>
 17a:	34 99       	sbic	0x06, 4	; 6
 17c:	0b c0       	rjmp	.+22     	; 0x194 <SMbluetooth+0x32>
 17e:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <sensor_counter>
 182:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 186:	81 60       	ori	r24, 0x01	; 1
 188:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <out>
 18c:	82 e0       	ldi	r24, 0x02	; 2
 18e:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <state_blue>
 192:	34 c0       	rjmp	.+104    	; 0x1fc <SMbluetooth+0x9a>
 194:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 198:	88 23       	and	r24, r24
 19a:	34 f0       	brlt	.+12     	; 0x1a8 <SMbluetooth+0x46>
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	c4 df       	rcall	.-120    	; 0x128 <USART_Flush>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <state_blue>
 1a6:	26 c0       	rjmp	.+76     	; 0x1f4 <SMbluetooth+0x92>
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	be df       	rcall	.-132    	; 0x128 <USART_Flush>
 1ac:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 1b0:	81 60       	ori	r24, 0x01	; 1
 1b2:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <out>
 1b6:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <sensor_counter>
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <state_blue>
 1c0:	1d c0       	rjmp	.+58     	; 0x1fc <SMbluetooth+0x9a>
 1c2:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <sensor_counter>
 1c6:	88 30       	cpi	r24, 0x08	; 8
 1c8:	38 f4       	brcc	.+14     	; 0x1d8 <SMbluetooth+0x76>
 1ca:	8f 5f       	subi	r24, 0xFF	; 255
 1cc:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <sensor_counter>
 1d0:	82 e0       	ldi	r24, 0x02	; 2
 1d2:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <state_blue>
 1d6:	12 c0       	rjmp	.+36     	; 0x1fc <SMbluetooth+0x9a>
 1d8:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 1dc:	8e 7f       	andi	r24, 0xFE	; 254
 1de:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <out>
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <state_blue>
 1e8:	05 c0       	rjmp	.+10     	; 0x1f4 <SMbluetooth+0x92>
 1ea:	81 30       	cpi	r24, 0x01	; 1
 1ec:	19 f0       	breq	.+6      	; 0x1f4 <SMbluetooth+0x92>
 1ee:	82 30       	cpi	r24, 0x02	; 2
 1f0:	41 f4       	brne	.+16     	; 0x202 <SMbluetooth+0xa0>
 1f2:	04 c0       	rjmp	.+8      	; 0x1fc <SMbluetooth+0x9a>
 1f4:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 1f8:	82 b9       	out	0x02, r24	; 2
 1fa:	03 c0       	rjmp	.+6      	; 0x202 <SMbluetooth+0xa0>
 1fc:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 200:	82 b9       	out	0x02, r24	; 2
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	08 95       	ret

00000208 <SPI_MasterInit>:
 208:	80 eb       	ldi	r24, 0xB0	; 176
 20a:	84 b9       	out	0x04, r24	; 4
 20c:	81 e5       	ldi	r24, 0x51	; 81
 20e:	8c bd       	out	0x2c, r24	; 44
 210:	08 95       	ret

00000212 <SPI_MasterTransmit>:
 212:	8e bd       	out	0x2e, r24	; 46
 214:	2c 98       	cbi	0x05, 4	; 5
 216:	0d b4       	in	r0, 0x2d	; 45
 218:	07 fe       	sbrs	r0, 7
 21a:	fd cf       	rjmp	.-6      	; 0x216 <SPI_MasterTransmit+0x4>
 21c:	2c 9a       	sbi	0x05, 4	; 5
 21e:	08 95       	ret

00000220 <SMmenu>:
 220:	cf 93       	push	r28
 222:	20 91 84 01 	lds	r18, 0x0184	; 0x800184 <state_menu>
 226:	82 2f       	mov	r24, r18
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	87 30       	cpi	r24, 0x07	; 7
 22c:	91 05       	cpc	r25, r1
 22e:	08 f0       	brcs	.+2      	; 0x232 <SMmenu+0x12>
 230:	61 c0       	rjmp	.+194    	; 0x2f4 <SMmenu+0xd4>
 232:	fc 01       	movw	r30, r24
 234:	ea 5b       	subi	r30, 0xBA	; 186
 236:	ff 4f       	sbci	r31, 0xFF	; 255
 238:	89 c2       	rjmp	.+1298   	; 0x74c <__tablejump2__>
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_menu>
 240:	5b c0       	rjmp	.+182    	; 0x2f8 <SMmenu+0xd8>
 242:	93 b1       	in	r25, 0x03	; 3
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <game_state>
 24a:	21 30       	cpi	r18, 0x01	; 1
 24c:	09 f0       	breq	.+2      	; 0x250 <SMmenu+0x30>
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	90 fd       	sbrc	r25, 0
 252:	0a c0       	rjmp	.+20     	; 0x268 <SMmenu+0x48>
 254:	88 23       	and	r24, r24
 256:	41 f0       	breq	.+16     	; 0x268 <SMmenu+0x48>
 258:	c2 e0       	ldi	r28, 0x02	; 2
 25a:	c0 93 78 01 	sts	0x0178, r28	; 0x800178 <game_state>
 25e:	82 e0       	ldi	r24, 0x02	; 2
 260:	d8 df       	rcall	.-80     	; 0x212 <SPI_MasterTransmit>
 262:	c0 93 84 01 	sts	0x0184, r28	; 0x800184 <state_menu>
 266:	4b c0       	rjmp	.+150    	; 0x2fe <SMmenu+0xde>
 268:	30 99       	sbic	0x06, 0	; 6
 26a:	46 c0       	rjmp	.+140    	; 0x2f8 <SMmenu+0xd8>
 26c:	88 23       	and	r24, r24
 26e:	09 f4       	brne	.+2      	; 0x272 <SMmenu+0x52>
 270:	43 c0       	rjmp	.+134    	; 0x2f8 <SMmenu+0xd8>
 272:	c4 e0       	ldi	r28, 0x04	; 4
 274:	c0 93 78 01 	sts	0x0178, r28	; 0x800178 <game_state>
 278:	84 e0       	ldi	r24, 0x04	; 4
 27a:	cb df       	rcall	.-106    	; 0x212 <SPI_MasterTransmit>
 27c:	c0 93 84 01 	sts	0x0184, r28	; 0x800184 <state_menu>
 280:	3e c0       	rjmp	.+124    	; 0x2fe <SMmenu+0xde>
 282:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <strikes>
 286:	83 30       	cpi	r24, 0x03	; 3
 288:	d1 f5       	brne	.+116    	; 0x2fe <SMmenu+0xde>
 28a:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <game_state>
 28e:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_menu>
 292:	35 c0       	rjmp	.+106    	; 0x2fe <SMmenu+0xde>
 294:	18 99       	sbic	0x03, 0	; 3
 296:	33 c0       	rjmp	.+102    	; 0x2fe <SMmenu+0xde>
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <game_state>
 29e:	93 30       	cpi	r25, 0x03	; 3
 2a0:	09 f0       	breq	.+2      	; 0x2a4 <SMmenu+0x84>
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	88 23       	and	r24, r24
 2a6:	59 f1       	breq	.+86     	; 0x2fe <SMmenu+0xde>
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <game_state>
 2ae:	b1 df       	rcall	.-158    	; 0x212 <SPI_MasterTransmit>
 2b0:	86 e0       	ldi	r24, 0x06	; 6
 2b2:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_menu>
 2b6:	23 c0       	rjmp	.+70     	; 0x2fe <SMmenu+0xde>
 2b8:	18 9b       	sbis	0x03, 0	; 3
 2ba:	21 c0       	rjmp	.+66     	; 0x2fe <SMmenu+0xde>
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_menu>
 2c2:	1a c0       	rjmp	.+52     	; 0x2f8 <SMmenu+0xd8>
 2c4:	18 99       	sbic	0x03, 0	; 3
 2c6:	1b c0       	rjmp	.+54     	; 0x2fe <SMmenu+0xde>
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <game_state>
 2ce:	94 30       	cpi	r25, 0x04	; 4
 2d0:	09 f0       	breq	.+2      	; 0x2d4 <SMmenu+0xb4>
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	88 23       	and	r24, r24
 2d6:	99 f0       	breq	.+38     	; 0x2fe <SMmenu+0xde>
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <game_state>
 2de:	99 df       	rcall	.-206    	; 0x212 <SPI_MasterTransmit>
 2e0:	85 e0       	ldi	r24, 0x05	; 5
 2e2:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_menu>
 2e6:	0b c0       	rjmp	.+22     	; 0x2fe <SMmenu+0xde>
 2e8:	18 9b       	sbis	0x03, 0	; 3
 2ea:	09 c0       	rjmp	.+18     	; 0x2fe <SMmenu+0xde>
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <state_menu>
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <SMmenu+0xd8>
 2f4:	21 30       	cpi	r18, 0x01	; 1
 2f6:	19 f4       	brne	.+6      	; 0x2fe <SMmenu+0xde>
 2f8:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 2fc:	82 b9       	out	0x02, r24	; 2
 2fe:	80 e0       	ldi	r24, 0x00	; 0
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	cf 91       	pop	r28
 304:	08 95       	ret

00000306 <SMSensor>:
 306:	e0 91 85 01 	lds	r30, 0x0185	; 0x800185 <state_sensor>
 30a:	8e 2f       	mov	r24, r30
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	87 30       	cpi	r24, 0x07	; 7
 310:	91 05       	cpc	r25, r1
 312:	08 f0       	brcs	.+2      	; 0x316 <SMSensor+0x10>
 314:	fd c0       	rjmp	.+506    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 316:	fc 01       	movw	r30, r24
 318:	e3 5b       	subi	r30, 0xB3	; 179
 31a:	ff 4f       	sbci	r31, 0xFF	; 255
 31c:	17 c2       	rjmp	.+1070   	; 0x74c <__tablejump2__>
 31e:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	e0 50       	subi	r30, 0x00	; 0
 326:	ff 4f       	sbci	r31, 0xFF	; 255
 328:	80 81       	ld	r24, Z
 32a:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 32e:	81 81       	ldd	r24, Z+1	; 0x01
 330:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 334:	82 81       	ldd	r24, Z+2	; 0x02
 336:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 340:	e7 c0       	rjmp	.+462    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 342:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <game_state>
 346:	82 30       	cpi	r24, 0x02	; 2
 348:	09 f0       	breq	.+2      	; 0x34c <SMSensor+0x46>
 34a:	e2 c0       	rjmp	.+452    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 34c:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 350:	df c0       	rjmp	.+446    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 352:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <strikes>
 356:	83 30       	cpi	r24, 0x03	; 3
 358:	29 f4       	brne	.+10     	; 0x364 <SMSensor+0x5e>
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 360:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <strikes>
 364:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <game_state>
 368:	83 30       	cpi	r24, 0x03	; 3
 36a:	21 f4       	brne	.+8      	; 0x374 <SMSensor+0x6e>
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 372:	ce c0       	rjmp	.+412    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 374:	1a 9b       	sbis	0x03, 2	; 3
 376:	2b c0       	rjmp	.+86     	; 0x3ce <SMSensor+0xc8>
 378:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <left_num>
 37c:	81 11       	cpse	r24, r1
 37e:	04 c0       	rjmp	.+8      	; 0x388 <SMSensor+0x82>
 380:	86 e0       	ldi	r24, 0x06	; 6
 382:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 386:	03 c0       	rjmp	.+6      	; 0x38e <SMSensor+0x88>
 388:	83 e0       	ldi	r24, 0x03	; 3
 38a:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 38e:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <outter>
 392:	8d 5f       	subi	r24, 0xFD	; 253
 394:	83 34       	cpi	r24, 0x43	; 67
 396:	18 f4       	brcc	.+6      	; 0x39e <SMSensor+0x98>
 398:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <outter>
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <SMSensor+0x9c>
 39e:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <outter>
 3a2:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	e0 50       	subi	r30, 0x00	; 0
 3aa:	ff 4f       	sbci	r31, 0xFF	; 255
 3ac:	80 81       	ld	r24, Z
 3ae:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 3b2:	81 81       	ldd	r24, Z+1	; 0x01
 3b4:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 3b8:	82 81       	ldd	r24, Z+2	; 0x02
 3ba:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 3be:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 3c2:	82 60       	ori	r24, 0x02	; 2
 3c4:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <out>
 3c8:	80 e1       	ldi	r24, 0x10	; 16
 3ca:	23 df       	rcall	.-442    	; 0x212 <SPI_MasterTransmit>
 3cc:	a1 c0       	rjmp	.+322    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 3ce:	1b 9b       	sbis	0x03, 3	; 3
 3d0:	23 c0       	rjmp	.+70     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3d2:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <outter>
 3d6:	8d 5f       	subi	r24, 0xFD	; 253
 3d8:	83 34       	cpi	r24, 0x43	; 67
 3da:	18 f4       	brcc	.+6      	; 0x3e2 <SMSensor+0xdc>
 3dc:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <outter>
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <SMSensor+0xe0>
 3e2:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <outter>
 3e6:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	e0 50       	subi	r30, 0x00	; 0
 3ee:	ff 4f       	sbci	r31, 0xFF	; 255
 3f0:	80 81       	ld	r24, Z
 3f2:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 3f6:	81 81       	ldd	r24, Z+1	; 0x01
 3f8:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 3fc:	82 81       	ldd	r24, Z+2	; 0x02
 3fe:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 402:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <out>
 406:	84 60       	ori	r24, 0x04	; 4
 408:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <out>
 40c:	86 e0       	ldi	r24, 0x06	; 6
 40e:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 412:	83 e1       	ldi	r24, 0x13	; 19
 414:	fe de       	rcall	.-516    	; 0x212 <SPI_MasterTransmit>
 416:	7c c0       	rjmp	.+248    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 418:	31 9b       	sbis	0x06, 1	; 6
 41a:	26 c0       	rjmp	.+76     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 41c:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <mid_num>
 420:	81 11       	cpse	r24, r1
 422:	04 c0       	rjmp	.+8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 424:	86 e0       	ldi	r24, 0x06	; 6
 426:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 42a:	03 c0       	rjmp	.+6      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42c:	84 e0       	ldi	r24, 0x04	; 4
 42e:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 432:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <outter>
 436:	8d 5f       	subi	r24, 0xFD	; 253
 438:	83 34       	cpi	r24, 0x43	; 67
 43a:	18 f4       	brcc	.+6      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 43c:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <outter>
 440:	02 c0       	rjmp	.+4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 442:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <outter>
 446:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 44a:	f0 e0       	ldi	r31, 0x00	; 0
 44c:	e0 50       	subi	r30, 0x00	; 0
 44e:	ff 4f       	sbci	r31, 0xFF	; 255
 450:	80 81       	ld	r24, Z
 452:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 456:	81 81       	ldd	r24, Z+1	; 0x01
 458:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 45c:	82 81       	ldd	r24, Z+2	; 0x02
 45e:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 462:	81 e1       	ldi	r24, 0x11	; 17
 464:	d6 de       	rcall	.-596    	; 0x212 <SPI_MasterTransmit>
 466:	54 c0       	rjmp	.+168    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 468:	32 9b       	sbis	0x06, 2	; 6
 46a:	26 c0       	rjmp	.+76     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 46c:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <right_num>
 470:	81 11       	cpse	r24, r1
 472:	04 c0       	rjmp	.+8      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 474:	86 e0       	ldi	r24, 0x06	; 6
 476:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 47a:	03 c0       	rjmp	.+6      	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 47c:	85 e0       	ldi	r24, 0x05	; 5
 47e:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 482:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <outter>
 486:	8d 5f       	subi	r24, 0xFD	; 253
 488:	83 34       	cpi	r24, 0x43	; 67
 48a:	18 f4       	brcc	.+6      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48c:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <outter>
 490:	02 c0       	rjmp	.+4      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 492:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <outter>
 496:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <outter>
 49a:	f0 e0       	ldi	r31, 0x00	; 0
 49c:	e0 50       	subi	r30, 0x00	; 0
 49e:	ff 4f       	sbci	r31, 0xFF	; 255
 4a0:	80 81       	ld	r24, Z
 4a2:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <left_num>
 4a6:	81 81       	ldd	r24, Z+1	; 0x01
 4a8:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <mid_num>
 4ac:	82 81       	ldd	r24, Z+2	; 0x02
 4ae:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <right_num>
 4b2:	82 e1       	ldi	r24, 0x12	; 18
 4b4:	ae de       	rcall	.-676    	; 0x212 <SPI_MasterTransmit>
 4b6:	2c c0       	rjmp	.+88     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4b8:	82 e0       	ldi	r24, 0x02	; 2
 4ba:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 4be:	28 c0       	rjmp	.+80     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4c0:	1a 99       	sbic	0x03, 2	; 3
 4c2:	26 c0       	rjmp	.+76     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4c4:	82 e0       	ldi	r24, 0x02	; 2
 4c6:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 4ca:	22 c0       	rjmp	.+68     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4cc:	31 99       	sbic	0x06, 1	; 6
 4ce:	20 c0       	rjmp	.+64     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4d0:	82 e0       	ldi	r24, 0x02	; 2
 4d2:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 4d6:	1c c0       	rjmp	.+56     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4d8:	32 99       	sbic	0x06, 2	; 6
 4da:	1a c0       	rjmp	.+52     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4dc:	82 e0       	ldi	r24, 0x02	; 2
 4de:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 4e2:	16 c0       	rjmp	.+44     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4e4:	33 b1       	in	r19, 0x03	; 3
 4e6:	83 b1       	in	r24, 0x03	; 3
 4e8:	26 b1       	in	r18, 0x06	; 6
 4ea:	96 b1       	in	r25, 0x06	; 6
 4ec:	48 2f       	mov	r20, r24
 4ee:	48 70       	andi	r20, 0x08	; 8
 4f0:	83 2f       	mov	r24, r19
 4f2:	84 70       	andi	r24, 0x04	; 4
 4f4:	84 2b       	or	r24, r20
 4f6:	22 70       	andi	r18, 0x02	; 2
 4f8:	82 2b       	or	r24, r18
 4fa:	94 70       	andi	r25, 0x04	; 4
 4fc:	89 2b       	or	r24, r25
 4fe:	41 f4       	brne	.+16     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 500:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <strikes>
 504:	8f 5f       	subi	r24, 0xFF	; 255
 506:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <strikes>
 50a:	82 e0       	ldi	r24, 0x02	; 2
 50c:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <state_sensor>
 510:	80 e0       	ldi	r24, 0x00	; 0
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	08 95       	ret

00000516 <__vector_19>:
 516:	1f 92       	push	r1
 518:	0f 92       	push	r0
 51a:	0f b6       	in	r0, 0x3f	; 63
 51c:	0f 92       	push	r0
 51e:	11 24       	eor	r1, r1
 520:	8f 93       	push	r24
 522:	8e b5       	in	r24, 0x2e	; 46
 524:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <receivedData>
 528:	8f 91       	pop	r24
 52a:	0f 90       	pop	r0
 52c:	0f be       	out	0x3f, r0	; 63
 52e:	0f 90       	pop	r0
 530:	1f 90       	pop	r1
 532:	18 95       	reti

00000534 <TimerSet>:
 534:	60 93 45 01 	sts	0x0145, r22	; 0x800145 <_avr_timer_M>
 538:	70 93 46 01 	sts	0x0146, r23	; 0x800146 <_avr_timer_M+0x1>
 53c:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <_avr_timer_M+0x2>
 540:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <_avr_timer_M+0x3>
 544:	60 93 79 01 	sts	0x0179, r22	; 0x800179 <_avr_timer_cntcurr>
 548:	70 93 7a 01 	sts	0x017A, r23	; 0x80017a <_avr_timer_cntcurr+0x1>
 54c:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <_avr_timer_cntcurr+0x2>
 550:	90 93 7c 01 	sts	0x017C, r25	; 0x80017c <_avr_timer_cntcurr+0x3>
 554:	08 95       	ret

00000556 <TimerOn>:
 556:	8b e0       	ldi	r24, 0x0B	; 11
 558:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 55c:	8d e7       	ldi	r24, 0x7D	; 125
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 564:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 568:	82 e0       	ldi	r24, 0x02	; 2
 56a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 56e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 572:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 576:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
 57a:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
 57e:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
 582:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
 586:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <_avr_timer_cntcurr>
 58a:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <_avr_timer_cntcurr+0x1>
 58e:	a0 93 7b 01 	sts	0x017B, r26	; 0x80017b <_avr_timer_cntcurr+0x2>
 592:	b0 93 7c 01 	sts	0x017C, r27	; 0x80017c <_avr_timer_cntcurr+0x3>
 596:	8f b7       	in	r24, 0x3f	; 63
 598:	80 68       	ori	r24, 0x80	; 128
 59a:	8f bf       	out	0x3f, r24	; 63
 59c:	08 95       	ret

0000059e <__vector_13>:
 59e:	1f 92       	push	r1
 5a0:	0f 92       	push	r0
 5a2:	0f b6       	in	r0, 0x3f	; 63
 5a4:	0f 92       	push	r0
 5a6:	11 24       	eor	r1, r1
 5a8:	8f 93       	push	r24
 5aa:	9f 93       	push	r25
 5ac:	af 93       	push	r26
 5ae:	bf 93       	push	r27
 5b0:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <_avr_timer_cntcurr>
 5b4:	90 91 7a 01 	lds	r25, 0x017A	; 0x80017a <_avr_timer_cntcurr+0x1>
 5b8:	a0 91 7b 01 	lds	r26, 0x017B	; 0x80017b <_avr_timer_cntcurr+0x2>
 5bc:	b0 91 7c 01 	lds	r27, 0x017C	; 0x80017c <_avr_timer_cntcurr+0x3>
 5c0:	01 97       	sbiw	r24, 0x01	; 1
 5c2:	a1 09       	sbc	r26, r1
 5c4:	b1 09       	sbc	r27, r1
 5c6:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <_avr_timer_cntcurr>
 5ca:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <_avr_timer_cntcurr+0x1>
 5ce:	a0 93 7b 01 	sts	0x017B, r26	; 0x80017b <_avr_timer_cntcurr+0x2>
 5d2:	b0 93 7c 01 	sts	0x017C, r27	; 0x80017c <_avr_timer_cntcurr+0x3>
 5d6:	89 2b       	or	r24, r25
 5d8:	8a 2b       	or	r24, r26
 5da:	8b 2b       	or	r24, r27
 5dc:	99 f4       	brne	.+38     	; 0x604 <__vector_13+0x66>
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <TimerFlag>
 5e4:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
 5e8:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
 5ec:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
 5f0:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
 5f4:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <_avr_timer_cntcurr>
 5f8:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <_avr_timer_cntcurr+0x1>
 5fc:	a0 93 7b 01 	sts	0x017B, r26	; 0x80017b <_avr_timer_cntcurr+0x2>
 600:	b0 93 7c 01 	sts	0x017C, r27	; 0x80017c <_avr_timer_cntcurr+0x3>
 604:	bf 91       	pop	r27
 606:	af 91       	pop	r26
 608:	9f 91       	pop	r25
 60a:	8f 91       	pop	r24
 60c:	0f 90       	pop	r0
 60e:	0f be       	out	0x3f, r0	; 63
 610:	0f 90       	pop	r0
 612:	1f 90       	pop	r1
 614:	18 95       	reti

00000616 <main>:

//////////////////////////////////////////////////////////////////////////

int main(void)
{
 616:	cf 93       	push	r28
 618:	df 93       	push	r29
 61a:	00 d0       	rcall	.+0      	; 0x61c <main+0x6>
 61c:	00 d0       	rcall	.+0      	; 0x61e <main+0x8>
 61e:	00 d0       	rcall	.+0      	; 0x620 <main+0xa>
 620:	cd b7       	in	r28, 0x3d	; 61
 622:	de b7       	in	r29, 0x3e	; 62

	DDRA = 0x0F; PORTA = 0xF0; //PORTA  is an output
 624:	8f e0       	ldi	r24, 0x0F	; 15
 626:	81 b9       	out	0x01, r24	; 1
 628:	80 ef       	ldi	r24, 0xF0	; 240
 62a:	82 b9       	out	0x02, r24	; 2
	DDRB = 0x00; PORTB = 0xFF;// PORTB input
 62c:	14 b8       	out	0x04, r1	; 4
 62e:	8f ef       	ldi	r24, 0xFF	; 255
 630:	85 b9       	out	0x05, r24	; 5
	DDRC = 0x00; PORTC = 0xFF;
 632:	17 b8       	out	0x07, r1	; 7
 634:	88 b9       	out	0x08, r24	; 8
	
	static task task1 ,task2, task3;//, task4;
	task *tasks[] = { &task1 ,&task2, &task3};//, &task4};
 636:	86 e0       	ldi	r24, 0x06	; 6
 638:	e9 e4       	ldi	r30, 0x49	; 73
 63a:	f1 e0       	ldi	r31, 0x01	; 1
 63c:	de 01       	movw	r26, r28
 63e:	11 96       	adiw	r26, 0x01	; 1
 640:	01 90       	ld	r0, Z+
 642:	0d 92       	st	X+, r0
 644:	8a 95       	dec	r24
 646:	e1 f7       	brne	.-8      	; 0x640 <main+0x2a>
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	
	//task1 - for the blue tooth input
	task1.state = bluetooth_Init;
 648:	e6 e6       	ldi	r30, 0x66	; 102
 64a:	f1 e0       	ldi	r31, 0x01	; 1
 64c:	10 82       	st	Z, r1
	task1.period = 100;
 64e:	84 e6       	ldi	r24, 0x64	; 100
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	a0 e0       	ldi	r26, 0x00	; 0
 654:	b0 e0       	ldi	r27, 0x00	; 0
 656:	81 83       	std	Z+1, r24	; 0x01
 658:	92 83       	std	Z+2, r25	; 0x02
 65a:	a3 83       	std	Z+3, r26	; 0x03
 65c:	b4 83       	std	Z+4, r27	; 0x04
	task1.elapsedTime = task1.period;
 65e:	85 83       	std	Z+5, r24	; 0x05
 660:	96 83       	std	Z+6, r25	; 0x06
 662:	a7 83       	std	Z+7, r26	; 0x07
 664:	b0 87       	std	Z+8, r27	; 0x08
	task1.TickFct = &SMbluetooth;
 666:	21 eb       	ldi	r18, 0xB1	; 177
 668:	30 e0       	ldi	r19, 0x00	; 0
 66a:	32 87       	std	Z+10, r19	; 0x0a
 66c:	21 87       	std	Z+9, r18	; 0x09

	//task2 - for the menu input
	task2.state = menu_Init;
 66e:	eb e5       	ldi	r30, 0x5B	; 91
 670:	f1 e0       	ldi	r31, 0x01	; 1
 672:	10 82       	st	Z, r1
	task2.period = 100;
 674:	81 83       	std	Z+1, r24	; 0x01
 676:	92 83       	std	Z+2, r25	; 0x02
 678:	a3 83       	std	Z+3, r26	; 0x03
 67a:	b4 83       	std	Z+4, r27	; 0x04
	task2.elapsedTime = task2.period;
 67c:	85 83       	std	Z+5, r24	; 0x05
 67e:	96 83       	std	Z+6, r25	; 0x06
 680:	a7 83       	std	Z+7, r26	; 0x07
 682:	b0 87       	std	Z+8, r27	; 0x08
	task2.TickFct = &SMmenu;
 684:	20 e1       	ldi	r18, 0x10	; 16
 686:	31 e0       	ldi	r19, 0x01	; 1
 688:	32 87       	std	Z+10, r19	; 0x0a
 68a:	21 87       	std	Z+9, r18	; 0x09

	//task3 - for the sensor input
	task3.state = sensor_Init;
 68c:	e0 e5       	ldi	r30, 0x50	; 80
 68e:	f1 e0       	ldi	r31, 0x01	; 1
 690:	10 82       	st	Z, r1
	task3.period = 100;
 692:	81 83       	std	Z+1, r24	; 0x01
 694:	92 83       	std	Z+2, r25	; 0x02
 696:	a3 83       	std	Z+3, r26	; 0x03
 698:	b4 83       	std	Z+4, r27	; 0x04
	task3.elapsedTime = task3.period;
 69a:	85 83       	std	Z+5, r24	; 0x05
 69c:	96 83       	std	Z+6, r25	; 0x06
 69e:	a7 83       	std	Z+7, r26	; 0x07
 6a0:	b0 87       	std	Z+8, r27	; 0x08
	task3.TickFct = &SMSensor;
 6a2:	83 e8       	ldi	r24, 0x83	; 131
 6a4:	91 e0       	ldi	r25, 0x01	; 1
 6a6:	92 87       	std	Z+10, r25	; 0x0a
 6a8:	81 87       	std	Z+9, r24	; 0x09
	task4.elapsedTime = task4.period;
	task4.TickFct = &SMmotor;*.


	/*Initializations*/
	TimerSet(100);
 6aa:	64 e6       	ldi	r22, 0x64	; 100
 6ac:	70 e0       	ldi	r23, 0x00	; 0
 6ae:	80 e0       	ldi	r24, 0x00	; 0
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	40 df       	rcall	.-384    	; 0x534 <TimerSet>
	TimerOn();
 6b4:	50 df       	rcall	.-352    	; 0x556 <TimerOn>
	SPI_MasterInit();//so we can send data to the LCD.
 6b6:	a8 dd       	rcall	.-1200   	; 0x208 <SPI_MasterInit>
	initUSART(0);//using usart port 0
 6b8:	80 e0       	ldi	r24, 0x00	; 0
 6ba:	14 dd       	rcall	.-1496   	; 0xe4 <initUSART>
	game_state = 0x01;
 6bc:	81 e0       	ldi	r24, 0x01	; 1
 6be:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <game_state>
	SPI_MasterTransmit(game_state);
 6c2:	a7 dd       	rcall	.-1202   	; 0x212 <SPI_MasterTransmit>
 6c4:	7e 01       	movw	r14, r28
 6c6:	87 e0       	ldi	r24, 0x07	; 7
 6c8:	e8 0e       	add	r14, r24
 6ca:	f1 1c       	adc	r15, r1
 6cc:	de 01       	movw	r26, r28
 6ce:	11 96       	adiw	r26, 0x01	; 1
 6d0:	6d 01       	movw	r12, r26
 6d2:	f6 01       	movw	r30, r12

	//////////////////////////////////////////////////////////////////////////
	unsigned short i;
	while(1){
		for (i = 0; i < numTasks; i++){
			if (tasks[i]->elapsedTime == tasks[i]->period){
 6d4:	01 91       	ld	r16, Z+
 6d6:	11 91       	ld	r17, Z+
 6d8:	6f 01       	movw	r12, r30
 6da:	d8 01       	movw	r26, r16
 6dc:	15 96       	adiw	r26, 0x05	; 5
 6de:	4d 91       	ld	r20, X+
 6e0:	5d 91       	ld	r21, X+
 6e2:	6d 91       	ld	r22, X+
 6e4:	7c 91       	ld	r23, X
 6e6:	18 97       	sbiw	r26, 0x08	; 8
 6e8:	11 96       	adiw	r26, 0x01	; 1
 6ea:	8d 91       	ld	r24, X+
 6ec:	9d 91       	ld	r25, X+
 6ee:	0d 90       	ld	r0, X+
 6f0:	bc 91       	ld	r27, X
 6f2:	a0 2d       	mov	r26, r0
 6f4:	48 17       	cp	r20, r24
 6f6:	59 07       	cpc	r21, r25
 6f8:	6a 07       	cpc	r22, r26
 6fa:	7b 07       	cpc	r23, r27
 6fc:	81 f4       	brne	.+32     	; 0x71e <main+0x108>
 6fe:	f8 01       	movw	r30, r16
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 700:	80 81       	ld	r24, Z
 702:	01 84       	ldd	r0, Z+9	; 0x09
 704:	f2 85       	ldd	r31, Z+10	; 0x0a
 706:	e0 2d       	mov	r30, r0
 708:	08 2e       	mov	r0, r24
 70a:	00 0c       	add	r0, r0
 70c:	99 0b       	sbc	r25, r25
 70e:	09 95       	icall
 710:	d8 01       	movw	r26, r16
 712:	8c 93       	st	X, r24
 714:	f8 01       	movw	r30, r16
				tasks[i]->elapsedTime = 0;
 716:	15 82       	std	Z+5, r1	; 0x05
 718:	16 82       	std	Z+6, r1	; 0x06
 71a:	17 82       	std	Z+7, r1	; 0x07
 71c:	10 86       	std	Z+8, r1	; 0x08
 71e:	f8 01       	movw	r30, r16
			}
			tasks[i]->elapsedTime += 100; //value is gcd
 720:	85 81       	ldd	r24, Z+5	; 0x05
 722:	96 81       	ldd	r25, Z+6	; 0x06
 724:	a7 81       	ldd	r26, Z+7	; 0x07
 726:	b0 85       	ldd	r27, Z+8	; 0x08
 728:	8c 59       	subi	r24, 0x9C	; 156
 72a:	9f 4f       	sbci	r25, 0xFF	; 255
 72c:	af 4f       	sbci	r26, 0xFF	; 255
 72e:	bf 4f       	sbci	r27, 0xFF	; 255
 730:	85 83       	std	Z+5, r24	; 0x05
 732:	96 83       	std	Z+6, r25	; 0x06
 734:	a7 83       	std	Z+7, r26	; 0x07
 736:	b0 87       	std	Z+8, r27	; 0x08
 738:	ce 14       	cp	r12, r14
	SPI_MasterTransmit(game_state);

	//////////////////////////////////////////////////////////////////////////
	unsigned short i;
	while(1){
		for (i = 0; i < numTasks; i++){
 73a:	df 04       	cpc	r13, r15
 73c:	51 f6       	brne	.-108    	; 0x6d2 <main+0xbc>
 73e:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <TimerFlag>
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 100; //value is gcd
		}
		while(!TimerFlag);
 742:	88 23       	and	r24, r24
 744:	e1 f3       	breq	.-8      	; 0x73e <main+0x128>
 746:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <TimerFlag>
		TimerFlag = 0;
 74a:	c0 cf       	rjmp	.-128    	; 0x6cc <main+0xb6>

0000074c <__tablejump2__>:
		
		
	}
 74c:	ee 0f       	add	r30, r30
 74e:	ff 1f       	adc	r31, r31
 750:	00 24       	eor	r0, r0
 752:	00 1c       	adc	r0, r0
 754:	0b be       	out	0x3b, r0	; 59
 756:	07 90       	elpm	r0, Z+
 758:	f6 91       	elpm	r31, Z
 75a:	e0 2d       	mov	r30, r0
 75c:	09 94       	ijmp

0000075e <_exit>:
 75e:	f8 94       	cli

00000760 <__stop_program>:
 760:	ff cf       	rjmp	.-2      	; 0x760 <__stop_program>
